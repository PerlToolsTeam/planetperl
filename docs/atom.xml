<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Planet Perl</title>
  <link rel="alternate" href="https://perl.theplanetarium.org/" type="text/html"/>
  <subtitle>There's More Than One Way To Aggregate It</subtitle>
  <author>
    <name>Dave Cross</name>
    <email></email>
  </author>
  <updated>2022-10-07T04:55:37Z</updated>
  <link rel="self" href="https://perl.theplanetarium.org/" type="application/atom+xml"/>
  <id>https://perl.theplanetarium.org/</id>
  <entry>
    <title>How I use Yabsm to Manage my Btrfs Snapshots</title>
    <link rel="alternate" href="https://dev.to/nicholasbhubbard/how-i-use-yabsm-to-manage-my-btrfs-snapshots-19a3" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>I am the author of <a href="https://metacpan.org/dist/App-Yabsm/view/bin/yabsm">Yabsm (yet another btrfs snapshot manager)</a>, which is <a href="https://metacpan.org/dist/App-Yabsm/source/bin/yabsm">written in Perl</a>, and I will explain how I use Yabsm to manage my Btrfs snapshots.</p>

<p>This article is meant to supplement the official documentation linked above, and assumes a basic understanding of Linux's <a href="https://en.wikipedia.org/wiki/Btrfs">Btrfs</a> filesystem.</p>

<p>Please note that Yabsm can be configured to suit many different use cases other than the one described here.</p>

<p><a id="orgfe91a36"/></p>

<h1>
  
  
  Snapshots vs Backups
</h1>

<p>Before we go on, let's clear up the difference between a snapshot and a backup.</p>

<p>A snapshot is a read-only nested <a href="https://btrfs.readthedocs.io/en/latest/Subvolumes.html">subvolume</a> created with a command such as <code>btrfs subvolume snapshot -r $SUBVOLUME $DEST</code>. <strong>SNAPSHOTS ARE NOT RELIABLE BACKUPS!</strong> If a subvolume is corrupted then all snapshots of that subvolume will also be corrupted.</p>

<p>A backup is an <a href="https://btrfs.wiki.kernel.org/index.php/Incremental_Backup">incremental backup</a> sent to some location via Btrfs's <a href="https://btrfs.readthedocs.io/en/latest/Send-receive.html">send/receive</a> commands. These backups will not be corrupted if the subvolume being backed up is corrupted.</p>

<p><a id="org449a345"/></p>

<h1>
  
  
  My Btrfs Filesystem
</h1>

<p>I like to have just one top-level Btrfs subvolume mounted at <code>/</code>. This allows me to snapshot my entire system (excluding nested subvolumes) by running <code>btrfs subvolume snapshot -r / $DEST</code>.</p>

<p><a id="org028bea9"/></p>

<h1>
  
  
  My Yabsm Config
</h1>

<p>My configuration is based on the philosophy that because snapshots are both valuable and cheap, it makes sense to take a lot of snapshots.</p>

<p>Here is my <code>/etc/yabsm.conf</code>:</p>

<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>yabsm_dir=/.snapshots/yabsm

subvol root_subvol {
    mountpoint=/
}

snap root {
    subvol=root_subvol

    timeframes=5minute,hourly,daily
    5minute_keep=36
    hourly_keep=72
    daily_times=15:00,23:59
    daily_keep=62
}

ssh_backup slackmac {
    subvol=root_subvol
    ssh_dest=slackmac
    dir=/.snapshots/yabsm-slacktop

    timeframes=daily
    daily_times=23:59
    daily_keep=365
}

local_backup easystore {
    subvol=root_subvol
    dir=/mnt/easystore/backups/yabsm-slacktop

    timeframes=daily
    daily_times=23:59
    daily_keep=365
}
</code></pre>

</div>

<p><a id="orga0d51da"/></p>

<h3>
  
  
  Yabsm Dir
</h3>

<p>I use the traditional <code>/.snapshots/yabsm</code> directory as my <code>yabsm_dir</code>, which is the location that my snapshots will reside. Yabsm will also use this directory for storing data necessary for performing SSH and local backups.</p>

<p><a id="org40ab1c1"/></p>

<h3>
  
  
  Subvol
</h3>

<p>As I mentioned earlier, I only have one top-level Btrfs subvolume, so I only need to define one <code>subvol</code> in my Yabsm config, which I name <code>root_subvol</code>.</p>

<p><a id="org77c9f84"/></p>

<h3>
  
  
  Snap
</h3>

<p>I define one <a href="https://metacpan.org/dist/App-Yabsm/view/bin/yabsm#Snaps">snap</a> named <em>root</em> that tells Yabsm I want to take snapshots of <code>root_subvol</code> in the <em>5minute</em>, <em>hourly</em>, and <em>daily</em> <a href="https://metacpan.org/dist/App-Yabsm/view/bin/yabsm#Timeframes">timeframe categories</a>.</p>

<p>In the <em>5minute</em> timeframe category I keep 36 snapshots. This lets me go to any state of my machine in the last 3 hours in 5 minute increments. I use the <em>5minute</em> category because it gives me a valuable safety net. How many times have you broken your code that was working 20 minutes ago? If you take <em>5minute</em> snapshots then you can easily go back to the state of that code 20 minutes ago.</p>

<p>In the <em>hourly</em> timeframe I keep 72 snapshots, which allows me to go back 3 days in hourly increments. How many times have you broken code that was working 2 days ago? If you take <em>hourly</em> snapshots (and keep enough of them), you can go back through the state of your machine from 2 days ago, in 1 hour increments.</p>

<p>In the <em>daily</em> timeframe category I keep 62 snapshots taken at midnight (23:59) and midafternoon (15:00). This gives me two snapshots per day in the last month.</p>

<p>Please note that there is also a <code>weekly</code> and <code>monthly</code> timeframe category.</p>

<p><a id="org41e4eb4"/></p>

<h3>
  
  
  SSH Backup
</h3>

<p>I define one <a href="https://metacpan.org/dist/App-Yabsm/view/bin/yabsm#SSH-Backups">ssh_backup</a> named <em>slackmac</em> that backs up my system to my old MacBook running Slackware.</p>

<p>The <em>ssh_dest</em> value is set to <em>slackmac</em>, which is a host defined in the <em>yabsm</em> user's <code>$HOME/.ssh/config</code> file. (Yabsm runs as a daemon process, using the special username <code>yabsm</code>.)</p>

<p>The <em>dir</em> value is set to the directory on <em>slackmac</em> where the backups will be located.</p>

<p>I perform this <em>ssh_backup</em> only in the <em>daily</em> timeframe category, backing up every night at midnight. I keep 365 of these backups so I can go back an entire year.</p>

<p><a id="orgc5909cb"/></p>

<h3>
  
  
  Local Backup
</h3>

<p>I define one <a href="https://metacpan.org/dist/App-Yabsm/view/bin/yabsm#Local-Backups">local_backup</a> named <code>easystore</code> that backs up my system to my EasyStore external hard drive.</p>

<p>The hard drive is mounted at <code>/mnt/easystore</code>, and I keep my backups in the <code>/backups/yabsm-slacktop</code> directory on the hard drive.</p>

<p>Just like my <code>slackmac</code> <em>ssh_backup</em>, I perform my <em>local_backup</em> only in the <code>daily</code> timeframe category, every night at midnight.</p>

<p><a id="orgb9f813e"/></p>

<h1>
  
  
  Finding Snapshots
</h1>

<p>Yabsm provides the <a href="https://metacpan.org/dist/App-Yabsm/view/bin/yabsm#Finding-Snapshots">find</a> command that I use to jump around to different snapshots and backups. The <em>find</em> command takes two arguments, the first is the name of any of your <em>snaps</em>, <em>ssh_backups</em>, or <em>local_backups</em>. The second argument is a query. The different kinds of queries are all documented in the link above.</p>

<p>Instead of repeating the documentation, let's break down a practical example of the <em>find</em> command's usage.</p>

<p>How many times have you broken code that worked 30 minutes ago? Because I take <em>5minute</em> snapshots I can easily get back the state of the code 30 minutes ago.</p>

<p>An example:</p>

<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>$ diff "$(yabsm find root back-30-mins)/$HOME/projects/foo/script.sh" $HOME/projects/foo/foo.sh
</code></pre>

</div>

<p>This command will show the <code>diff</code> output of the <code>$HOME/projects/foo/foo.sh</code> file with this same file that was snapshotted 30 minutes ago. We can use this output to help figure out what we messed up.</p>

<p>The command <code>yabsm find root back-30-mins</code> will output the path to a snapshot for the <em>snap</em> named <em>root</em> that was taken 30 minutes ago. In the example we use our shell's <a href="https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html">parameter expansion</a> feature to create a string that appends the path to <code>foo.sh</code> to the output of the <code>yabsm find</code> command. This is a powerful pattern!</p>

<p>The find command can do more than find a snapshot taken N units ago, it can also:</p>

<ul>
<li>  Find the newest or oldest snapshot/backup.</li>
<li>  Find a snapshot/backup taken on a specific day and time.</li>
<li>  Find all the snapshots/backups taken before or after a certain time.</li>
<li>  Find all the snapshots/backups taken between two times.</li>
<li>  Find all snapshots/backups.</li>
</ul>

<p>The output of <code>yabsm find --help</code> shows some examples:</p>

<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>usage: yabsm &lt;find|f&gt; [--help] [&lt;SNAP|SSH_BACKUP|LOCAL_BACKUP&gt; &lt;QUERY&gt;]

see the section "Finding Snapshots" in 'man yabsm' for a detailed explanation on
how to find snapshots and backups.

examples:
    yabsm find home_snap back-10-hours
    yabsm f root_ssh_backup newest
    yabsm f home_local_backup oldest
    yabsm f home_snap 'between b-10-mins 15:45'
    yabsm f root_snap 'after back-2-days'
    yabsm f root_local_backup 'before b-14-d'
</code></pre>

</div>

<p><a id="orgdac6334"/></p>

<h1>
  
  
  Synopsis
</h1>

<p>Yabsm is a powerful tool for managing your Btrfs snapshots. If you are interested in using Yabsm, then I recommend you consult the <a href="https://metacpan.org/release/NHUBBARD/App-Yabsm-3.12/view/bin/yabsm">official documentation</a>.</p>

</div>
    </content>
    <author>
      <name>Nicholas Hubbard</name>
    </author>
    <id>https://dev.to/nicholasbhubbard/how-i-use-yabsm-to-manage-my-btrfs-snapshots-19a3</id>
    <published>2022-10-06T23:02:57Z</published>
    <updated>2022-10-06T23:02:57Z</updated>
    <category term="btrfs"/>
    <category term="perl"/>
  </entry>
  <entry>
    <title>Building a Perlanet Container</title>
    <link rel="alternate" href="https://perlhacks.com/2022/10/building-a-perlanet-container/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>I’m a dinosaur who still believes that web feeds are a pretty neat idea. I wrote and maintain <a href="https://metacpan.org/pod/perlanet">perlanet</a> (a Perl program for aggregating web feeds into a new feed – and building a web site based on that new feed) and I use it to build <a href="https://theplanetarium.org/">a few sites on topics I’m interested in</a>.</p>
<p>Last year, I worked out a way to use GitHub Actions to <a href="https://dev.to/davorg/github-actions-for-semi-static-web-sites-597g">rebuild these sites automatically</a> every few hours – thereby enabling me to host the sites on GitHub Pages (I still think it’s a useful technique, but I sometimes worry slightly about the large number of commits those repos have – someone at GitHub must surely notice one day!)</p>
<p>Yesterday, I was doing some light maintenance on one of those sites when I realised that each rebuild of these sites was taking a significant time (by which I mean four or five minutes) and started wondering if there was a way to speed them up and use less of GitHub’s resources. The problem is that Perlanet is a pretty hefty module and each rebuild was installing that module (and, therefore, dozens of other modules) on a pristine Ubuntu container.</p>
<p>When you say it like that, the solution is obvious.</p>
<p>You don’t need to run your GitHub Actions on the standard containers that GitHub supplies. You can run them on any container that’s available from any public container hosting service. So the solution was to build a Perlanet container and run the jobs using that instead. So that’s how I spent an hour or so yesterday.</p>
<p>Here’s the Dockerfile I ended up with:</p><pre class="urvanov-syntax-highlighter-plain-tag">FROM perl:latest

RUN apt-get update &amp;&amp; \
    apt-get -y upgrade &amp;&amp; \ 
    apt-get install -y build-essential &amp;&amp; \
    apt-get install -y cpanminus libtidy-dev libxml++2.6-dev libhtml-tidy-perl &amp;&amp; \
    cpanm --notest Test::Exception &amp;&amp; \
    cpanm --notest Perlanet &amp;&amp; \
    cpanm --notest LWP::Protocol::https</pre><p>It’s (obviously) <a href="https://github.com/davorg/perl-perlanet-docker">available on GitHub</a> in case anyone wants to improve on my rather ropey knowledge of Docker.</p>
<p>I explicitly install Test::Exception because HTML::Tidy (one of Perlanet’s pre-requisites) needs it and I can’t work out why the standard installation procedure isn’t installing it. And while, LWP::Protocol::https is, strictly speaking, not required by Perlanet, you wouldn’t get very far on the modern web if you only accessed web feeds that are available over HTTP.</p>
<p>A little bit of Docker Hub set-up and the container is <a href="https://hub.docker.com/r/davorg/perl-perlanet">available for everyone to use</a> (and rebuilt automatically whenever I commit to the repo).</p>
<p>It was then just a case of changing my GitHub Actions to use my container. Here’s an example of <a href="https://github.com/davorg/planetdavorg/commit/5b65ce407e89dd16e74ad4b417b104c43dca96ef">one of the commits</a> that did that.</p>
<p>I realise I’m pretty late to the party here, but I think this is a useful pattern. If you have a Perl library (or, indeed, any other software) that exists to provide a service to users then it’s a great idea to provide a containerised version of that software.</p>
<p>And I’m happy to report that my site rebuilds have gone from 4-5 minutes to about 45 seconds.</p>
<p>The post <a rel="nofollow" href="https://perlhacks.com/2022/10/building-a-perlanet-container/">Building a Perlanet Container</a> appeared first on <a rel="nofollow" href="https://perlhacks.com">Perl Hacks</a>.</p>
</div>
    </content>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>I’m a dinosaur who still believes that web feeds are a pretty neat idea. I wrote and maintain perlanet (a Perl program for aggregating web feeds into a new feed – and building a web site based on that new feed) and I use it to build a few sites on topics I’m interested in.… <a class="more-link" href="https://perlhacks.com/2022/10/building-a-perlanet-container/">Continue reading <span class="screen-reader-text">Building a Perlanet Container</span></a></p>
<p>The post <a rel="nofollow" href="https://perlhacks.com/2022/10/building-a-perlanet-container/">Building a Perlanet Container</a> appeared first on <a rel="nofollow" href="https://perlhacks.com">Perl Hacks</a>.</p>
</div>
    </summary>
    <author>
      <name>Dave Cross</name>
    </author>
    <id>https://perlhacks.com/?p=2076</id>
    <published>2022-10-06T09:43:46Z</published>
    <updated>2022-10-06T09:43:46Z</updated>
    <category term="Packaging"/>
    <category term="container"/>
    <category term="docker"/>
    <category term="packaging"/>
    <category term="perlanet"/>
    <category term="semi-static"/>
  </entry>
  <entry>
  <title>Adding GitHub Actions to Test2::Harness::UI</title>
  <summary type="html"><![CDATA[<p>
<a href="https://metacpan.org/dist/Test2-Harness-UI">Test2-Harness-UI</a> is a web interface for viewing and inspecting yath test logs.
It is still in development, but it (obviously) has some tests. Those tests will be executed by the <a href="http://www.cpantesters.org/">CPAN Testers</a>
<b>after</b> a new version was released, but we can shorten the feedback cycle by configuring a Continuous Integration (CI) system.
<p>
On GitHub it is usually GitHub Actions.
<p>
]]></summary>
  <updated>2022-10-06T08:30:01Z</updated>
  <link rel="alternate" type="text/html" href="https://perlmaven.com/adding-github-actions-to-test2-harness-ui"/>  <id>https://perlmaven.com/adding-github-actions-to-test2-harness-ui</id>
  <content type="html"><![CDATA[<p>
<a href="https://metacpan.org/dist/Test2-Harness-UI">Test2-Harness-UI</a> is a web interface for viewing and inspecting yath test logs.
It is still in development, but it (obviously) has some tests. Those tests will be executed by the <a href="http://www.cpantesters.org/">CPAN Testers</a>
<b>after</b> a new version was released, but we can shorten the feedback cycle by configuring a Continuous Integration (CI) system.
<p>
On GitHub it is usually GitHub Actions.
<p>
]]></content>
    <author>
      <name>Gabor Szabo</name>
    </author>
</entry>
  <entry>
    <title>The Weekly Challenge - Guest Contributions</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/guest-contribution/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">As you know, The Weekly Challenge, primarily focus on Perl and Raku. During the Week #018, we received solutions to The Weekly Challenge - 018 by Orestis Zekai in Python. It was pleasant surprise to receive solutions in something other than Perl and Raku. Ever since regular team members also started contributing in other languages like Ada, APL, Awk, BASIC, Bash, Bc, Befunge-93, Bourne Shell, BQN, Brainfuck, C3, C, CESIL, Chef, COBOL, Coconut, C Shell, C++, Clojure, Crystal, D, Dart, Dc, Elixir, Elm, Emacs Lisp, Erlang, Excel VBA, Fennel, Fish, Forth, Fortran, Gembase, GNAT, Go, Haskell, Haxe, HTML, Idris, IO, J, Janet, Java, JavaScript, Julia, Kotlin, Lisp, Logo, Lua, M4, Miranda, Modula 3, MMIX, Mumps, Myrddin, Nim, Nix, Node.</div>
    </content>
    <id>https://theweeklychallenge.org/blog/guest-contribution/</id>
    <published>2022-10-06T00:00:00Z</published>
    <updated>2022-10-06T00:00:00Z</updated>
  </entry>
  <entry>
    <title>Look mom I invented colors</title>
    <link rel="alternate" href="http://blogs.perl.org/users/lichtkind/2022/10/look-mom-i-invented-colors.html"/>
    <id>tag:blogs.perl.org,2022:/users/lichtkind//275.10912</id>
    <published>2022-10-05T02:53:48Z</published>
    <updated>2022-10-05T19:15:22Z</updated>
    <author>
        <name>lichtkind</name>
        <uri>http://www.lichtkind.de/</uri>
    </author>
    <category term="Chart" scheme="http://www.sixapart.com/ns/types#category"/>
    <category term="Color" scheme="http://www.sixapart.com/ns/types#category"/>
    <category term="Math" scheme="http://www.sixapart.com/ns/types#category"/>
    <category term="Perl 5" scheme="http://www.sixapart.com/ns/types#category"/>
    <content type="html" xml:lang="en" xml:base="http://blogs.perl.org/users/lichtkind/">
        <![CDATA[<p>Just released <a href="https://metacpan.org/release/LICHTKIND/Graphics-Toolkit-Color-1.00/view/lib/Graphics/Toolkit/Color.pm">Graphics::Toolkit::Color</a> for the purpose to create computationally harmonic color pallets (2-3 lines max for most needs). It is in fact a chunk out of <a href="https://metacpan.org/dist/Chart">Chart</a> I needed to reuse in other projects as the <a href="https://metacpan.org/dist/App-GUI-Harmonograph">Harmonograph</a>. And as you can see in the <a href="https://metacpan.org/pod/Graphics::Toolkit::Color#SEE-ALSO">SEE ALSO</a> section of the POD - I'm aware that there are plenty other modules doing, parts,  similar stuff or even more.</p>]]>
        <![CDATA[<p>The reason you should care nonetheless are (beside having good error messages, being well tested, documented and maintained and having almost no dependencies) are II (in words two). </p>

<p>1. It does more in the area advertised as: none linear gradients of chosen length, more options in computing arbitrary amount of complementary colors, more color mixing options or search for nearby standard colors.</p>

<p>2. It's more convenient. Yes it doesn't convert into all spaces (use <a href="https://metacpan.org/pod/Convert::Color">Convert::Color</a>  for that since Paul did great work there) and it only knows a few standards (use Robert's <a href="https://metacpan.org/pod/Graphics::ColorNames">Graphics::ColorNames</a> if you need more) because I chose only what you need to express yourself. For instance if you want a standard orange - just slightly darker say</p>

<p><code>  my $mo = Graphics::Toolkit::Color->new('orange')<br />
                                                     ->add( Lightness => -10 );</p>

<p>  # L as key would suffice</p>

<p>  my @colors = $mo->gradient_to('green', 10, 3);       <br />
</code></p>

<p>The second line creates you 10 color objects that give you a transition from your orange to standard green which are not equally distanced, but have a cubic distribution - meaning the first colors will all be near orange getting faster and faster away to green.<br />
And once your machine computed all colors you need just use map extract the wanted values:</p>

<p><code>  my @triplets = map {  [$_-> rgb ] } @colors;       <br />
</code></p>

<p>That may be RGB triples, HSL triplets, hex values or names. Because if you create</p>

<p><code>Graphics::Toolkit::Color->new([ 0, 0, 0 ])->name;</code><br />
 <br />
of course you get "black". I think you got the idea by now. </p>

<p>Joyful coding!</p>]]>
    </content>
</entry>
  <entry>
  <title>Using GitHub Actions (CI) to locate missing test dependencies in Dist::Zilla::PERLSRVDE</title>
  <summary type="html"><![CDATA[<p>
Earlier we saw how to <a href="/add-github-actions-to-graphics-toolkit-color">Add GitHub Actions (CI) to a Perl module</a> that is using Dist::Zilla.
This time I tried to do it another distribution found on <a href="https://cpan-digger.perlmaven.com/">CPAN::Digger</a>.
<p>
I found out that the command I used to install the dependencies did not install several modules needed for testing.
<p>
]]></summary>
  <updated>2022-10-05T18:30:01Z</updated>
  <link rel="alternate" type="text/html" href="https://perlmaven.com/using-ci-to-locate-missing-test-dependencies-in-dist-zilla-perlsrvde"/>  <id>https://perlmaven.com/using-ci-to-locate-missing-test-dependencies-in-dist-zilla-perlsrvde</id>
  <content type="html"><![CDATA[<p>
Earlier we saw how to <a href="/add-github-actions-to-graphics-toolkit-color">Add GitHub Actions (CI) to a Perl module</a> that is using Dist::Zilla.
This time I tried to do it another distribution found on <a href="https://cpan-digger.perlmaven.com/">CPAN::Digger</a>.
<p>
I found out that the command I used to install the dependencies did not install several modules needed for testing.
<p>
]]></content>
    <author>
      <name>Gabor Szabo</name>
    </author>
</entry>
  <entry>
  <title>OS</title>
  <summary type="html"><![CDATA[<p>
Videos on contributing to Open Source Perl projects.
<p>
]]></summary>
  <updated>2022-10-05T15:50:01Z</updated>
  <link rel="alternate" type="text/html" href="https://perlmaven.com/os"/>  <id>https://perlmaven.com/os</id>
  <content type="html"><![CDATA[<p>
Videos on contributing to Open Source Perl projects.
<p>
]]></content>
    <author>
      <name>Gabor Szabo</name>
    </author>
</entry>
  <entry>
  <title>Add GitHub Actions (CI) to Graphics-Toolkit-Color Perl module</title>
  <summary type="html"><![CDATA[<p>
Earlier we saw how to <a href="/cpan-digger-and-hacktoberfest">use CPAN::Digger to find a Perl project to contribute to</a>.
This time we used <a href="https://cpan-digger.perlmaven.com/">CPAN::Digger</a> and found the <a href="https://metacpan.org/dist/Graphics-Toolkit-Color">Graphics-Toolkit-Color</a>
project to which we added a GitHub Actions configuration file to enable Continuous Integration (CI) executing the tests of the module on every push.
<p>
]]></summary>
  <updated>2022-10-05T15:30:01Z</updated>
  <link rel="alternate" type="text/html" href="https://perlmaven.com/add-github-actions-to-graphics-toolkit-color"/>  <id>https://perlmaven.com/add-github-actions-to-graphics-toolkit-color</id>
  <content type="html"><![CDATA[<p>
Earlier we saw how to <a href="/cpan-digger-and-hacktoberfest">use CPAN::Digger to find a Perl project to contribute to</a>.
This time we used <a href="https://cpan-digger.perlmaven.com/">CPAN::Digger</a> and found the <a href="https://metacpan.org/dist/Graphics-Toolkit-Color">Graphics-Toolkit-Color</a>
project to which we added a GitHub Actions configuration file to enable Continuous Integration (CI) executing the tests of the module on every push.
<p>
]]></content>
    <author>
      <name>Gabor Szabo</name>
    </author>
</entry>
  <entry>
    <title>Feature release 1.32 of Date::Holidays Perl distribution</title>
    <link rel="alternate" href="https://dev.to/jonasbn/feature-release-of-dateholidays-perl-distribution-402h" type="text/html"/>
    <content type="html">&lt;p&gt;Due to a contribution from Wesley Schwengle (waterkip) I am happy to announce release 1.32 of the &lt;a href="https://metacpan.org/pod/Date::Holidays"&gt;Date::Holidays&lt;/a&gt; Perl distribution.&lt;/p&gt;

&lt;p&gt;The release introduces support for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://metacpan.org/pod/Date::Holidays::BQ"&gt;Date::Holidays::BQ&lt;/a&gt;, a distribution handling holidays for &lt;a href="https://en.wikipedia.org/wiki/Bonaire"&gt;Bonaire&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition the adapters for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://metacpan.org/pod/Date::Holidays::NL"&gt;Date::Holidays::NL&lt;/a&gt; (Netherlands), Date::Holidays::Adapter::NL&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://metacpan.org/pod/Date::Holidays::AW"&gt;Date::Holidays::AW&lt;/a&gt; (Aruba), Date::Holidays::Adapter::AW&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have had their:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;is_holiday&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_holiday_dt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Methods extended with support for additional parameters so the user can specify, the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;gov&lt;/code&gt; for handling special dates influencing government interaction&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;lang&lt;/code&gt; so language for holidays names can be specified&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please see the specific documentation for the 3 distributions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://metacpan.org/pod/Date::Holidays::AW"&gt;Date::Holidays::AW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metacpan.org/pod/Date::Holidays::BQ"&gt;Date::Holidays::BQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metacpan.org/pod/Date::Holidays::NL"&gt;Date::Holidays::NL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am happy that waterkip created the PR to have Date::Holidays support the use for the 3 and it outlines one of the features that would be nice to have implemented, namely support for localized holiday names (&lt;a href="https://github.com/jonasbn/perl-date-holidays/issues/12"&gt;#12&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Here is a short demo of inquiring whether 2022-12-25 is a holiday in the 3 respective calendars.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight perl"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env perl&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;strict&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;warnings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;Data::&lt;/span&gt;&lt;span class="nv"&gt;Dumper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;Date::&lt;/span&gt;&lt;span class="nv"&gt;Holidays&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$holidays_hashref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Date::&lt;/span&gt;&lt;span class="nv"&gt;Holidays&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;is_holiday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;year&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2022&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;month&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;day&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;countries&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;['&lt;/span&gt;&lt;span class="s1"&gt;nl&lt;/span&gt;&lt;span class="p"&gt;',&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bq&lt;/span&gt;&lt;span class="p"&gt;',&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aw&lt;/span&gt;&lt;span class="p"&gt;'],&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="bp"&gt;STDERR&lt;/span&gt; &lt;span class="nv"&gt;Dumper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$holidays_hashref&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight perl"&gt;&lt;code&gt;&lt;span class="nv"&gt;$VAR1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aw&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pasco di Nacemento&lt;/span&gt;&lt;span class="p"&gt;',&lt;/span&gt;
          &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bq&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pasco di Nacemento&lt;/span&gt;&lt;span class="p"&gt;',&lt;/span&gt;
          &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nl&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kerst&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change log for Date::Holidays.&lt;/p&gt;

&lt;h2&gt;
  
  
  1.32 2022-10-03 Feature release, update not required
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Introduction of Date::Holidays::Adapter::BQ for adapting Date::Holidays::BQ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for extra parameters for &lt;code&gt;is_holiday&lt;/code&gt; and &lt;code&gt;is_holiday_dt&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Date::Holidays::NL via Date::Holidays::Adapter::NL&lt;/li&gt;
&lt;li&gt;Date::Holidays::AW via Date::Holidays::Adapter::AW&lt;/li&gt;
&lt;li&gt;Date::Holidays::BQ via Date::Holidays::Adapter::BQ&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All via PR #70 (&lt;a href="https://github.com/jonasbn/perl-date-holidays/pull/70"&gt;https://github.com/jonasbn/perl-date-holidays/pull/70&lt;/a&gt;) by Wesley Schwengle (&lt;a class="mentioned-user" href="https://dev.to/waterkip"&gt;@waterkip&lt;/a&gt;) author of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Date::Holidays::NL&lt;/li&gt;
&lt;li&gt;Date::Holidays::AW&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Date::Holidays::BQ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fixed and clean up to Dist::Zilla configuration by &lt;a class="mentioned-user" href="https://dev.to/jonasbn"&gt;@jonasbn&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

</content>
    <author>
      <name>jonasbn</name>
    </author>
    <id>https://dev.to/jonasbn/feature-release-of-dateholidays-perl-distribution-402h</id>
    <published>2022-10-04T18:09:19Z</published>
    <updated>2022-10-04T18:09:19Z</updated>
    <category term="perl"/>
    <category term="release"/>
    <category term="cpan"/>
    <category term="opensource"/>
  </entry>
  <entry>
  <title>CPAN Digger and the Hacktoberfest</title>
  <summary type="html"><![CDATA[<p>
<a href="https://hacktoberfest.com/">Hacktoberfest</a> is a month-long event to encouage people to contribute to Open Source projects by creating useful Pull-Requests.
<p>
You can use the <a href="https://cpan-digger.perlmaven.com/">CPAN Digger</a> to find recently uploaded Perl CPAN distributions that can be contributed to.
<p>
]]></summary>
  <updated>2022-10-04T17:00:01Z</updated>
  <link rel="alternate" type="text/html" href="https://perlmaven.com/cpan-digger-and-hacktoberfest"/>  <id>https://perlmaven.com/cpan-digger-and-hacktoberfest</id>
  <content type="html"><![CDATA[<p>
<a href="https://hacktoberfest.com/">Hacktoberfest</a> is a month-long event to encouage people to contribute to Open Source projects by creating useful Pull-Requests.
<p>
You can use the <a href="https://cpan-digger.perlmaven.com/">CPAN Digger</a> to find recently uploaded Perl CPAN distributions that can be contributed to.
<p>
]]></content>
    <author>
      <name>Gabor Szabo</name>
    </author>
</entry>
  <entry>
  <title>Nominate heroes for the 2022 White Camel Awards</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/nominate-2022-white-camel"/>
  <id>tag:news.perlfoundation.org,2022-10-03:/post/nominate-2022-white-camel</id>
  <published>2022-10-03T23:00:00</published>
  <updated>2022-10-03T23:00:00</updated>
  <summary>
  <![CDATA[
     We're looking for nominations for the 2022 White Camel Awards that recognize significant non-technical achievement in the Perl community. Each year we recognize work in the broad categories of community, advocacy, and user groups. The Board will consider all nominations and will solicit feedback from the Advisory Board and the Perl Steering Council. To nominate someone, you can respond here with a name and your reasoning. As our community has 
   ]]>
  </summary>
  <author>
    <name>Makoto Nozaki</name>
  </author>
  <category term="Awards" scheme="http://www.sixapart.com/ns/types#category"/>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
     <p>We're looking for nominations for the 2022 White Camel Awards that recognize significant non-technical achievement in the Perl community. Each year we recognize work in the broad categories of community, advocacy, and user groups. The Board will consider all nominations and will solicit feedback from the Advisory Board and the Perl Steering Council.  </p>

<p>To nominate someone, you can respond here with a name and your reasoning. As our community has become more diverse, we request that the reasoning is written so that it’s understandable for those who do not know the nominee directly.</p>

<p>Previously, the awards were organized by brian d foy with The Perl Foundation. We appreciate brian’s leadership in the past years. The past awards recipients and their achievements are at https://www.perl.org/advocacy/white_camel/</p>

<p>Raku language awards will be arranged separately.</p>

    ]]>
  </content>
</entry>
  <entry>
    <title>Release 0.4.0 of my Perl Dist::Zilla GitHub Action</title>
    <link rel="alternate" href="https://dev.to/jonasbn/release-040-of-my-perl-distzilla-github-action-4e4a" type="text/html"/>
    <content type="html">&lt;p&gt;I have just made another release of &lt;a href="https://github.com/jonasbn/github-action-perl-dist-zilla"&gt;github-action-perl-dist-zilla&lt;br&gt;
&lt;/a&gt; making version 0.4.0 available in the &lt;a href="https://github.com/marketplace/actions/github-action-for-perl-s-dist-zilla"&gt;GitHub Marketplace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The release is an update of the core component Ebirah the Docker encapsulation of the magnificent Dist::Zilla distribution tool for Perl distributions.&lt;/p&gt;

&lt;h2&gt;
  
  
  0.4.0 2022-10-03 Maintenance release, update recommended
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Bumped &lt;a href="https://github.com/jonasbn/ebirah"&gt;Ebirah&lt;/a&gt; requirement from version 0.7.0 to 0.8.0. Which had the core component Dist::Zilla updated from version &lt;code&gt;6.017&lt;/code&gt; to &lt;code&gt;6.025&lt;/code&gt;. Please see change log for &lt;a href="https://github.com/jonasbn/ebirah"&gt;Ebirah&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;REF: &lt;a href="https://github.com/jonasbn/github-action-perl-dist-zilla/releases/tag/0.4.0"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</content>
    <author>
      <name>jonasbn</name>
    </author>
    <id>https://dev.to/jonasbn/release-040-of-my-perl-distzilla-github-action-4e4a</id>
    <published>2022-10-03T16:02:31Z</published>
    <updated>2022-10-03T16:02:31Z</updated>
    <category term="perl"/>
    <category term="githubaction"/>
    <category term="release"/>
    <category term="opensource"/>
  </entry>
  <entry>
    <title>#584 - Hacktoberfest &amp; Perl</title>
    <link rel="alternate" href="https://perlweekly.com/archive/584.html" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Hi there,</p>
<p><strong>Happy Hacktoberfest 2022 everyone !!!</strong></p>
<p>I am sure, most of you, already started hacking open source code. If not then you haven't missed the train yet. You still have plenty of time to submit at least <strong>4 Pull Requests</strong> to qualified repositories in <strong>GitHub</strong> or <strong>GitLab</strong>. If you are new to <strong>Hacktoberfest</strong> then I suggest you please take a look at <a href="https://hacktoberfest.com/participation">this page</a>.</p>
<p>The rule of the game has changed since I first participated in the year <strong>2015</strong>. I have received the specially designed <strong>T-shirt</strong> every year after completing the challenge ever since. As far as <strong>Perl</strong> is concerned, there are plenty of choices we have. However you have to make sure the open source project is taking part in the <strong>Hacktoberfest</strong> event. As mentioned in the official note, you have to be quick as only the first <strong>40,000</strong> participants who complete the challenge are eligible to receive the <strong>FREE T-shirt</strong>.</p>
<p>Almost all my opensource contributions are hosted on <a href="https://github.com/manwar">GitHub</a>, you are FREE to pick any from <strong>GitLab</strong> too. If you are like me, then you can pick and choose the participating repository from the <a href="https://github.com/topics/hacktoberfest?l=perl">list here</a>. Having said, if you are still not sure then I would recommend two fun open source projects, <a href="https://pullrequest.club/hello">Pull Request Club</a> run by <strong>Kivanc Yizan</strong> and <a href="https://theweeklychallenge.org">The Weekly Challenge</a>.</p>
<p>Do you miss <strong>London Perl Workshop</strong>?</p>
<p>There has been discussion started few days ago among the team members behind the <strong>LPW</strong>. We have an official <a href="http://blogs.perl.org/users/lpw/2022/09/london-perl-workshop-status-update-2023.html">announcement</a> requesting your opinions about the proposed <strong>LPW 2023</strong>. I sincerely request you all who participated in the past and would like to attend the event next year. Please do share with your friends too. I have already seen emails with suggestions, being one of the organiser. Thank you for your inputs, much appreciated.</p>
<p>Enjoy the rest of the newsletter.</p></div>
    </content>
    <id>https://perlweekly.com/archive/584.html</id>
    <published>2022-10-03T10:00:00Z</published>
    <updated>2022-10-03T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
    <title>Colin Crain › Perl Weekly Review #178</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/review-challenge-178/" type="text/html"/>
    <content type="text">( &amp;hellip;continues from previous week. )
Welcome to the Perl review pages for Week 178 of The Weekly Challenge! Here we will take the time to discuss the submissions offered up by the team, factor out some common methodologies that came up in those solutions, and highlight some of the unique approaches and unusual code created.
 ●︎ Why do we do these challenges? I suppose any reasonable answer to that question would come from a field as wide ranging and varied as the people who choose to join the team.</content>
    <id>https://theweeklychallenge.org/blog/review-challenge-178/</id>
    <published>2022-10-03T00:00:00Z</published>
    <updated>2022-10-03T00:00:00Z</updated>
  </entry>
  <entry>
    <title>RECAP - The Weekly Challenge - 184</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/recap-challenge-184/" type="text/html"/>
    <content type="text">TABLE OF CONTENTS  01. HEADLINES 02. STAR CONTRIBUTORS 03. CONTRIBUTION STATS 04. GUESTS 05. LANGUAGES 06. CENTURION CLUB 07. DAMIAN CONWAY&amp;rsquo;s CORNER 08. ANDREW SHITOV&amp;rsquo;s CORNER 09. PERL SOLUTIONS 10. RAKU SOLUTIONS 11. PERL &amp;amp; RAKU SOLUTIONS HEADLINES  Thank you Team PWC for your continuous support and encouragement.
STAR CONTRIBUTORS  Following members shared solutions to both tasks in Perl and Raku as well as blogged about it.</content>
    <id>https://theweeklychallenge.org/blog/recap-challenge-184/</id>
    <published>2022-10-03T00:00:00Z</published>
    <updated>2022-10-03T00:00:00Z</updated>
  </entry>
  <entry>
    <title>The Weekly Challenge - 185</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/perl-weekly-challenge-185/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">TABLE OF CONTENTS  01. HEADLINES 02. SPONSOR 03. RECAP 04. PERL REVIEW 05. RAKU REVIEW 06. CHART 07. NEW MEMBERS 08. GUESTS 09. TASK #1: MAC Address 10. TASK #2: Mask Code HEADLINES  Welcome to the Week #185 of The Weekly Challenge.
Today, we are giving away Token #8 to Kjetil Skotheim for the book, Learning Perl Exercises by brian d foy. I will share the details with you in a separate email.</div>
    </content>
    <id>https://theweeklychallenge.org/blog/perl-weekly-challenge-185/</id>
    <published>2022-10-03T00:00:00Z</published>
    <updated>2022-10-03T00:00:00Z</updated>
  </entry>
  <entry>
    <title>Release 0.8.0 of Ebirah</title>
    <link rel="alternate" href="https://dev.to/jonasbn/release-080-of-ebirah-596m" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>I have just uploaded Ebirah 0.8.0 to DockerHub.</p>

<p>I mentioned this upcoming release in by announcement on <a href="https://dev.to/jonasbn/release-070-of-ebirah-213n">release 0.7.0</a>. The release is a maintenance release updating the <a href="https://metacpan.org/pod/Dist::Zilla">Dist::Zilla</a> distribution acting as the core component in Ebirah from <code>6.017</code> to <code>6.025</code>. This just stabilize some of the issues I have observed with my various Perl distributions failing their CI jobs.</p>

<p>Next up an update to <a href="https://github.com/marketplace/actions/github-action-for-perl-s-dist-zilla">GitHub Action for Perl's Dist::Zilla</a> which is the GitHub action powered by Ebirah and used by my various Perl repositories.</p>

<p>Change log:</p>

<h2>
  
  
  0.8.0 2022-10-02 Maintenance release, update recommended
</h2>

<ul>
<li>This release updates the dependency: <a href="https://metacpan.org/pod/Dist::Zilla">Dist::Zilla</a> from version <code>6.017</code> to <code>6.025</code>, please see the <a href="https://metacpan.org/dist/Dist-Zilla/changes">change log</a> of <a href="https://metacpan.org/pod/Dist::Zilla">Dist::Zilla</a>
</li>
</ul>

</div>
    </content>
    <author>
      <name>jonasbn</name>
    </author>
    <id>https://dev.to/jonasbn/release-080-of-ebirah-596m</id>
    <published>2022-10-02T19:59:54Z</published>
    <updated>2022-10-02T19:59:54Z</updated>
    <category term="perl"/>
    <category term="docker"/>
    <category term="release"/>
    <category term="opensource"/>
  </entry>
  <entry>
    <title>Meet jp</title>
    <link rel="alternate" href="http://blogs.perl.org/users/stefan_adams/2022/10/meet-jp.html"/>
    <id>tag:blogs.perl.org,2022:/users/stefan_adams//2728.10911</id>
    <published>2022-10-01T07:33:40Z</published>
    <updated>2022-10-02T17:17:40Z</updated>
    <author>
        <name>Stefan Adams</name>
        <uri>http://stefan.adams.fm</uri>
    </author>
    <category term="mojoliciousjsoncli" label="mojolicious json cli" scheme="http://www.sixapart.com/ns/types#tag"/>
    <content type="html" xml:lang="en" xml:base="http://blogs.perl.org/users/stefan_adams/">
        <![CDATA[<h1><br /></h1><h2>Welcome</h2>

<p>Please welcome the latest JSON tool for the command line: <code>jp</code>!</p>

<p><code>jp</code> (mostly named from the <a href="https://mojolicious.org/">Mojolicious</a> class <a href="https://docs.mojolicious.org/Mojo/JSON/Pointer">Mojo::JSON::Pointer</a> that makes jp possible) is a command line tool for quickly extracting data from a JSON object.&nbsp; How many times do we get a complex JSON object from some command and we just need to extract a specific set of values from it?&nbsp; Every time!&nbsp; All the time!&nbsp; Often, people use basic tools like grep and sed.&nbsp; Most people reach for <code>jq</code>, but I find the syntax too cumbersome to use just to extract my desired data.&nbsp; I just want to use JSON Pointers and move on, but, indeed, sometimes JSON Pointers aren't even enough.&nbsp; <code>jp</code> really shines with some helpful command line arguments, a regular expression JSON Pointer syntax, and, finally, a Perl eval argument for total power.</p>

<h2>Get on with it</h2>

<p>Let's see <code>jp</code> work.&nbsp; Each example explainer links to the JSON Object used for the example.</p>

<p><a href="https://github.com/stefanadams/jp/blob/main/t/json1.json#L6">Here's the most basic use.</a></p>

<p><code>
$ jp /server/0/password &lt; t/json1.json</code></p><p><code>REDACTED_APIKEYfalse
</code></p>

<p>Now let's use that regex we hyped up a moment ago.  This simple regex has too much data to return (3 extracted JSON objects), <a href="https://github.com/stefanadams/jp/blob/main/t/json1.json#L2">so let's use a couple JSON Pointers and narrowly extract some data we can look at</a>.</p>

<p><code>
$ jp -r '/server/\d+' /hash/a /password &lt; t/json1.json</code></p><p><span style="font-size: 1em;">1       REDACTED_APIKEYfalse</span></p><p><span style="font-size: 1em;">2       REDACTED1_APIKEYtrue</span></p><p><span style="font-size: 1em;">3       REDACTED_APIKEYtrue</span></p>

<p>Well, that was fun and all, but let's get on with it. <a href="https://github.com/stefanadams/jp/blob/main/t/json1.json#L2">Let's do some case insensitive filtering looking for the default credentials in the list and create a colon-separate output that includes the JSON Pointer from whence they came.</a>.</p>

<p><code>
$ jp -ip -d: -E '$_-&gt;grep(sub{$_-&gt;jp("/isdefault")})' -r '/server/\d' /user /password &lt; t/json1.json</code></p><p><code>/server/1:0038137:REDACTED1_APIKEYtrue</code></p><p><code>/server/2:0038137:REDACTED_APIKEYtrue
</code></p>

<p><a href="https://github.com/stefanadams/jp/blob/main/t/json2.json#L1">In this final example showcasing the usefulness of <code>jp</code></a> we go after some GPS data where not all data is labeled the same.  And, on top of that, we sort the coordinates by latitude despite the varying coordinate labels.</p>

<p><code>
$ ./jp -S -U -p -r '/markers/\d' -E '$_-&gt;sort(sub{$a-&gt;jp("/location/0", "/position/0") &lt;=&gt; $b-&gt;jp("/location/0", "/position/0")})' /location /position &lt; t/json2.json</code></p><p><code>/markers/2      [40.7411595,-74.0097167]</code></p><p><code>/markers/0      [40.7414728,-74.0055813]</code></p><p><code>/markers/3      [40.7532822,-74.0010696]</code></p><p><code>/markers/1      [40.7565323,-73.9904037]
</code></p>

<h2>Parting words</h2>

<p>Download <code>jp</code>, read the Usage and Examples, and use <code>jp</code> to transform your life forever!  Contribute issues and pull requests via <a href="https://github.com/stefanadams/jp">Github</a>.</p>
]]>
        

    </content>
</entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-5418145070218798517</id>
    <published>2022-10-01T23:03:00.001+02:00</published>
    <updated>2022-10-01T23:03:43.531+02:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(cdxii) 13 great CPAN modules released last week</title>
    <content type="html">Updates for &lt;i&gt;great CPAN modules&lt;/i&gt; released last week. A module is considered &lt;i&gt;great&lt;/i&gt; if its favorites count is greater or equal than 12.&lt;br/&gt;&lt;br/&gt;&lt;ol&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/OLIVER/App-Netdisco-2.057006' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;App::Netdisco&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - An open source web-based network management tool. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.057006&lt;/strong&gt; on 2022-09-30&lt;/li&gt;  &lt;li&gt;Votes: 14&lt;/li&gt;  &lt;li&gt;Previous version: 2.057002 was 6 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/DWHEELER/App-Sqitch-v1.3.1' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;App::Sqitch&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Sensible database change management &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;v1.3.1&lt;/strong&gt; on 2022-10-01&lt;/li&gt;  &lt;li&gt;Votes: 41&lt;/li&gt;  &lt;li&gt;Previous version: v1.3.0 was 1 month, 20 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/RAZ/Cache-Memcached-Fast-0.28' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Cache::Memcached::Fast&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Perl client for memcached, in C language &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.28&lt;/strong&gt; on 2022-10-01&lt;/li&gt;  &lt;li&gt;Votes: 20&lt;/li&gt;  &lt;li&gt;Previous version: 0.27 was 1 year, 4 months, 10 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TOBYINK/Exporter-Tiny-1.004003' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Exporter::Tiny&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - an exporter with the features of Sub::Exporter but only core dependencies &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.004003&lt;/strong&gt; on 2022-09-30&lt;/li&gt;  &lt;li&gt;Votes: 21&lt;/li&gt;  &lt;li&gt;Previous version: 1.004002 was 14 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/PLICEASE/FFI-CheckLib-0.31' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;FFI::CheckLib&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Check that a library is available for FFI &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.31&lt;/strong&gt; on 2022-09-30&lt;/li&gt;  &lt;li&gt;Votes: 13&lt;/li&gt;  &lt;li&gt;Previous version: 0.30 was 8 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/MLEHMANN/IO-AIO-4.79' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;IO::AIO&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Asynchronous/Advanced Input/Output &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;4.79&lt;/strong&gt; on 2022-09-25&lt;/li&gt;  &lt;li&gt;Votes: 15&lt;/li&gt;  &lt;li&gt;Previous version: 4.78 was 19 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/MLAWREN/OptArgs-0.1.21' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;OptArgs&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - CLI argument and option processing &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;v0.1.21&lt;/strong&gt; on 2022-09-29&lt;/li&gt;  &lt;li&gt;Votes: 15&lt;/li&gt;  &lt;li&gt;Previous version: 0.1.20 was 6 years, 5 months, 18 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/RSCHUPP/PAR-1.018' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;PAR&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Perl Archive Toolkit &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.018&lt;/strong&gt; on 2022-09-28&lt;/li&gt;  &lt;li&gt;Votes: 18&lt;/li&gt;  &lt;li&gt;Previous version: 1.017 was 1 year, 8 months, 15 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/KIMOTO/SPVM-0.9653' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;SPVM&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - SPVM Language &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.9653&lt;/strong&gt; on 2022-09-26&lt;/li&gt;  &lt;li&gt;Votes: 27&lt;/li&gt;  &lt;li&gt;Previous version: 0.9652 was 17 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/HAYASHI/Term-ReadLine-Gnu-1.43' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Term::ReadLine::Gnu&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Perl extension for the GNU Readline/History Library &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.43&lt;/strong&gt; on 2022-10-01&lt;/li&gt;  &lt;li&gt;Votes: 23&lt;/li&gt;  &lt;li&gt;Previous version: 1.42 was 1 year, 4 months, 25 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TOBYINK/Type-Tiny-2.000001' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Type::Tiny&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - tiny, yet Moo(se)-compatible type constraint &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.000001&lt;/strong&gt; on 2022-09-29&lt;/li&gt;  &lt;li&gt;Votes: 132&lt;/li&gt;  &lt;li&gt;Previous version: 2.000000 was 6 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/SHLOMIF/XML-LibXML-2.0208' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;XML::LibXML&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Interface to Gnome libxml2 xml parsing and DOM library &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.0208&lt;/strong&gt; on 2022-09-30&lt;/li&gt;  &lt;li&gt;Votes: 95&lt;/li&gt;  &lt;li&gt;Previous version: 2.0207 was 1 year, 5 months, 13 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TINITA/YAML-PP-0.035' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;YAML::PP&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - YAML 1.2 Processor &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.035&lt;/strong&gt; on 2022-09-30&lt;/li&gt;  &lt;li&gt;Votes: 13&lt;/li&gt;  &lt;li&gt;Previous version: 0.034 was 3 months before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/5418145070218798517/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2022/10/cdxii-13-great-cpan-modules-released.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5418145070218798517"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5418145070218798517"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2022/10/cdxii-13-great-cpan-modules-released.html" title="(cdxii) 13 great CPAN modules released last week"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-3344714821035830048</id>
    <published>2022-10-01T23:01:00.002+02:00</published>
    <updated>2022-10-01T23:01:35.072+02:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(dxxv) metacpan weekly report</title>
    <content type="html">&lt;p&gt;This is the weekly favourites list of CPAN distributions. Votes count: 35&lt;/p&gt;&lt;p&gt;This week there isn't any remarkable distribution&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Build date: 2022/10/01 21:01:09 GMT&lt;/p&gt;&lt;br/&gt;&lt;p&gt;Clicked for &lt;u&gt;first time&lt;/u&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Class::Plain" target="_blank"&gt;Class::Plain&lt;/a&gt; - a class syntax for the hash-based Perl OO.&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dancer2::Plugin::JWT" target="_blank"&gt;Dancer2::Plugin::JWT&lt;/a&gt; - JSON Web Token made simple for Dancer2&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Geo::Coder::OpenCage" target="_blank"&gt;Geo::Coder::OpenCage&lt;/a&gt; - Geocode coordinates and addresses with the OpenCage Geocoder&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/HTML::Obj2HTML" target="_blank"&gt;HTML::Obj2HTML&lt;/a&gt; - Create HTML from a arrays and hashes&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Module::Installed::Tiny" target="_blank"&gt;Module::Installed::Tiny&lt;/a&gt; - Check if a module is installed, with as little code as possible&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Rinci" target="_blank"&gt;Rinci&lt;/a&gt; - Language-neutral metadata for your code&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Type::FromSah" target="_blank"&gt;Type::FromSah&lt;/a&gt; - create an efficient Type::Tiny type constraint from a Data::Sah schema&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/URI::PackageURL" target="_blank"&gt;URI::PackageURL&lt;/a&gt; - Perl extension for Package URL (aka "purl")&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Weather::GHCN::Fetch" target="_blank"&gt;Weather::GHCN::Fetch&lt;/a&gt; - Access the NOAA GHCN Global Historical Climatology Network repository&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;p&gt;&lt;u&gt;Increasing&lt;/u&gt; its reputation:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/App::GUI::Harmonograph" target="_blank"&gt;App::GUI::Harmonograph&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Catalyst::Plugin::Session::Store::Redis::Fast" target="_blank"&gt;Catalyst::Plugin::Session::Store::Redis::Fast&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Catalyst::Runtime" target="_blank"&gt;Catalyst::Runtime&lt;/a&gt; (+1=151)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/cpan::outdated" target="_blank"&gt;cpan::outdated&lt;/a&gt; (+1=34)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DateTime::TimeZone" target="_blank"&gt;DateTime::TimeZone&lt;/a&gt; (+1=19)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DBD::Pg" target="_blank"&gt;DBD::Pg&lt;/a&gt; (+1=88)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DBI" target="_blank"&gt;DBI&lt;/a&gt; (+1=258)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DBIx::SchemaChecksum" target="_blank"&gt;DBIx::SchemaChecksum&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Function::Return" target="_blank"&gt;Function::Return&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/HTML::String" target="_blank"&gt;HTML::String&lt;/a&gt; (+1=4)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/HTTP::Tiny" target="_blank"&gt;HTTP::Tiny&lt;/a&gt; (+1=104)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Image::ExifTool" target="_blank"&gt;Image::ExifTool&lt;/a&gt; (+1=38)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/import" target="_blank"&gt;import&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Inline::Module" target="_blank"&gt;Inline::Module&lt;/a&gt; (+1=14)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/JSON" target="_blank"&gt;JSON&lt;/a&gt; (+1=98)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Math::Prime::Util" target="_blank"&gt;Math::Prime::Util&lt;/a&gt; (+1=19)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Mojolicious::Plugin::NYTProf" target="_blank"&gt;Mojolicious::Plugin::NYTProf&lt;/a&gt; (+1=15)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::Amazon::S3" target="_blank"&gt;Net::Amazon::S3&lt;/a&gt; (+1=12)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::IDN::Encode" target="_blank"&gt;Net::IDN::Encode&lt;/a&gt; (+1=6)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::OpenSSH" target="_blank"&gt;Net::OpenSSH&lt;/a&gt; (+1=39)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::TFTPd" target="_blank"&gt;Net::TFTPd&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/OptArgs" target="_blank"&gt;OptArgs&lt;/a&gt; (+1=15)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/PDF::Table" target="_blank"&gt;PDF::Table&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Scalar::List::Utils" target="_blank"&gt;Scalar::List::Utils&lt;/a&gt; (+1=161)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Term::Graille" target="_blank"&gt;Term::Graille&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/warnings::unused" target="_blank"&gt;warnings::unused&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;/ul&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/3344714821035830048/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2022/10/dxxv-metacpan-weekly-report.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/3344714821035830048"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/3344714821035830048"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2022/10/dxxv-metacpan-weekly-report.html" title="(dxxv) metacpan weekly report"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-6722901560801064799</id>
    <published>2022-10-01T22:57:00.001+02:00</published>
    <updated>2022-10-01T22:57:32.283+02:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(dliii) stackoverflow perl report</title>
    <content type="html">&lt;p&gt;These are the five most rated questions at &lt;a href="http://www.stackoverflow.com"&gt;Stack Overflow&lt;/a&gt; last week.&lt;br /&gt;Between brackets: [&lt;b&gt;question score&lt;/b&gt; / answers count]&lt;br /&gt;Build date: 2022-10-01 20:56:50 GMT&lt;/p&gt;&lt;hr /&gt;&lt;ol&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/73867390" target="_blank"&gt;What does * before a Perl variable name mean?&lt;/a&gt; - [&lt;b&gt;3&lt;/b&gt;/2]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/73887542" target="_blank"&gt;Take an SSH stream as a perl script input rather than a physical file&lt;/a&gt; - [&lt;b&gt;2&lt;/b&gt;/1]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/73852603" target="_blank"&gt;Calling sed within perl with a variable&lt;/a&gt; - [&lt;b&gt;1&lt;/b&gt;/3]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/73863748" target="_blank"&gt;Why is this bash program so fast or the perl program so slow?&lt;/a&gt; - [&lt;b&gt;1&lt;/b&gt;/2]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/73887505" target="_blank"&gt;Parallel::ForkManager doesn't work with Perl 5.36&lt;/a&gt; - [&lt;b&gt;1&lt;/b&gt;/2]&lt;/li&gt;&lt;/ol&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/6722901560801064799/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2022/10/dliii-stackoverflow-perl-report.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6722901560801064799"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6722901560801064799"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2022/10/dliii-stackoverflow-perl-report.html" title="(dliii) stackoverflow perl report"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <title>Bug fix release 1.61 of perl-workflow and then some</title>
    <link rel="alternate" href="https://dev.to/jonasbn/bug-fix-release-161-of-perl-workflow-and-then-some-4bee" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Today we released bug fix release 1.61.</p>

<p>We had discovered a minor bug, it has been patched and release 1.61 has been uploaded to PAUSE/CPAN - Thanks to Oliver Welter who discovered and patched the bug.</p>

<p>I can see that I forgot to post about two bug fix releases:</p>

<ul>
<li>1.60</li>
<li>1.59</li>
</ul>

<p>Since the <a href="https://dev.to/jonasbn/release-158-of-perl-workflow-a-maintenance-release-3ed9">last release post was on 1.58</a>. Both were both released prior to this, so I will mention them here.</p>

<p>I do not know how come I forgot to write up the announcements for the two bug fix releases, probably due to workload. </p>

<p>Anyway, about workload - I should be celebrating and contributing to <a href="https://hacktoberfest.com/">Hactoberfest</a>, but instead I am doing maintenance, <em>but</em> it is still open source, so I guess it does count <em>just a little</em>.</p>

<p>Here follows the change log of release 1.61, 1.60 and 1.59</p>

<h2>
  
  
  Change Log
</h2>

<h2>
  
  
  1.61 2022-10-01 bug fix release, update recommended
</h2>

<ul>
<li>We have removed some code, which was no longer used, which was causing some grievance see PR <a href="https://github.com/jonasbn/perl-workflow/pull/203">#203</a> from by Oliver Welter (@oliwell)</li>
</ul>

<h2>
  
  
  1.60 2022-03-02 bug fix release, update recommended
</h2>

<ul>
<li>We have discovered a minor regression, founded in our eager to implement more clean code. This has been addressed via PR <a href="https://github.com/jonasbn/perl-workflow/pull/195">#195</a> by Erik Huelsmann (<a class="mentioned-user" href="https://dev.to/ehuelsmann">@ehuelsmann</a>).</li>
</ul>

<p>It was followed up by PR <a href="https://github.com/jonasbn/perl-workflow/pull/196/files">#196</a> by Oliver Welter (@oliwell).</p>

<p>We are now setting the bar a bit lower for the 1.x releases in regard to best practices and code quality and focus on improving the code for 2.x, so we do not experience any more regressions.</p>

<h2>
  
  
  1.59 2022-02-02 bug fix release, update required
</h2>

<ul>
<li>Unfortunately we discovered a minor mishap, where a dependency was referenced without being properly declared as a dependency, which could result in inability for the distribution to work in a clean environment. This has now been addressed via PR <a href="https://github.com/jonasbn/perl-workflow/pull/190">#190</a>
</li>
</ul>

</div>
    </content>
    <author>
      <name>jonasbn</name>
    </author>
    <id>https://dev.to/jonasbn/bug-fix-release-161-of-perl-workflow-and-then-some-4bee</id>
    <published>2022-10-01T11:09:15Z</published>
    <updated>2022-10-01T11:09:15Z</updated>
    <category term="opensource"/>
    <category term="release"/>
    <category term="perl"/>
  </entry>
  <entry>
    <title>Sending a simple email</title>
    <link rel="alternate" href="http://blogs.perl.org/users/den/2022/09/sending-simple-email.html"/>
    <id>tag:blogs.perl.org,2022:/users/den//4168.10910</id>
    <published>2022-10-01T03:32:47Z</published>
    <updated>2022-10-01T03:42:48Z</updated>
    <author>
        <name>Den</name>
        <uri>https://den.yt/</uri>
    </author>
    <category term="General" scheme="http://www.sixapart.com/ns/types#category"/>
    <category term="mail" label="mail" scheme="http://www.sixapart.com/ns/types#tag"/>
    <content type="html" xml:lang="en" xml:base="http://blogs.perl.org/users/den/">
        <![CDATA[<p>To have a secure SMTP delivery, use Email::Sender. Mail::Sendmail uses SMTP for transport and there's no other type of transport. It does not support SMTP authentication, which my SMTP server now requires even for access from localhost. From what I read and tried once or twice in the past, the current "best practice" or recommended way is to use Email::Sender. Here's an incantation to send mail using sendmail:</p>
<pre><code>use Email::Sender::Simple qw(sendmail);<br />use Email::Simple;<br />use Email::Sender::Transport::Sendmail qw();<br />use Try::Tiny;my $email = Email::Simple-&gt;create(<br /> header=&gt;[To=&gt;$to, From=&gt;$from,<br /> Subject=&gt;$subject],<br /> body=&gt;$body,<br />);try {<br /> sendmail($email,<br /> {from=&gt;$from,<br /> transport=&gt;Email::Sender::Transport::Sendmail-&gt;new});<br />} catch {<br /> print "Can't send mail: $_";<br />}</code></pre>
<ul>
<li>
<p>It's easy to switch transport to SMTP (just change two lines).</p>
</li>
<li>
<p>It's easy to add SMTP authentication (just pass arguments to transport constructor).</p>
</li>
<li>
<p>It's easy and clear where to add custom email headers (whereas in Mail::Sendmail, some arguments are "magical"/processed, they do not correspond 1:1 to headers).</p>
</li>
<li>
<p>It's easy to construct multipart email (construct the appropriate $email object).</p>
</li>
</ul>
<p>In addition:</p>
<ul>
<li>Envelope sender and RFC822 From is clearly separated, forcing beginners to understand the concept.</li>
</ul>
<p>So there you have it, sending an <a href="https://tempmailo.com/">temp email</a> in Perl the modern way. No longer apt for one-liners though.</p>]]>
        
    </content>
</entry>
  <entry>
    <title>Perl Weekly Challenge 184:  Sequence Number and Split Array</title>
    <link rel="alternate" href="http://blogs.perl.org/users/laurent_r/2022/09/perl-weekly-challenge-184-sequence-number-and-split-array.html"/>
    <id>tag:blogs.perl.org,2022:/users/laurent_r//3226.10909</id>
    <published>2022-10-01T03:16:26Z</published>
    <updated>2022-10-01T03:19:31Z</updated>
    <author>
        <name>laurent_r</name>
        <uri>https://laurent-rosenfeld.developpez.com/</uri>
    </author>
    <content type="html" xml:lang="en" xml:base="http://blogs.perl.org/users/laurent_r/">
        <![CDATA[<p>These are some answers to the Week 184 of the <a href="https://perlweeklychallenge.org/blog/perl-weekly-challenge-184/">Perl Weekly Challenge</a> organized by <a href="http://blogs.perl.org/users/mohammad_s_anwar/">Mohammad S. Anwar</a>.</p>

<p><em>Spoiler Alert:</em> This weekly challenge deadline is due in a couple of days from now (on Oct. 2, 2022 at 23:59). This blog post offers some solutions to this challenge, please don’t read on if you intend to complete the challenge on your own.</p>

<h2>Task 1: Sequence Number</h2>

<p><em>You are given list of strings in the format aa9999 i.e. first 2 characters can be anything &#8216;a-z&#8217; followed by 4 digits &#8216;0-9&#8217;.</em></p>

<p><em>Write a script to replace the first two characters with sequence starting with &#8216;00&#8217;, &#8216;01&#8217;, &#8216;02&#8217; etc.</em></p>

<p><em>Example 1</em></p>

<pre><code>Input: @list = ( 'ab1234', 'cd5678', 'ef1342')
Output: ('001234', '015678', '021342')
</code></pre>

<p><em>Example 2</em></p>

<pre><code>Input: @list = ( 'pq1122', 'rs3334')
Output: ('001122', '013334')
</code></pre>

<h3>Sequence Number in Raku</h3>

<p>The program is fairly straight forward. For various reasons, I found that using the <code>subst</code> method was slightly more efficient (code-wise) than using a regex substitution. </p>

<pre><code>for &lt;ab1234 cd5678 ef1342&gt;, &lt;pq1122 rs3334&gt; -&gt; @test {
    my $i = 0;
    my @out;
    for @test {
        push @out, .subst(/^&lt;[a..z]&gt;**2/, $i.fmt("%02d"));
        $i++;
    }
    say "@test[]  =&gt;  @out[]";
}
</code></pre>

<p>This program displays the following output:</p>

<pre><code>$ raku ./sequence-number.raku
ab1234 cd5678 ef1342  =&gt;  001234 015678 021342
pq1122 rs3334  =&gt;  001122 013334
</code></pre>

<h3>Sequence Number in Perl</h3>

<p>This is essentially a port to Perl of the Raku program above:</p>

<pre><code>use strict;
use warnings;
use feature qw/say/;

for my $test ([&lt;ab1234 cd5678 ef1342&gt;], [&lt;pq1122 rs3334&gt;]) {
    my $i = 0;
    my @out = @$test;
    for (@out) {
        my $count = sprintf("%02d", $i);
        s/^[a-z]{2}/$count/;
        $i++;
    }
    say "@$test  =&gt;  @out";
}
</code></pre>

<p>This program displays the following output:</p>

<pre><code>$ perl ./sequence-number.pl
ab1234 cd5678 ef1342  =&gt;  001234 015678 021342
pq1122 rs3334  =&gt;  001122 013334
</code></pre>

<h2>Task 2: Split Array</h2>

<p><em>You are given list of strings containing 0-9 and a-z separated by space only.</em></p>

<p><em>Write a script to split the data into two arrays, one for integers and one for alphabets only.</em></p>

<p><em>Example 1</em></p>

<pre><code>Input: @list = ( 'a 1 2 b 0', '3 c 4 d')
Output: [[1,2,0], [3,4]] and [['a','b'], ['c','d']]
</code></pre>

<p><em>Example 2</em></p>

<pre><code>Input: @list = ( '1 2', 'p q r', 's 3', '4 5 t')
Output: [[1,2], [3], [4,5]] and [['p','q','r'], ['s'], ['t']]
</code></pre>

<h3>Split Array in Raku</h3>

<p>Using <code>grep</code> to keep either letters or numerals:</p>

<pre><code>for ('a 1 2 b 0', '3 c 4 d'), ('1 2', 'p q r', 's 3', '4 5 t') -&gt; @test {
    my (@letters, @digits);
    for @test -&gt; $item {
        append @letters, grep {  /&lt;alpha&gt;+/ }, $item.split(/\s+/);
        append @digits, grep { /\d+/ }, $item.split(/\s+/);
    }
    .say for @letters, @digits;
}
</code></pre>

<p>This program displays the following output:</p>

<pre><code>$ raku ./split-array.raku
[a b c d]
[1 2 0 3 4]
[p q r s t]
[1 2 3 4 5]
</code></pre>

<h3>Split Array in Perl</h3>

<p>This is a port to Perl of the above Raku program:</p>

<pre><code>use strict;
use warnings;
use feature qw/say/;

for my $test (['a 1 2 b 0', '3 c 4 d'], ['1 2', 'p q r', 's 3', '4 5 t']) {
    my (@letters, @digits);
    for my $item (@$test) {
        push @letters, grep { /[a-zA-Z]+/ } split /\s+/, $item;
        push @digits, grep { /\d+/ } split /\s+/, $item;;
    }
    say  "@letters \n@digits";
}
</code></pre>

<p>This program displays the following output:</p>

<pre><code>$ perl  ./split-array.pl
a b c d
1 2 0 3 4
p q r s t
1 2 3 4 5
</code></pre>

<h2>Wrapping up</h2>

<p>The next week Perl Weekly Challenge will start soon. If you want to participate in this challenge, please check https://perlweeklychallenge.org/ and make sure you answer the challenge before 23:59 BST (British summer time) on October 9, 2022. And, please, also spread the word about the Perl Weekly Challenge if you can.</p>
]]>
        

    </content>
</entry>
  <entry>
    <title>List of new CPAN distributions – Sep 2022</title>
    <link rel="alternate" href="https://perlancar.wordpress.com/2022/10/01/list-of-new-cpan-distributions-sep-2022/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><table>
<tr>
<th>dist</th>
<th>author</th>
<th>first_version</th>
<th>latest_version</th>
<th>abstract</th>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Acme-CPANModules-Dead">Acme-CPANModules-Dead</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>List of dead (no-longer-updated, no-longer-buildable, no-longer-working) modules</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Acme-DOBBY-Utils">Acme-DOBBY-Utils</a></td>
<td><a href="https://metacpan.org/author/DOBBY">DOBBY</a></td>
<td>0.01</td>
<td>0.01</td>
<td>The great new Acme::DOBBY::Utils!</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Algorithm-LCS-XS">Algorithm-LCS-XS</a></td>
<td><a href="https://metacpan.org/author/JOESUF">JOESUF</a></td>
<td>1.04</td>
<td>v2.0.2</td>
<td>Fast (XS) implementation of the                  Longest Common Subsequence (LCS) Algorithm</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Alien-Build-Plugin-Download-GitLab">Alien-Build-Plugin-Download-GitLab</a></td>
<td><a href="https://metacpan.org/author/PLICEASE">PLICEASE</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Alien::Build plugin to download from GitLab</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Alien-Libtensorflow">Alien-Libtensorflow</a></td>
<td><a href="https://metacpan.org/author/ZMUGHAL">ZMUGHAL</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Alien for Libtensorflow machine learning library C API</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Alien-bc-GNU">Alien-bc-GNU</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Find or download and install GNU bc</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Alien-ed-GNU">Alien-ed-GNU</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Find or download and install GNU ed.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Alt-Lexical-Var-ButSupportModernPerl">Alt-Lexical-Var-ButSupportModernPerl</a></td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>0.001</td>
<td>0.001</td>
<td>alternative distribution of Lexical::Var, with support for more modern versions of Perl</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Angle2Zodiac">App-Angle2Zodiac</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Base class and script for angle2zodiac conversion.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-GUI-Harmonograph">App-GUI-Harmonograph</a></td>
<td><a href="https://metacpan.org/author/LICHTKIND">LICHTKIND</a></td>
<td>0.4_0</td>
<td>0.43</td>
<td>sculpting beautiful circular drawings</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Greple-type">App-Greple-type</a></td>
<td><a href="https://metacpan.org/author/UTASHIRO">UTASHIRO</a></td>
<td>0.01</td>
<td>0.01</td>
<td>file type filter module for greple</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Greple-update">App-Greple-update</a></td>
<td><a href="https://metacpan.org/author/UTASHIRO">UTASHIRO</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Greple module to update files</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-ListUtils">App-ListUtils</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Command-line utilities related to lists in files</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Schema-Data">App-Schema-Data</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Script for Schema data manipulation.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-tarweb">App-tarweb</a></td>
<td><a href="https://metacpan.org/author/PLICEASE">PLICEASE</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Open an archive file in your web browser!</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/CPAN-Smoker-Utils">CPAN-Smoker-Utils</a></td>
<td><a href="https://metacpan.org/author/ARFREITAS">ARFREITAS</a></td>
<td>v1.0.0</td>
<td>v1.0.1</td>
<td>Set of CLI's to manage a Perl CPAN smoker machine</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Class-Plain">Class-Plain</a></td>
<td><a href="https://metacpan.org/author/KIMOTO">KIMOTO</a></td>
<td>0.01</td>
<td>0.04</td>
<td>a class syntax for the hash-based Perl OO.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Data-HTML-Button">Data-HTML-Button</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.04</td>
<td>Data object for HTML button element.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Data-HTML-Form">Data-HTML-Form</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.04</td>
<td>Data objects for HTML form.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Data-Record-Serialize-Encode-csv">Data-Record-Serialize-Encode-csv</a></td>
<td><a href="https://metacpan.org/author/DJERIUS">DJERIUS</a></td>
<td>0.01</td>
<td>0.02</td>
<td>encode a record as csv</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Data-Trace">Data-Trace</a></td>
<td><a href="https://metacpan.org/author/TIMKA">TIMKA</a></td>
<td>0.01</td>
<td>0.05</td>
<td>Trace when a data structure gets updated.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Efl">Efl</a></td>
<td><a href="https://metacpan.org/author/PERLMAX">PERLMAX</a></td>
<td>0.68</td>
<td>0.68</td>
<td>Perl bindings for the Enlightenment Foundation Libraries</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/GHCN">GHCN</a></td>
<td><a href="https://metacpan.org/author/PUCKERING">PUCKERING</a></td>
<td>v0.22.257</td>
<td>v0.22.258</td>
<td>collect station objects and weather data</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Getopt-EX-RPN">Getopt-EX-RPN</a></td>
<td><a href="https://metacpan.org/author/UTASHIRO">UTASHIRO</a></td>
<td>0.01</td>
<td>0.01</td>
<td>RPN calculation module for Getopt::EX command option</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Hash-Util-Regexp">Hash-Util-Regexp</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Hash utility routines related to regular expression</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Mojo-DB-Role-DBIx-Class">Mojo-DB-Role-DBIx-Class</a></td>
<td><a href="https://metacpan.org/author/SCESANO">SCESANO</a></td>
<td>0.001</td>
<td>0.002</td>
<td>provides a convenience role creating a DBIx::Class for your Mojo database</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Mojo-DOM-Role-Style">Mojo-DOM-Role-Style</a></td>
<td><a href="https://metacpan.org/author/SCESANO">SCESANO</a></td>
<td>0.001</td>
<td>0.003</td>
<td>Adds a style method to Mojo::DOM</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/MojoX-Log-Rotate">MojoX-Log-Rotate</a></td>
<td><a href="https://metacpan.org/author/XLAT">XLAT</a></td>
<td>1.222630</td>
<td>1.222670</td>
<td>Makes mojolicious log file rotation easy</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Mojolicious-Plugin-Logrotate">Mojolicious-Plugin-Logrotate</a></td>
<td><a href="https://metacpan.org/author/CARELINE">CARELINE</a></td>
<td>0.001</td>
<td>0.003</td>
<td>Logrotate Mojolicious Application log</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/MooX-Role-DBIConnection">MooX-Role-DBIConnection</a></td>
<td><a href="https://metacpan.org/author/CORION">CORION</a></td>
<td>0.02</td>
<td>0.04</td>
<td>handy mixin for objects with a DB connection</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/MooseX-ShortHas">MooseX-ShortHas</a></td>
<td><a href="https://metacpan.org/author/MITHALDU">MITHALDU</a></td>
<td>1.222490</td>
<td>1.222491</td>
<td>shortcuts for common Moose has attribute configurations</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Muuse">Muuse</a></td>
<td><a href="https://metacpan.org/author/MITHALDU">MITHALDU</a></td>
<td>1.222490</td>
<td>1.222490</td>
<td>Moose but with less typing</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/PDK">PDK</a></td>
<td><a href="https://metacpan.org/author/CARELINE">CARELINE</a></td>
<td>0.001</td>
<td>0.005</td>
<td>personal perl devkits</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Parallel-Manager">Parallel-Manager</a></td>
<td><a href="https://metacpan.org/author/CARELINE">CARELINE</a></td>
<td>0.001</td>
<td>0.004</td>
<td>fork threads to run some callback together</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Perl5-CoreSmokeDB-Schema">Perl5-CoreSmokeDB-Schema</a></td>
<td><a href="https://metacpan.org/author/ABELTJE">ABELTJE</a></td>
<td>1.07</td>
<td>1.07</td>
<td>DBIC::Schema for the smoke reports database</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Plack-App-Libarchive">Plack-App-Libarchive</a></td>
<td><a href="https://metacpan.org/author/PLICEASE">PLICEASE</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Serve an archive via libarchive as a PSGI web app</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Plack-Middleware-Auth-OAuth2">Plack-Middleware-Auth-OAuth2</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Plack OAuth2 middleware.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Plack-Middleware-EmulateOPTIONS">Plack-Middleware-EmulateOPTIONS</a></td>
<td><a href="https://metacpan.org/author/RRWO">RRWO</a></td>
<td>v0.1.0</td>
<td>v0.2.1</td>
<td>handle OPTIONS requests as HEAD</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Pod-L10N-Model">Pod-L10N-Model</a></td>
<td><a href="https://metacpan.org/author/ARGRATH">ARGRATH</a></td>
<td>1.06</td>
<td>1.06</td>
<td>Model for Pod::L10N</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Protocol-Dqlite">Protocol-Dqlite</a></td>
<td><a href="https://metacpan.org/author/FELIPE">FELIPE</a></td>
<td>0.01_01</td>
<td>0.02</td>
<td>Dqlite in Perl</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/RF-Antenna-Planet-MSI-Format">RF-Antenna-Planet-MSI-Format</a></td>
<td><a href="https://metacpan.org/author/MRDVT">MRDVT</a></td>
<td>0.01</td>
<td>0.02</td>
<td>RF Antenna Pattern File Reader and Writer in Planet MSI Format</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/RF-Functions">RF-Functions</a></td>
<td><a href="https://metacpan.org/author/MRDVT">MRDVT</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Perl Exporter for Radio Frequency (RF) Functions</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/SPVM-Sys">SPVM-Sys</a></td>
<td><a href="https://metacpan.org/author/KIMOTO">KIMOTO</a></td>
<td>0.01</td>
<td>0.07</td>
<td>System Calls such as File IO, User, Process, Socket,</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/SQL-SimpleOps">SQL-SimpleOps</a></td>
<td><a href="https://metacpan.org/author/CCELSO">CCELSO</a></td>
<td>v2022.212.1</td>
<td>v2022.266.1</td>
<td>SQL Simple Operations</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Schema-Data">Schema-Data</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Abstract class for classes for database data.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Stancer">Stancer</a></td>
<td><a href="https://metacpan.org/author/JDASILVA">JDASILVA</a></td>
<td>1.0.0</td>
<td>1.0.0</td>
<td>Stancer Perl library</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Subs-Trace">Subs-Trace</a></td>
<td><a href="https://metacpan.org/author/TIMKA">TIMKA</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Trace all calls in a package.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/TableDataBundle-Business-ID-DGIP">TableDataBundle-Business-ID-DGIP</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>20220831.0.0</td>
<td>20220831.0.0</td>
<td>Collection of TableData:: modules related to the Directorate General of Intellectual Property</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Tags-HTML-Form">Tags-HTML-Form</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Tags helper for form.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Tags-HTML-Pager">Tags-HTML-Pager</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Tags helper for pager.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Terminal-Identify">Terminal-Identify</a></td>
<td><a href="https://metacpan.org/author/ZTENRETEP">ZTENRETEP</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Module with methods for the control of the terminal window</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Test-Circle">Test-Circle</a></td>
<td><a href="https://metacpan.org/author/CHYLLI">CHYLLI</a></td>
<td>0.001</td>
<td>0.021</td>
<td>…</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Test-Circle2">Test-Circle2</a></td>
<td><a href="https://metacpan.org/author/CHYLLI">CHYLLI</a></td>
<td>0.006</td>
<td>0.009</td>
<td>…</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Test-Release">Test-Release</a></td>
<td><a href="https://metacpan.org/author/CHYLLI">CHYLLI</a></td>
<td>0.001</td>
<td>0.001</td>
<td>…</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Test-Release4">Test-Release4</a></td>
<td><a href="https://metacpan.org/author/CHYLLI">CHYLLI</a></td>
<td>0.001</td>
<td>0.002</td>
<td>…</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Test2-Tools-MemoryCycle">Test2-Tools-MemoryCycle</a></td>
<td><a href="https://metacpan.org/author/PLICEASE">PLICEASE</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Check for memory leaks and circular memory references</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Text-HyperScript">Text-HyperScript</a></td>
<td><a href="https://metacpan.org/author/NYARLA">NYARLA</a></td>
<td>0.04</td>
<td>0.05</td>
<td>The HyperScript like library for Perl.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Time-Duration-Concise-Localiz">Time-Duration-Concise-Localiz</a></td>
<td><a href="https://metacpan.org/author/BINARY">BINARY</a></td>
<td>2.62</td>
<td>2.62</td>
<td>localize concise time duration string representation.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Type-FromSah">Type-FromSah</a></td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>0.001</td>
<td>0.005</td>
<td>create an efficient Type::Tiny type constraint from a Data::Sah schema</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Types-Sah-Firefox">Types-Sah-Firefox</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.002</td>
<td>Various Sah schemas related to Firefox</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Unidexer">Unidexer</a></td>
<td><a href="https://metacpan.org/author/LNATION">LNATION</a></td>
<td>0.01</td>
<td>0.01</td>
<td>…</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Weather-GHCN-Fetch">Weather-GHCN-Fetch</a></td>
<td><a href="https://metacpan.org/author/PUCKERING">PUCKERING</a></td>
<td>v0.0.001</td>
<td>v0.0.003</td>
<td>Fetch station and weather data from the NOAA GHCN repository</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Weather-GHCN">Weather-GHCN</a></td>
<td><a href="https://metacpan.org/author/PUCKERING">PUCKERING</a></td>
<td>v0.0.001</td>
<td>v0.0.001</td>
<td>collect station objects and weather data</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/WebService-ADSBExchange">WebService-ADSBExchange</a></td>
<td><a href="https://metacpan.org/author/TYUPYRCML">TYUPYRCML</a></td>
<td>0.001</td>
<td>1.222600</td>
<td>Interface with the ADSBExchange API</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Win32-Elevate">Win32-Elevate</a></td>
<td><a href="https://metacpan.org/author/SUBJUT">SUBJUT</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Perl module for gaining higher access privilege</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/WordList-FromFile-Line">WordList-FromFile-Line</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Wordlist from lines of file</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/WordList-FromFile-Word">WordList-FromFile-Word</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Wordlist from words in file</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/sealed">sealed</a></td>
<td><a href="https://metacpan.org/author/JOESUF">JOESUF</a></td>
<td>v4.1.1</td>
<td>v4.1.8</td>
<td>Run Django Templates in Perl</td>
</tr>
</table>
<h3>Stats</h3>
<p>Number of new CPAN distributions this period: <b>68</b></p>
<p>Number of authors releasing new CPAN distributions this period: <b>34</b></p>
<p>Authors by number of new CPAN distributions this period: </p>
<table>
<tr>
<th>No</th>
<th>Author</th>
<th>Distributions</th>
</tr>
<tr>
<td>1</td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>10</td>
</tr>
<tr>
<td>2</td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>7</td>
</tr>
<tr>
<td>3</td>
<td><a href="https://metacpan.org/author/PLICEASE">PLICEASE</a></td>
<td>4</td>
</tr>
<tr>
<td>4</td>
<td><a href="https://metacpan.org/author/CHYLLI">CHYLLI</a></td>
<td>4</td>
</tr>
<tr>
<td>5</td>
<td><a href="https://metacpan.org/author/UTASHIRO">UTASHIRO</a></td>
<td>3</td>
</tr>
<tr>
<td>6</td>
<td><a href="https://metacpan.org/author/PUCKERING">PUCKERING</a></td>
<td>3</td>
</tr>
<tr>
<td>7</td>
<td><a href="https://metacpan.org/author/CARELINE">CARELINE</a></td>
<td>3</td>
</tr>
<tr>
<td>8</td>
<td><a href="https://metacpan.org/author/KIMOTO">KIMOTO</a></td>
<td>2</td>
</tr>
<tr>
<td>9</td>
<td><a href="https://metacpan.org/author/MITHALDU">MITHALDU</a></td>
<td>2</td>
</tr>
<tr>
<td>10</td>
<td><a href="https://metacpan.org/author/MRDVT">MRDVT</a></td>
<td>2</td>
</tr>
<tr>
<td>11</td>
<td><a href="https://metacpan.org/author/TIMKA">TIMKA</a></td>
<td>2</td>
</tr>
<tr>
<td>12</td>
<td><a href="https://metacpan.org/author/SCESANO">SCESANO</a></td>
<td>2</td>
</tr>
<tr>
<td>13</td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>2</td>
</tr>
<tr>
<td>14</td>
<td><a href="https://metacpan.org/author/JOESUF">JOESUF</a></td>
<td>2</td>
</tr>
<tr>
<td>15</td>
<td><a href="https://metacpan.org/author/ABELTJE">ABELTJE</a></td>
<td>1</td>
</tr>
<tr>
<td>16</td>
<td><a href="https://metacpan.org/author/ARGRATH">ARGRATH</a></td>
<td>1</td>
</tr>
<tr>
<td>17</td>
<td><a href="https://metacpan.org/author/CCELSO">CCELSO</a></td>
<td>1</td>
</tr>
<tr>
<td>18</td>
<td><a href="https://metacpan.org/author/CORION">CORION</a></td>
<td>1</td>
</tr>
<tr>
<td>19</td>
<td><a href="https://metacpan.org/author/PERLMAX">PERLMAX</a></td>
<td>1</td>
</tr>
<tr>
<td>20</td>
<td><a href="https://metacpan.org/author/DOBBY">DOBBY</a></td>
<td>1</td>
</tr>
<tr>
<td>21</td>
<td><a href="https://metacpan.org/author/XLAT">XLAT</a></td>
<td>1</td>
</tr>
<tr>
<td>22</td>
<td><a href="https://metacpan.org/author/LICHTKIND">LICHTKIND</a></td>
<td>1</td>
</tr>
<tr>
<td>23</td>
<td><a href="https://metacpan.org/author/LNATION">LNATION</a></td>
<td>1</td>
</tr>
<tr>
<td>24</td>
<td><a href="https://metacpan.org/author/NYARLA">NYARLA</a></td>
<td>1</td>
</tr>
<tr>
<td>25</td>
<td><a href="https://metacpan.org/author/ARFREITAS">ARFREITAS</a></td>
<td>1</td>
</tr>
<tr>
<td>26</td>
<td><a href="https://metacpan.org/author/FELIPE">FELIPE</a></td>
<td>1</td>
</tr>
<tr>
<td>27</td>
<td><a href="https://metacpan.org/author/SUBJUT">SUBJUT</a></td>
<td>1</td>
</tr>
<tr>
<td>28</td>
<td><a href="https://metacpan.org/author/ZTENRETEP">ZTENRETEP</a></td>
<td>1</td>
</tr>
<tr>
<td>29</td>
<td><a href="https://metacpan.org/author/JDASILVA">JDASILVA</a></td>
<td>1</td>
</tr>
<tr>
<td>30</td>
<td><a href="https://metacpan.org/author/TYUPYRCML">TYUPYRCML</a></td>
<td>1</td>
</tr>
<tr>
<td>31</td>
<td><a href="https://metacpan.org/author/RRWO">RRWO</a></td>
<td>1</td>
</tr>
<tr>
<td>32</td>
<td><a href="https://metacpan.org/author/ZMUGHAL">ZMUGHAL</a></td>
<td>1</td>
</tr>
<tr>
<td>33</td>
<td><a href="https://metacpan.org/author/DJERIUS">DJERIUS</a></td>
<td>1</td>
</tr>
<tr>
<td>34</td>
<td><a href="https://metacpan.org/author/BINARY">BINARY</a></td>
<td>1</td>
</tr>
</table>
</div>
    </content>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">dist author first_version latest_version abstract Acme-CPANModules-Dead PERLANCAR 0.001 0.001 List of dead (no-longer-updated, no-longer-buildable, no-longer-working) modules Acme-DOBBY-Utils DOBBY 0.01 0.01 The great new Acme::DOBBY::Utils! Algorithm-LCS-XS JOESUF 1.04 v2.0.2 Fast (XS) implementation of the Longest Common Subsequence (LCS) Algorithm Alien-Build-Plugin-Download-GitLab PLICEASE 0.01 0.01 Alien::Build plugin to download from GitLab Alien-Libtensorflow ZMUGHAL 0.001 0.001 Alien for Libtensorflow … <a href="https://perlancar.wordpress.com/2022/10/01/list-of-new-cpan-distributions-sep-2022/" class="more-link">Continue reading <span class="screen-reader-text">List of new CPAN distributions – Sep 2022</span></a></div>
    </summary>
    <author>
      <name>perlancar</name>
    </author>
    <id>http://perlancar.wordpress.com/?p=1998</id>
    <published>2022-10-01T00:32:08Z</published>
    <updated>2022-10-01T00:32:08Z</updated>
    <category term="cpan"/>
    <category term="perl"/>
  </entry>
  <entry>
    <title>#583 - Sponsoring Perl and other Open Source work</title>
    <link rel="alternate" href="https://perlweekly.com/archive/583.html" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Hi there!</p>
<p>Happy New Year - Shana Tova - to all the Jews around the world!</p>
<p>A couple of days ago Ed Freyfogle wrote us pointig to their post on <a href="https://blog.opencagedata.com/post/sponsoring-metacpan">sponsoring MetaCPAN</a>. I love this on so many levels. First of all, of course the fact that they sponsor some Perl-related activity. They also blog about it. They also send us a heads up to be included here in the Perl Weekly. I hope many more small and large companies, and also individuals will follow them.</p>
<p>Dean Hamstead also sent us an email linking to the new <a href="https://the-perl-store.creator-spring.com/">Perl Store</a>, that was also announced on <a href="https://news.perlfoundation.org/post/tpf-merch-store">The Perl Foundation blog</a>. Buying a T-shirt or some other swag will both help you with clothing and help TPF financially. Nice initiative!</p>
<p>Finally, I managed to set up my <a href="https://github.com/sponsors/szabgab/">GitHub sponsors profile</a>. So now, if you'd like to support my Perl and in more general Open Source work (articles, code, and videos) you can do so via GitHub as well. It would be awesome to get a few of you start supporting me via GitHub in the next couple of days. That will help things get rolling there and I would be able to see how the system really works.</p>
<p>Enjoy your week!</p></div>
    </content>
    <id>https://perlweekly.com/archive/583.html</id>
    <published>2022-09-26T10:00:00Z</published>
    <updated>2022-09-26T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
  <title>Take part in Hacktoberfest - register between 26 September and 31 October</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/hactoberfest-2022"/>
  <id>tag:news.perlfoundation.org,2022-09-26:/post/hactoberfest-2022</id>
  <published>2022-09-26T07:20:01</published>
  <updated>2022-09-26T07:20:01</updated>
  <summary>
  <![CDATA[
     Support perl during October's Hacktoberfest. Running for the last nine years, this annual event is contributed to by thousands of coders and non coders world wide. However small or large, your input will make a difference. Take a look at the Hacktoberfest website and get involved. You can also read about it on the Perl Blogs site. 
   ]]>
  </summary>
  <author>
    <name>Nic Evans</name>
  </author>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
     <p>Support perl during October's Hacktoberfest. Running for the last nine years, this annual event is contributed to by thousands of coders and non coders world wide. However small or large, your input will make a difference.</p>

<p>Take a look at the <a href="https://hacktoberfest.com/participation/">Hacktoberfest website</a> and get involved. You can also read about it on the <a href="http://blogs.perl.org/users/itcharlie/2022/09/hacktoberfest-2022-is-near.html">Perl Blogs site</a>.</p>

    ]]>
  </content>
</entry>
  <entry>
    <title>Colin Crain › Perl Weekly Review #177</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/review-challenge-177/" type="text/html"/>
    <content type="text">( &amp;hellip;continues from previous week. )
Welcome to the Perl review pages for Week 177 of The Weekly Challenge! Here we will take the time to discuss the submissions offered up by the team, factor out some common methodologies that came up in those solutions, and highlight some of the unique approaches and unusual code created.
 ●︎ Why do we do these challenges? I suppose any reasonable answer to that question would come from a field as wide ranging and varied as the people who choose to join the team.</content>
    <id>https://theweeklychallenge.org/blog/review-challenge-177/</id>
    <published>2022-09-26T00:00:00Z</published>
    <updated>2022-09-26T00:00:00Z</updated>
  </entry>
  <entry>
    <title>Perl Weekly Challenge 182:  Unique Array and Date Difference</title>
    <link rel="alternate" href="http://blogs.perl.org/users/laurent_r/2022/09/perl-weekly-challenge-182-unique-array-and-date-difference.html"/>
    <id>tag:blogs.perl.org,2022:/users/laurent_r//3226.10905</id>
    <published>2022-09-25T22:52:30Z</published>
    <updated>2022-09-25T22:54:53Z</updated>
    <author>
        <name>laurent_r</name>
        <uri>https://laurent-rosenfeld.developpez.com/</uri>
    </author>
    <content type="html" xml:lang="en" xml:base="http://blogs.perl.org/users/laurent_r/">
        <![CDATA[<p>These are some answers to the Week 183 of the <a href="https://perlweeklychallenge.org/blog/perl-weekly-challenge-183/">Perl Weekly Challenge</a> organized by <a href="http://blogs.perl.org/users/mohammad_s_anwar/">Mohammad S. Anwar</a>.</p>

<h2>Task 1: Unique Array</h2>

<p><em>You are given list of arrayrefs.</em></p>

<p><em>Write a script to remove the duplicate arrayrefs from the given list.</em></p>

<p><em>Example 1</em></p>

<pre><code>Input: @list = ([1,2], [3,4], [5,6], [1,2])
Output: ([1,2], [3,4], [5,6])
</code></pre>

<p><em>Example 2</em></p>

<pre><code>Input: @list = ([9,1], [3,7], [2,5], [2,5])
Output: ([9, 1], [3,7], [2,5])
</code></pre>

<h3>Unique Array in Raku</h3>

<p>The Raku solution is essentially a one-liner (more than one line because of the tests). We convert the sub-arrays into strings and use the <a href="https://docs.raku.org/routine/unique">unique</a> built-in routine to remove duplicates.</p>

<pre><code>for ([1,2], [3,4], [5,6], [1,2]), 
    ([9,1], [3,7], [2,5], [2,5]) -&gt; @test {
    @test&gt;&gt;.map({"[$^a, $^b]"}).flat.unique.say;
}
</code></pre>

<p>This program displays the following output:</p>

<pre><code>$ raku ./unique-arrays.raku
([1, 2] [3, 4] [5, 6])
([9, 1] [3, 7] [2, 5])
</code></pre>

<h3>Unique Array in Perl</h3>

<p>In Perl, we use the <code>%unique</code> hash to remove duplicates. </p>

<pre><code>use strict;
use warnings;
use feature qw/say/;

for my $test ( [[1,2], [3,4], [5,6], [1,2]], 
               [[9,1], [3,7], [2,5], [2,5]] ) {
    my %unique = map { $_ =&gt; 1 } map { "[@$_]"} @$test;
    say join ", ",  keys %unique;
}
</code></pre>

<p>Note that, since this is not requested in the task specification, we&#8217;re not trying to keep the order of the input. It would be easy to keep the input order with an additional array.</p>

<p>This program displays the following output:</p>

<pre><code>$ perl ./unique-arrays.pl
[3 4], [5 6], [1 2]
[3 7], [2 5], [9 1]
</code></pre>

<h2>Task 2: Date Difference</h2>

<p><em>You are given two dates, <code>$date1</code> and <code>$date2</code> in the format YYYY-MM-DD.</em></p>

<p><em>Write a script to find the difference between the given dates in terms on years and days only.</em></p>

<pre><code>Example 1

    Input: $date1 = '2019-02-10'
           $date2 = '2022-11-01'
    Output: 3 years 264 days

Example 2

    Input: $date1 = '2020-09-15'
           $date2 = '2022-03-29'
    Output: 1 year 195 days

Example 3

    Input: $date1 = '2019-12-31'
           $date2 = '2020-01-01'
    Output: 1 day

Example 4

    Input: $date1 = '2019-12-01'
           $date2 = '2019-12-31'
    Output: 30 days

Example 5

    Input: $date1 = '2019-12-31'
           $date2 = '2020-12-31'
    Output: 1 year

Example 6

    Input: $date1 = '2019-12-31'
           $date2 = '2021-12-31'
    Output: 2 years

Example 7

    Input: $date1 = '2020-09-15'
           $date2 = '2021-09-16'
    Output: 1 year 1 day

Example 8

    Input: $date1 = '2019-09-15'
           $date2 = '2021-09-16'
    Output: 2 years 1 day
</code></pre>

<h3>Date Difference in Raku</h3>

<pre><code>for ('2019-02-10', '2022-11-01'), 
    ('2020-09-15', '2022-03-29'),
    ('2019-12-31', '2020-01-01'),
    ('2019-12-01', '2019-12-31'),
    ('2019-12-31', '2020-12-31'),
    ('2019-12-31', '2021-12-31'),
    ('2020-09-15', '2020-09-16'),
    ('2019-09-15', '2021-09-16') -&gt; @test {
    my @dates = map {Date.new($_) }, sort @test;
    my $delta-y = @dates[1].year - @dates[0].year;
    my ($y, $m, $d) = @dates[0].year, @dates[0].month.fmt("%02d"), 
        @dates[0].day.fmt("%02d");
    $delta-y -= 1 if "$m$d" &gt; join "", @dates[1].month.fmt("%02d"), 
        @dates[1].day.fmt("%02d");
    $y += $delta-y;
    my $new-date = Date.new("$y-$m-$d");
    my $delta-d = @dates[1] - $new-date;
    say "@dates[]: $delta-y year(s) {$delta-d.fmt("%3d")} day(s)";
}
</code></pre>

<p>This script displays the following output:</p>

<pre><code>$ raku ./date-diff.raku
2019-02-10 2022-11-01: 3 year(s) 264 day(s)
2020-09-15 2022-03-29: 1 year(s) 195 day(s)
2019-12-31 2020-01-01: 0 year(s)   1 day(s)
2019-12-01 2019-12-31: 0 year(s)  30 day(s)
2019-12-31 2020-12-31: 1 year(s)   0 day(s)
2019-12-31 2021-12-31: 2 year(s)   0 day(s)
2020-09-15 2020-09-16: 0 year(s)   1 day(s)
2019-09-15 2021-09-16: 2 year(s)   1 day(s)
</code></pre>

<h2>Wrapping up</h2>

<p>The next week Perl Weekly Challenge will start soon. If you want to participate in this challenge, please check https://perlweeklychallenge.org/ and make sure you answer the challenge before 23:59 BST (British summer time) on October 2, 2022. And, please, also spread the word about the Perl Weekly Challenge if you can.</p>
]]>
        

    </content>
</entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-6944466192663698713</id>
    <published>2022-09-24T23:04:00.000+02:00</published>
    <updated>2022-09-24T23:04:20.003+02:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(cdxi) 12 great CPAN modules released last week</title>
    <content type="html">Updates for &lt;i&gt;great CPAN modules&lt;/i&gt; released last week. A module is considered &lt;i&gt;great&lt;/i&gt; if its favorites count is greater or equal than 12.&lt;br/&gt;&lt;br/&gt;&lt;ol&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/PLICEASE/Alien-Build-2.70' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Alien::Build&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Build external dependencies for use in CPAN &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.70&lt;/strong&gt; on 2022-09-23&lt;/li&gt;  &lt;li&gt;Votes: 22&lt;/li&gt;  &lt;li&gt;Previous version: 2.68 was 18 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/PERLANCAR/App-lcpan-1.071' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;App::lcpan&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Manage your local CPAN mirror &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.071&lt;/strong&gt; on 2022-09-19&lt;/li&gt;  &lt;li&gt;Votes: 14&lt;/li&gt;  &lt;li&gt;Previous version: 1.070 was 4 months, 10 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/OLIVER/App-Netdisco-2.057001' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;App::Netdisco&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - An open source web-based network management tool. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.057001&lt;/strong&gt; on 2022-09-24&lt;/li&gt;  &lt;li&gt;Votes: 14&lt;/li&gt;  &lt;li&gt;Previous version: 2.055001 was 22 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/DROLSKY/DateTime-TimeZone-2.54' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;DateTime::TimeZone&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Time zone object base class and factory &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.54&lt;/strong&gt; on 2022-09-24&lt;/li&gt;  &lt;li&gt;Votes: 18&lt;/li&gt;  &lt;li&gt;Previous version: 2.53 was 1 month, 10 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/PLICEASE/FFI-CheckLib-0.30' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;FFI::CheckLib&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Check that a library is available for FFI &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.30&lt;/strong&gt; on 2022-09-22&lt;/li&gt;  &lt;li&gt;Votes: 13&lt;/li&gt;  &lt;li&gt;Previous version: 0.29 was 12 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/PEVANS/Future-AsyncAwait-0.59' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Future::AsyncAwait&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - deferred subroutine syntax for futures &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.59&lt;/strong&gt; on 2022-09-23&lt;/li&gt;  &lt;li&gt;Votes: 43&lt;/li&gt;  &lt;li&gt;Previous version: 0.58 was 4 months, 24 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/NINE/Inline-Python-0.57' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Inline::Python&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Write Perl subs and classes in Python. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.57&lt;/strong&gt; on 2022-09-18&lt;/li&gt;  &lt;li&gt;Votes: 12&lt;/li&gt;  &lt;li&gt;Previous version: 0.56 was 5 years, 1 month, 14 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/BINGOS/Module-CoreList-5.20220920' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Module::CoreList&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - what modules shipped with versions of perl &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;5.20220920&lt;/strong&gt; on 2022-09-21&lt;/li&gt;  &lt;li&gt;Votes: 38&lt;/li&gt;  &lt;li&gt;Previous version: 5.20220820 was 1 month, 1 day before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/OALDERS/Pithub-0.01040' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Pithub&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Github v3 API &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.01040&lt;/strong&gt; on 2022-09-23&lt;/li&gt;  &lt;li&gt;Votes: 19&lt;/li&gt;  &lt;li&gt;Previous version: 0.01039 was 1 month, 15 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/OVID/Test-Most-0.38' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Test::Most&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Most commonly needed test functions and features. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.38&lt;/strong&gt; on 2022-09-24&lt;/li&gt;  &lt;li&gt;Votes: 38&lt;/li&gt;  &lt;li&gt;Previous version: 0.37 was 2 years, 5 months, 20 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TOBYINK/Type-Tiny-2.000000' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Type::Tiny&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - tiny, yet Moo(se)-compatible type constraint &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.000000&lt;/strong&gt; on 2022-09-23&lt;/li&gt;  &lt;li&gt;Votes: 132&lt;/li&gt;  &lt;li&gt;Previous version: 1.016010 was 23 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/VPIT/Variable-Magic-0.63' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Variable::Magic&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Associate user-defined magic to variables from Perl. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.63&lt;/strong&gt; on 2022-09-20&lt;/li&gt;  &lt;li&gt;Votes: 24&lt;/li&gt;  &lt;li&gt;Previous version: 0.62 was 4 years, 10 months, 16 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/6944466192663698713/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2022/09/cdxi-12-great-cpan-modules-released.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6944466192663698713"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6944466192663698713"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2022/09/cdxi-12-great-cpan-modules-released.html" title="(cdxi) 12 great CPAN modules released last week"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-6145778478516961973</id>
    <published>2022-09-24T23:01:00.002+02:00</published>
    <updated>2022-09-24T23:01:43.022+02:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(dxxiv) metacpan weekly report</title>
    <content type="html">&lt;p&gt;This is the weekly favourites list of CPAN distributions. Votes count: 34&lt;/p&gt;&lt;p&gt;This week there isn't any remarkable distribution&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Build date: 2022/09/24 21:01:22 GMT&lt;/p&gt;&lt;br/&gt;&lt;p&gt;Clicked for &lt;u&gt;first time&lt;/u&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/App::pwhich" target="_blank"&gt;App::pwhich&lt;/a&gt; - Perl-only `which`&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Keyword::Pluggable" target="_blank"&gt;Keyword::Pluggable&lt;/a&gt; - define new keywords in pure Perl&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::HAProxy" target="_blank"&gt;Net::HAProxy&lt;/a&gt; - control HAProxy through a socket&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;p&gt;&lt;u&gt;Increasing&lt;/u&gt; its reputation:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/app::paperback" target="_blank"&gt;app::paperback&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Carmel" target="_blank"&gt;Carmel&lt;/a&gt; (+1=25)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DateTime::Format::Natural" target="_blank"&gt;DateTime::Format::Natural&lt;/a&gt; (+1=17)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DBIx::Mint" target="_blank"&gt;DBIx::Mint&lt;/a&gt; (+1=6)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Digest" target="_blank"&gt;Digest&lt;/a&gt; (+1=10)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Digest::MD5" target="_blank"&gt;Digest::MD5&lt;/a&gt; (+1=29)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Digest::SHA" target="_blank"&gt;Digest::SHA&lt;/a&gt; (+1=24)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Faster::Maths" target="_blank"&gt;Faster::Maths&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/File::Which" target="_blank"&gt;File::Which&lt;/a&gt; (+1=25)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/FindBin" target="_blank"&gt;FindBin&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Firefox::Marionette" target="_blank"&gt;Firefox::Marionette&lt;/a&gt; (+1=14)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Future::AsyncAwait" target="_blank"&gt;Future::AsyncAwait&lt;/a&gt; (+1=43)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/GD" target="_blank"&gt;GD&lt;/a&gt; (+1=26)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Git::CPAN::Patch" target="_blank"&gt;Git::CPAN::Patch&lt;/a&gt; (+1=13)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/GitLab::API::v4" target="_blank"&gt;GitLab::API::v4&lt;/a&gt; (+1=8)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Image::ExifTool" target="_blank"&gt;Image::ExifTool&lt;/a&gt; (+1=38)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/IO::All" target="_blank"&gt;IO::All&lt;/a&gt; (+1=68)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Jenkins::API" target="_blank"&gt;Jenkins::API&lt;/a&gt; (+1=7)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Keyword::Simple" target="_blank"&gt;Keyword::Simple&lt;/a&gt; (+1=16)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/libnet" target="_blank"&gt;libnet&lt;/a&gt; (+1=29)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Mail::Sender::Easy" target="_blank"&gt;Mail::Sender::Easy&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Minion" target="_blank"&gt;Minion&lt;/a&gt; (+1=89)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Mojolicious::Plugin::WithCSRFProtection" target="_blank"&gt;Mojolicious::Plugin::WithCSRFProtection&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Moo" target="_blank"&gt;Moo&lt;/a&gt; (+1=293)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Moose" target="_blank"&gt;Moose&lt;/a&gt; (+1=322)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Plack" target="_blank"&gt;Plack&lt;/a&gt; (+1=228)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Term::ProgressBar" target="_blank"&gt;Term::ProgressBar&lt;/a&gt; (+1=28)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Test::MockTime" target="_blank"&gt;Test::MockTime&lt;/a&gt; (+1=13)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Type::Tiny" target="_blank"&gt;Type::Tiny&lt;/a&gt; (+1=132)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/WWW::Mechanize" target="_blank"&gt;WWW::Mechanize&lt;/a&gt; (+1=94)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/XML::XSH2" target="_blank"&gt;XML::XSH2&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;/ul&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/6145778478516961973/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2022/09/dxxiv-metacpan-weekly-report.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6145778478516961973"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6145778478516961973"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2022/09/dxxiv-metacpan-weekly-report.html" title="(dxxiv) metacpan weekly report"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry>
  <title>Perl documentation audit project featured at conference</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/perl-doc-audit-featured-at-conference"/>
  <id>tag:news.perlfoundation.org,2022-09-24:/post/perl-doc-audit-featured-at-conference</id>
  <published>2022-09-24T07:08:00</published>
  <updated>2022-09-24T07:08:00</updated>
  <summary>
  <![CDATA[
     Khawar Latif presented the findings of his Google Season of Docs perl documentation audit at the IEEE ProComm 2022 and the conference paper, Documentation in Open-Source Organizations: Content Audit and Gap Analysis for Perl, is now published at IEEExplore. Khawar said: “Thanks to Jason McIntosh, Makoto Nozaki and Dan Book for their support, and everyone who helped with the project. I hope this helps Perl and Open Source organizations in 
   ]]>
  </summary>
  <author>
    <name>Nic Evans</name>
  </author>
  <category term="Grants" scheme="http://www.sixapart.com/ns/types#category"/>
  <category term="Perl Foundation" scheme="http://www.sixapart.com/ns/types#category"/>
  <category term="Projects" scheme="http://www.sixapart.com/ns/types#category"/>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
     <p>Khawar Latif presented the findings of his Google Season of Docs perl documentation audit at the <a href="https://attend.ieee.org/procomm-2022/schedule/">IEEE ProComm 2022</a> and the conference paper, Documentation in Open-Source Organizations: Content Audit and Gap Analysis for Perl, is now published at<a href="https://ieeexplore.ieee.org/abstract/document/9881679"> IEEExplore</a>.</p>

<p>Khawar said: “Thanks to Jason McIntosh, Makoto Nozaki and Dan Book for their support, and everyone who helped with the project. I hope this helps Perl and Open Source organizations in general.”</p>

    ]]>
  </content>
</entry>
  <entry>
  <title>TPF launches merch store</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/tpf-merch-store"/>
  <id>tag:news.perlfoundation.org,2022-09-23:/post/tpf-merch-store</id>
  <published>2022-09-23T05:47:56</published>
  <updated>2022-09-23T05:47:56</updated>
  <summary>
  <![CDATA[
     TPF has launched an online store with Perl merchandise celebrating the Perl 5.36 release. The marketing committee plan to do a custom celebratory collection for each release of Perl with revenue from each sale going to TPF's Perl fund. The store includes long- and short-sleeved t-shirts, sweatshirts, hoodies and stickers all featuring a new Raptor image for the 5.36 release. **Please share the link via your socials! https://the-perl-store.creator-spring.com/** 
   ]]>
  </summary>
  <author>
    <name>Nic Evans</name>
  </author>
  <category term="Marketing" scheme="http://www.sixapart.com/ns/types#category"/>
  <category term="Perl Foundation" scheme="http://www.sixapart.com/ns/types#category"/>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
       <img src="_ra-rel-mnt_/simplecas/fetch_content/15bf3bcaf1d1e4e46d0d712e647df3ada69d41a6/Raptor5.36.jpg" style="max-width:100%;max-height:100%;padding:20px;" /><br>
     
     <p>TPF has launched an <a href="https://the-perl-store.creator-spring.com/">online store</a> with Perl merchandise (swag) celebrating the Perl 5.36 release. The marketing committee plan to do a custom celebratory collection for each release of Perl with revenue from each sale going to TPF's Perl fund.</p>

<p>The store includes long- and short-sleeved t-shirts, sweatshirts, hoodies and stickers - all featuring a new Raptor image for the 5.36 release.</p>

<p><strong>Please share the link via your socials! https://the-perl-store.creator-spring.com/</strong>
<img src="_ra-rel-mnt_/simplecas/fetch_content/15bf3bcaf1d1e4e46d0d712e647df3ada69d41a6/Raptor5.36.jpg" style="max-width:100%;" /></p>

    ]]>
  </content>
</entry>
  <entry>
  <title>Thank you Japan Perl Association</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/thank-you-jpa"/>
  <id>tag:news.perlfoundation.org,2022-09-22:/post/thank-you-jpa</id>
  <published>2022-09-22T11:27:49</published>
  <updated>2022-09-22T11:27:49</updated>
  <summary>
  <![CDATA[
     Japan Perl Association came up with an innovative idea to raise money for The Perl Foundation from their annual event, YAPC::Japan. To promote the online 2022 YAPC::Japan conference, the organizers chose to donate to TPF 5 yen per tweet that included #yapcjapan, and 300 yen per blog. Contributors raised 15,630 yen What a great way to raise money and also to raise awareness of their event. We understand JPA is 
   ]]>
  </summary>
  <author>
    <name>Nic Evans</name>
  </author>
  <category term="Perl Foundation" scheme="http://www.sixapart.com/ns/types#category"/>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
     <p>Japan Perl Association (JPA) came up with an innovative idea to raise money for The Perl Foundation from their annual event, YAPC::Japan.</p>

<p>To promote the online <a href="https://yapcjapan.org/2022online/">2022 YAPC::Japan conference</a>, the organizers chose to donate to TPF 5 yen per tweet that included #yapcjapan, and 300 yen per blog. Contributors raised 15,630 yen (just over US$100). What a great way to raise money and also to raise awareness of their event.</p>

<p>We understand JPA is planning an in person conference in Kyoto March 2023. Watch this space.</p>

<p>Thank you Japan Perl Association!</p>

    ]]>
  </content>
</entry>
  <entry>
    <title>Things I learned at PGDay Austria</title>
    <link href="http://domm.plix.at/perl/2022_09_things_i_learned_at_pgday.html"/>
    <id>http://domm.plix.at/perl/2022_09_things_i_learned_at_pgday.html</id>
    <updated>2022-09-19T16:42:27+00:00</updated>
    <category term="perl"/>
    <summary type="html">On Friday 16th the third PGDay Austria took place in Vienna. PGday is a single day PostgreSQL conference with a German and an English track. As I'm using Postgres as my preferred database engine, and </summary>
    <content type="html">&lt;p&gt;On Friday 16th the third &lt;a href="https://pgday.at"&gt;&lt;span class="caps"&gt;PGD&lt;/span&gt;ay Austria&lt;/a&gt; took place in Vienna. PGday is a single day PostgreSQL conference with a German and an English track. As I'm using Postgres as my preferred database engine, and also on our &lt;a href="https://balloon-events.com/"&gt;most recent project&lt;/a&gt; I decided (on rather short notice) to attend.&lt;/p&gt;

&lt;p&gt;Here's what I learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Everybody suffers from the &lt;a href="https://pgday.at/talks/solving-the-knapsack-problem/"&gt;knapsack problem&lt;/a&gt;, even if you don't know what it is&lt;ul&gt;
&lt;li&gt;Francesco Tisiot used this problem (i.e. packing stuff into your backpack) to give a nice introduction to recursive queries&lt;/li&gt;
&lt;li&gt;He has been "fighting against the Excel lobby" for too long (I hear you!)&lt;/li&gt;
&lt;li&gt;Besides the hand-drawn images I found it amusing how the font size of the &lt;span class="caps"&gt;SQL &lt;/span&gt;got smaller during the talk&lt;/li&gt;
&lt;li&gt;Postgres 14 has a few nice optimisations (&lt;code&gt;SEARCH&lt;/code&gt;, &lt;code&gt;CYCLE&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There are a lot of &lt;a href="https://pgday.at/talks/sinnvolle-postgresql-extensions/"&gt;useful Postgres extensions&lt;/a&gt; already in contrib (so no need to install extra stuff)&lt;ul&gt;
&lt;li&gt;Even after 20 years of giving talks, Hans-Jürgen Schönig is not safe from projector problems. But having some experience makes it less stressful for the speaker and fun for the audience...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt; is a must-have&lt;/li&gt;
&lt;li&gt;"The reason for performance problems is always a query" (so logging query stats helps!)&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;citext&lt;/code&gt; for case insensitive searches with very little overhead. But: "a little overhead is still better than no result"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pg_trgrm&lt;/code&gt; for similarity matching using trigrams. Can also be indexed (&lt;code&gt;... USING GIST(col gist_trgm_ops)&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy from program&lt;/code&gt; seems nice (though dangerous)&lt;/li&gt;
&lt;li&gt;More to check out: &lt;code&gt;pgstattuple&lt;/code&gt;, &lt;code&gt;pg_qualstats&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There is a lot of Open Data available&lt;ul&gt;
&lt;li&gt;Unfortunately a lot if it is in not very usable formats, lacking docs, or can currently only be understood by humans&lt;/li&gt;
&lt;li&gt;Karen Jex is working on a way to &lt;a href="https://pgday.at/talks/unlocking-open-data/"&gt;Unlock Open Data using an Open Source Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;There is a site called &lt;a href="https://findaphd.com"&gt;findaphd.com&lt;/a&gt; (not I have anything to do with academia)&lt;/li&gt;
&lt;li&gt;It's pity we have to spend so much time on figuring out what each open data set means. If only the authors would have spend a little more time to properly document / annotate the data...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;One can use &lt;a href="https://pgday.at/talks/pg-hint-plan/"&gt;pg_hint_plan&lt;/a&gt; for further insights into and hints to the query planer&lt;ul&gt;
&lt;li&gt;I haven't had any need for that yet.&lt;/li&gt;
&lt;li&gt;But it's nice that you can use unicode characters for table aliases: &lt;code&gt;select 🍎.name,🍌.price from apple as 🍎 left join banana as 🍌 ...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Postgres has a some / a lot &lt;a href="https://pgday.at/talks/postgres-pitfalls/"&gt;pitfalls&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;schema public&lt;/code&gt; is quite public, so (for postgres &amp;lt; 15) do &lt;code&gt;revoke all on schema public from public;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;hba&lt;/code&gt; in &lt;code&gt;pg_hba.conf&lt;/code&gt; stands for Host Based Access (I was wondering about that for a long time, but always to lazy to look it up..)&lt;/li&gt;
&lt;li&gt;better use &lt;code&gt;scram-sha-256&lt;/code&gt; than &lt;code&gt;md5&lt;/code&gt; in that file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bigserial&lt;/code&gt; probably makes more sense than &lt;code&gt;serial&lt;/code&gt; (IIRC we were using &lt;code&gt;bigserial&lt;/code&gt; in a rather old project, but I stopped using it for recent ones, no idea why..)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://pgday.at/talks/strategies-for-optimizing-materialized-views/"&gt;Strategies for optimizing materialized views for speed and timeliness&lt;/a&gt; seem to mostly apply to &lt;a href="https://www.timescale.com/"&gt;TimescaleDB&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;which looks interesting and I wanted to check it out for some time now&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REFRESH MATERIALIZED VIEW CONCURRENTLY&lt;/code&gt; will probably still be useful.&lt;/li&gt;
&lt;li&gt;Another interesting extension: &lt;code&gt;pg_cron&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I did not find the keynotes especially interesting&lt;ul&gt;
&lt;li&gt;They where mostly sponsor presentations, not the weird masterpieces of talks I'm used to from Perl conferences.&lt;/li&gt;
&lt;li&gt;But still, fair enough to give the sponsors some time to present themselves&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I did not like the hat in the goodie bag (seems a bit wasteful, and the design will prevent any non-ironic use)&lt;/li&gt;
&lt;li&gt;Besides that it was another very nice conference!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to the orgas, speakers, sponsors and attendees!&lt;/p&gt;</content>
    <category term="event"/>
    <category term="PostgreSQL"/>
  </entry>
  <entry>
    <title>#582 - Grandfather’s Perl</title>
    <link rel="alternate" href="https://perlweekly.com/archive/582.html" type="text/html"/>
    <content type="html">&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;Few months ago, there was a blog post &lt;a href="https://stackoverflow.blog/2022/07/06/why-perl-is-still-relevant-in-2022"&gt;Why Perl is still relevant in 2022&lt;/a&gt; created a lot of noise among the &lt;strong&gt;Perl&lt;/strong&gt; community. The author clearly missed the point. If you check the comments section, you can see how, White Camel Awardee, &lt;strong&gt;Dave Cross&lt;/strong&gt; and few others responed to the post.&lt;/p&gt;
&lt;p&gt;I was pleasantly surprised when I found out that &lt;strong&gt;Dave&lt;/strong&gt; came up with perfect response to the other blog post with this &lt;a href="https://stackoverflow.blog/2022/09/08/this-is-not-your-grandfathers-perl"&gt;This is not your grandfather’s Perl&lt;/a&gt;. It has already created positive noise. If you want to take a closer look at the recent changes to the latest release of &lt;/strong&gt;Perl v5.36&lt;/strong&gt; then please do checkout the &lt;a href="https://github.com/manwar/perl-cool-snippets"&gt;GitHub repository&lt;/a&gt; sharing the changes with example. By the way, it is not just limited to &lt;strong&gt;v5.36&lt;/strong&gt;. You will find plenty more to keep you busy.&lt;/p&gt;
&lt;p&gt;Talking about &lt;strong&gt;Perl&lt;/strong&gt;, we got another gem from &lt;strong&gt;Curtis Poe&lt;/strong&gt; sharing the &lt;a href="https://ovid.github.io/articles/current-corinna-status.html"&gt;Current Corinna Status&lt;/a&gt;. If you can't wait for &lt;strong&gt;Corinna&lt;/strong&gt;, I would suggest you take a look at &lt;strong&gt;CPAN&lt;/strong&gt; module &lt;a href="https://metacpan.org/pod/Object::Pad"&gt;Object::Pad&lt;/a&gt; by &lt;strong&gt;Paul Evans&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Last but not the least, today, &lt;strong&gt;Monday 19 September&lt;/strong&gt;, the date of &lt;strong&gt;Her Majesty Queen Elizabeth II's State Funeral&lt;/strong&gt; declared as National Bank Holiday. Please checkout the rest of the newsletter.&lt;/p&gt;</content>
    <id>https://perlweekly.com/archive/582.html</id>
    <published>2022-09-19T10:00:00Z</published>
    <updated>2022-09-19T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
    <title>Deepest Common Index</title>
    <link rel="alternate" href="http://www.rabbitfarm.com/cgi-bin/blosxom/2022/09/18#pwc182" type="text/html"/>
    <content type="html">
&lt;p&gt;&lt;em&gt;The examples used here are from the weekly challenge problem statement and demonstrate 
the working solution.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Part 1&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given a list of integers. Write a script to find the index of the first biggest 
number in the list.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36; 
use strict;
use warnings;

sub index_biggest{
    my(@numbers) = @_;
    my @sorted = sort {$b &lt;=&gt; $a} @numbers; 
    map { return $_ if $numbers[$_] == $sorted[0] } 0 .. @numbers - 1; 
}

MAIN:{
    my @n;
    @n = (5, 2, 9, 1, 7, 6);
    print index_biggest(@n) . "\n";  
    @n = (4, 2, 3, 1, 5, 0);  
    print index_biggest(@n) . "\n";  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-1.pl
2
4
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;Essentially this solution is two lines, and could even have been a one liner. All that is 
required is to &lt;code&gt;sort&lt;/code&gt; the array of numbers and then determine the index of the first 
occurrence of the largest value from the original list. Finding the index of the first
occurrence can be done using a &lt;code&gt;map&lt;/code&gt; with a &lt;code&gt;return&lt;/code&gt; to short circuit the search as soon
as the value is found.&lt;/p&gt;

&lt;h2&gt;Part 2&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Given a list of absolute Linux file paths, determine the deepest path to the directory 
that contains all of them.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use strict;
use warnings;

sub deepest_path{
    my(@paths) = @_;
    my @sub_paths = map { [split(/\//, $_)] } @paths; 
    my @path_lengths_sorted = sort { $a &lt;=&gt; $b } map { 0 + @{$_} } @sub_paths;    
    my $deepest_path = q//; 
    for my $i (0 .. $path_lengths_sorted[0] - 1){
        my @column =  map { $_-&gt;[$i] } @sub_paths;
        my %h;
        map { $h{$_} = undef } @column;
        $deepest_path .= (keys %h)[0] . q#/# if 1 == keys %h;  
    }  
    chop $deepest_path;
    return $deepest_path;  
}

MAIN:{
    my $data = do{
        local $/;
        &amp;lt;DATA&amp;gt;; 
    };
    my @paths = split(/\n/, $data);  
    print deepest_path(@paths) . "\n"; 
}

__DATA__
/a/b/c/1/x.pl
/a/b/c/d/e/2/x.pl
/a/b/c/d/3/x.pl
/a/b/c/4/x.pl
/a/b/c/d/5/x.pl
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-2.pl
/a/b/c
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;The approach here is fairly straightforward but I will admit that it may look more complex
than it truly is if you simply glance at the code.&lt;/p&gt;

&lt;p&gt;To summarize what is going on here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We read in the file paths, one path (string) per line.
&lt;/li&gt;
&lt;li&gt;The paths are sent to &lt;code&gt;deepest_path()&lt;/code&gt; where we create a 2d array. Each array element
is an array reference of file sub paths. For example here &lt;code&gt;$sub_paths[0]&lt;/code&gt; is 
&lt;code&gt;[a, b, c, 1, x.pl]&lt;/code&gt;.
&lt;/li&gt;
&lt;li&gt;We sort the lengths of all the sub path array references to know how far we must search.
We need only look as far as the shortest path after all.
&lt;/li&gt;
&lt;li&gt;At each iteration we take column wise slices.
&lt;/li&gt;
&lt;li&gt;For each column wise slice we check if all the sub paths are equal. We do this but 
putting all the sub path values into a hash as keys. If we have only one key value when 
done we know all the values are equal.
&lt;/li&gt;
&lt;li&gt;As long as tall the sub paths are equal we accumulate it in &lt;code&gt;$deepest_path&lt;/code&gt;.
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$deepest_path&lt;/code&gt; is returned when we are doing examining all sub paths. (We &lt;code&gt;chop&lt;/code&gt; the 
trailing &lt;code&gt;/&lt;/code&gt;). Done!
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-182/"&gt;Challenge 182&lt;/a&gt;&lt;/p&gt;</content>
    <id>http://www.rabbitfarm.com/cgi-bin/blosxom/perl/pwc182</id>
    <published>2022-09-18T20:17:00-04:00</published>
    <updated>2022-09-18T20:17:00-04:00</updated>
    <category term="/perl"/>
  </entry>
  <entry>
    <title>#581 - What to write about?</title>
    <link rel="alternate" href="https://perlweekly.com/archive/581.html" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Hi there!</p>
<p>People often tell me that they don't know what to write about or that they are too new to Perl to blog about anything. Let's see.</p>
<p>Last week I posted this article about <a href="https://perlmaven.com/ansi-command-line-colors-with-perl">ANSI command line colors with Perl</a>. It hardly has anything to do with Perl, but I needed it and it can be a useful to others as well. Actually it originated from a discussion I had with my son who is using Python. So first I wrote the article <a href="https://code-maven.com/ansi-command-line-colors-with-python">ANSI colors using Python</a> and only after that I converted it to Perl.</p>
<p>It did not require any deep knowledge, definitely not that of Python or Perl.</p>
<p>So if you would like to try writing articles, there are plenty of such small subjects one can cover.</p>
<p>After including the link in the previous edition of the Perl Weekly, Thomas Köhler contacted me saying that he would do it differently and then he posted a short article showing how would he use <a href="http://gott-gehabt.de/800_wer_wir_sind/thomas/Homepage/Computer/perl/ansi-colors.html">ANSI colors in Perl</a> including a link back to the original article.</p>
<p>This is excellent.</p>
<p>So here is a suggestion: If you don't have an idea for an article, pick one of the <a href="https://perlmaven.com/">Perl Maven</a> posts and write a different solution or extend the subject and send a link to us, the editors of the Perl Weekly.</p>
<p>Enjoy your week!</p></div>
    </content>
    <id>https://perlweekly.com/archive/581.html</id>
    <published>2022-09-12T10:00:00Z</published>
    <updated>2022-09-12T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
    <title>These Sentences Are Getting Hot</title>
    <link rel="alternate" href="http://www.rabbitfarm.com/cgi-bin/blosxom/2022/09/11#pwc181" type="text/html"/>
    <content type="html">
&lt;p&gt;&lt;em&gt;The examples used here are from the weekly challenge problem statement and demonstrate 
the working solution.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Part 1&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given a paragraph. Write a script to order each sentence alphanumerically and 
print the whole paragraph.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use strict;
use warnings;

sub sort_paragraph{
    my($paragraph) = @_;
    my @sentences = split(/\./, $paragraph); 
    for(my $i = 0; $i &lt; @sentences; $i++){
        $sentences[$i] = join(" ", sort {uc($a) cmp uc($b)} split(/\s/, $sentences[$i]));
    }
    return join(".", @sentences);
}

MAIN:{
    my $paragraph = do{
        local $/;
        &amp;lt;DATA&amp;gt;;
    };
    print sort_paragraph($paragraph);
}

__DATA__
All he could think about was how it would all end. There was
still a bit of uncertainty in the equation, but the basics
were there for anyone to see. No matter how much he tried to
see the positive, it wasn't anywhere to be seen. The end was
coming and it wasn't going to be pretty.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-1.pl
about All all could end he how it think was would. a anyone basics bit but equation, for in of see still the the There there to uncertainty was were. anywhere be he how it matter much No positive, see seen the to to tried wasn't. and be coming end going it pretty The to was wasn't&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;This code is fairly compact but not at all obfuscated, I would argue. First we take in the
paragraph all at once. Then we split into sentences and begin the sorting.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;sort&lt;/code&gt; is a little complicated looking at first because we want the words to be sorted 
irrespective of letter case. One way to handle that is to compare only all uppercase 
versions of the words. Lowercase would work too, of course!&lt;/p&gt;

&lt;h2&gt;Part 2&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given file with daily temperature record in random order. Write a script to find 
out days hotter than previous day.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use strict;
use warnings;

use DBI;
use Text::CSV;
use Time::Piece;

sub hotter_than_previous{
    my($data) = @_;
    my @hotter;
    my $csv_parser = Text::CSV-&gt;new();
    my $dbh = DBI-&gt;connect(q/dbi:CSV:/, undef, undef, undef);
    $dbh-&gt;do(q/CREATE TABLE hotter_than_previous_a(day INTEGER, temperature INTEGER)/);
    $dbh-&gt;do(q/CREATE TABLE hotter_than_previous_b(day INTEGER, temperature INTEGER)/);
    for my $line (@{$data}){
        $line =~ tr/ //d;
        $csv_parser-&gt;parse($line);
        my($day, $temperature) = $csv_parser-&gt;fields();
        $day = Time::Piece-&gt;strptime($day, q/%Y-%m-%d/);
        $dbh-&gt;do(q/INSERT INTO hotter_than_previous_a VALUES(/ . $day-&gt;epoch . qq/, $temperature)/);
        $dbh-&gt;do(q/INSERT INTO hotter_than_previous_b VALUES(/ . $day-&gt;epoch . qq/, $temperature)/);
    }
    my $statement = $dbh-&gt;prepare(q/SELECT day FROM hotter_than_previous_a A INNER JOIN  
                                    hotter_than_previous_b B WHERE (A.day - B.day = 86400)                            
                                    AND A.temperature &gt; B.temperature/);
    $statement-&gt;execute();
    while(my $row = $statement-&gt;fetchrow_hashref()){
        push @hotter, $row-&gt;{day};
    }
    @hotter = map {Time::Piece-&gt;strptime($_, q/%s/)-&gt;strftime(q/%Y-%m-%d/)} sort @hotter;
    unlink(q/hotter_than_previous_a/);
    unlink(q/hotter_than_previous_b/);
    return @hotter;
}

MAIN:{
    my $data = do{
        local $/;
        &amp;lt;DATA&amp;gt;; 
    };
    my @hotter = hotter_than_previous([split(/\n/, $data)]);
    say join(qq/\n/, @hotter);
}

__DATA__
2022-08-01, 20
2022-08-09, 10
2022-08-03, 19
2022-08-06, 24
2022-08-05, 22
2022-08-10, 28
2022-08-07, 20
2022-08-04, 18
2022-08-08, 21
2022-08-02, 25
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-2.pl
2022-08-02
2022-08-05
2022-08-06
2022-08-08
2022-08-10
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;To be clear up front, this is an intentionally over engineered solution! I have been 
intrigued by the idea of DBD::CSV since I first heard of it but never had a reason to use 
it. So I invented a reason! &lt;/p&gt;

&lt;p&gt;DBD::CSV provides a SQL interface to CSV data. That is, it allows you to write SQL queries
against CSV data as if they were a more ordinary relational database. Very cool! Instead
of solving this problem in Perl I am actually implementing the solution in SQL. Perl is
providing the implementation of the SQL Engine and the quasi-database for the CSV data.&lt;/p&gt;

&lt;p&gt;DBD::CSV is quite powerful but is not completely on par feature wise with what you'd get
if you were using an ordinary database. Not all SQL data types are supported, for example.
Work arounds can be constructed to do everything that we want and these sorts of trade 
offs are to be expected. To store the dates we use &lt;code&gt;Time::Piece&lt;/code&gt; to compute UNIX epoch
times which are stored as INTEGERs. Also, DBD::CSV expects data from files and so we can't
use the data directly in memory, it has to be written to a file first. Actually, we find 
out that we need to create two tables! Each hold exact copies of the same data.&lt;/p&gt;

&lt;p&gt;The creation of two tables is due to a quirk of the underlying SQL Engine SQL::Statement.
SQL::Statement will throw an error when doing a join on the same table. The way one would
do this ordinarily is something like 
&lt;code&gt;SELECT day FROM hotter_than_previous A, hotter_than_previous B ...&lt;/code&gt;. That join allows SQL 
to iterate over all pairs of dates but this throws an error when done with SQL::Statement. 
To work around this we instead we create two tables which works.&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-181/"&gt;Challenge 181&lt;/a&gt;&lt;/p&gt;</content>
    <id>http://www.rabbitfarm.com/cgi-bin/blosxom/perl/pwc181</id>
    <published>2022-09-11T08:45:00-04:00</published>
    <updated>2022-09-11T08:45:00-04:00</updated>
    <category term="/perl"/>
  </entry>
</feed>
