<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Planet Perl</title>
  <link rel="alternate" href="https://perl.theplanetarium.org/" type="text/html"/>
  <subtitle>There's More Than One Way To Aggregate It</subtitle>
  <author>
    <name>Dave Cross</name>
    <email>dave@theplanetarium.org</email>
  </author>
  <updated>2023-02-08T04:41:10Z</updated>
  <link rel="self" href="https://perl.theplanetarium.org/" type="application/atom+xml"/>
  <id>https://perl.theplanetarium.org/</id>
  <entry>
    <title>Find expiring SSL certs using curl, Go and Perl.</title>
    <link rel="alternate" href="https://blogs.perl.org/users/olaf_alders/2023/02/find-expiring-ssl-certs-using-curl-go-and-perl.html"/>
    <id>tag:blogs.perl.org,2023:/users/olaf_alders//280.11022</id>
    <published>2023-02-07T16:45:00Z</published>
    <updated>2023-02-07T08:02:14Z</updated>
    <author>
        <name>Olaf Alders</name>
        <uri>http://www.wundercounter.com</uri>
    </author>
    <category term="curl" label="curl" scheme="http://www.sixapart.com/ns/types#tag"/>
    <category term="go" label="Go" scheme="http://www.sixapart.com/ns/types#tag"/>
    <category term="perl" label="perl" scheme="http://www.sixapart.com/ns/types#tag"/>
    <category term="ssl" label="SSL" scheme="http://www.sixapart.com/ns/types#tag"/>
    <content type="html" xml:lang="en" xml:base="https://blogs.perl.org/users/olaf_alders/">
        <![CDATA[<p>Just like domain name registrations, SSL certificates need to be renewed regularly, otherwise they expire. This means you now have one more thing to monitor. Let's look at ways to do this in Perl, curl and Go. We'll also get a quick introduction to a hosted Mojolicious app that I wrote to make this even easier.</p>

<p><a href="https://www.olafalders.com/find-expiring-ssl-certs/">Read the full post.</a><br />
</p>]]>
        
    </content>
</entry>
  <entry>
    <title>OSDC Lesson 2</title>
    <link rel="alternate" href="https://dev.to/greengorcer/osdc-lesson-2-567" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><h2>
  
  
  First thing first
</h2>

<p>After joining OSDC, starting submitting pull requests and creating github.io pages, I learned that my username in github.com is actually greeng<strong>or</strong>cer, not <em>greengrocer</em>.</p>

<p>After checking github.com, I found that <em>greengrocer</em> was available I When I joined github.com in 2014. So it was totally my spelling error at that time.</p>

<p>Someone took <em>greengrocer</em> in 2016, so I need to figure out what to do with my username now. <em>greengorcer</em> is kinda stupid.</p>

<h2>
  
  
  You need to install openssh-client to get ssh-keygen command
</h2>

<p>Then using ssh-keygen to generate a ssh public key for SSH github push.</p>

<h2>
  
  
  git basic work flow
</h2>

<h3>
  
  
  1. git clone
</h3>

<p>This is for the initial downloading from github.com repo.</p>

<h3>
  
  
  2. make some edit in the repo
</h3>

<h3>
  
  
  3. git add <em>filename</em>
</h3>

<p>This put the edited files to be staged</p>

<h3>
  
  
  4. git commit
</h3>

<p>Submit the change in the local rep.</p>

<h3>
  
  
  5. git push
</h3>

<p>Submit the change of the local repo to the github.com repo.</p>

<h3>
  
  
  git reset --soft HEAD~1
</h3>

<p>Revoke the latest commit in the local repo.</p>

<h3>
  
  
  git restore --staged <em>filename</em>
</h3>

<p>This will unstage the files. The reverse action of <em>add</em>.</p>

<h3>
  
  
  git checkout <em>filename</em>
</h3>

<p>This could revoke the local change.</p>

<h2>
  
  
  .gitconfig
</h2>

<p>git config --global --add user.name "Foo Bar"</p>

<p>git config --global --add user.email <a href="mailto:foo@bar.com">foo@bar.com</a></p>

<p>You can also edit the ~/.gitconfig file directly.</p>

<h2>
  
  
  A little about ack, a Perl project
</h2>

<p>It is under active development, but the demand is mainly in the document format definition, not in Perl code.</p>

</div>
    </content>
    <author>
      <name>greengorcer</name>
    </author>
    <id>https://dev.to/greengorcer/osdc-lesson-2-567</id>
    <published>2023-02-07T05:06:05Z</published>
    <updated>2023-02-07T05:06:05Z</updated>
    <category term="osdc"/>
    <category term="perl"/>
    <category term="git"/>
    <category term="ack"/>
  </entry>
  <entry>
    <title>Perl Weekly #602 - RIP Ben Davies</title>
    <link rel="alternate" href="https://dev.to/szabgab/perl-weekly-602-rip-ben-davies-lbl" type="text/html"/>
    <content type="html">&lt;p&gt;Originally published at &lt;a href="https://perlweekly.com/archive/602.html"&gt;Perl Weekly 602&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;I got the sad news about &lt;strong&gt;Ben Davies&lt;/strong&gt; through the git notifications, being member Raku github repositories. Although I didn't know him personally but I felt a personal loss. He was so young and actively involved in development of Raku language. I found &lt;a href="https://www.tributearchive.com/obituaries/27062822/benjamin-nelson-davies"&gt;this page&lt;/a&gt; sharing the details, if you are interested.&lt;/p&gt;

&lt;p&gt;It reminded of loss another very dear friend of mine, &lt;a href="https://rakudoweekly.blog/2020/03/16/2020-11-farewell-good-friend"&gt;Jeff Goff (aka DrForr)&lt;/a&gt;. I had the honour to meet him at various Perl/Raku conferences. Life is so unpredictable, it is unbelievable. I have reached a point in my life where every little things create havoc as far as health is concerned.&lt;/p&gt;

&lt;p&gt;Talking about heartbroken news, I would like to bring the subject raised by &lt;strong&gt;Gabor Szabo&lt;/strong&gt; in the last edition of the &lt;a href="https://perlweekly.com/archive/601.html"&gt;weekly newsletter&lt;/a&gt;. At times, I wonder how can one be so disrespectful to others. I was really sad to hear what &lt;strong&gt;Gabor&lt;/strong&gt; had to go through. Honestly speaking, I only came to know about &lt;a href="https://www.holocaustremembrance.com/resources/working-definitions-charters/working-definition-antisemitism"&gt;Antisemitism&lt;/a&gt; when I moved to England in 2000. During my college days, I never had interest in subject outside of domain of India. Although I was aware of &lt;strong&gt;love/hate&lt;/strong&gt; relationship between Muslims and Jews, I never bothered looking into the history behind it. Muslim community in general in India is more sympathetic towards fellow muslims. Some may find, my relationship with &lt;strong&gt;Gabor&lt;/strong&gt; strange. Again, I must confess that I wasn't aware about &lt;strong&gt;Gabor&lt;/strong&gt; background when I first met him when he took my interview in &lt;strong&gt;2016&lt;/strong&gt;. I only found out later about him being a Jewish when I had further interactions with him with regard to CPAN works. He has been my mentor ever since I first met him and has helped me every time I was in trouble. For me, religion is very personal thing and I like to keep it private. Having said, I don't hide the fact that I am a practicing Muslim.&lt;/p&gt;

&lt;p&gt;I urge everyone, please be kind to each other and spread love. Life is too short, so enjoy every moment of it.&lt;/p&gt;

&lt;p&gt;Enjoy the rest of the newsletter.&lt;/p&gt;

&lt;p&gt;--&lt;br&gt;
  Your editor: Mohammad S. Anwar.&lt;/p&gt;

&lt;h2&gt;
  
  
  Announcements
&lt;/h2&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://blogs.perl.org/users/jason_a_crome/2023/02/new-dancer-dancer2-plus-ecosystem-updates.html"&gt;New Dancer, Dancer2 plus Ecosystem Updates&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Welcome to 2023 (just a little bit late)! We've put together a number of long overdue updates for Dancer, Dancer2, and other parts of the ecosystem.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://blogs.perl.org/users/psc/2023/02/this-week-in-psc-096.html"&gt;This Week in PSC (096)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Another quick updates from Perl Steering Council.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://blogs.perl.org/users/max_maischein/2023/02/united-domains-supports-the-german-perlraku-workshop.html"&gt;United-domains supports the German Perl/Raku-Workshop&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;United-domains now sponsor for German Perl/Raku workshop.&lt;/p&gt;




&lt;h2&gt;
  
  
  Articles
&lt;/h2&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://blogs.perl.org/users/lichtkind/2023/01/color-evolution.html"&gt;Color Evolution&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The most requested feature of the Cellgraph is now in operation: Colors.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://github.polettix.it/ETOOBUSY/2023/02/05/base-in-xlinx/"&gt;Add a base URL to xlinx&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://github.polettix.it/ETOOBUSY/2023/02/04/used-raku/"&gt;I used... Raku&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Why use Raku? Nice answer.&lt;/p&gt;




&lt;h2&gt;
  
  
  CPAN
&lt;/h2&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://blogs.perl.org/users/tom_wyant/2023/02/annotated-test2tools-index.html"&gt;Annotated Test2::Tools Index&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Interesting use case with regard to skip test inside for-loop. Highly recommended.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://github.polettix.it/ETOOBUSY/2023/02/01/data-resolver-some-docs/"&gt;Data::Resolver - some docs&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  
  
  The Weekly Challenge
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://theweeklychallenge.org/"&gt;The Weekly Challenge&lt;/a&gt; by &lt;a href="http://www.manwar.org/"&gt;Mohammad Anwar&lt;/a&gt; will help you step out of your comfort-zone. You can even win prize money of $50 Amazon voucher by participating in the weekly challenge. We pick one winner at the end of the month from among all of the contributors during the month. The monthly prize is kindly sponsored by Peter Sergeant of &lt;a href="https://perl.careers/"&gt;PerlCareers&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-203"&gt;The Weekly Challenge - 203&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Welcome to a new week with a couple of fun tasks: "Special Quadruplets" and "Copy Directory". If you are new to the weekly challenge, why not join us and have fun every week? For more information, please read the &lt;a href="https://theweeklychallenge.org/faq"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://theweeklychallenge.org/blog/recap-challenge-202"&gt;RECAP - The Weekly Challenge - 202&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Enjoy a quick recap of last week's contributions by Team PWC dealing with the "Consecutive Odds" and "Widest Valley" tasks in Perl and Raku. You will find plenty of solutions to keep you busy.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="http://www.rabbitfarm.com/cgi-bin/blosxom/perl/2023/02/05"&gt;Into the Odd Wide Valley&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Good to see the use of Perl v5.36, thanks for spreading the knowledge.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://raku-musings.com/odd-valleys.html"&gt;Odd Valleys&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Not just one but multiple versions presented by Arne with detailed comments. Keep it up great work.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://colincrain.com/2023/02/06/how-wide-is-my-valley/"&gt;How Wide is My Valley?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Task analysis by Colin is always the highlight of the week. Really enjoyed itm thanks for sharing.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://jacoby.github.io/2023/01/31/weekly-challenge-202-challenge-accepted.html"&gt;Challenge Accepted&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Solutions without any complicated logic, using just for-loops. Incredible, well done.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://dev.to/zapwai/weekly-challenge-202-59md"&gt;Weekly Challenge 202&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Easy to follow Perl solutions. Keep it up, great work.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://github.polettix.it/ETOOBUSY/2023/02/02/pwc202-consecutive-odds/"&gt;PWC202 - Consecutive Odds&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Interesting questions raised and cool solutions too in the end. Well done.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://github.polettix.it/ETOOBUSY/2023/02/03/pwc202-widest-valley/"&gt;PWC202 - Widest Valley&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Loved the story behind the solution. The process of getting there is always fun. Great work, keep it up.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://www.braincells.com/perl/2023/02/perl_weekly_challenge_week_202.html"&gt;Perl Weekly Challenge: Week 202&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Unique style of code with inline comment really helps understand the flow. Great work.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://github.com/manwar/perlweeklychallenge-club/tree/master/challenge-202/james-smith#readme"&gt;The Weekly Challenge 202&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Compact yet power packed solutions as always. Thanks for sharing the knowledge with us.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://blogs.perl.org/users/laurent_r/2023/01/perl-weekly-challenge-202-consecutive-odds-and-widest-valley.html"&gt;Perl Weekly Challenge 202: Consecutive Odds and Widest Valley&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Great demo of porting Raku solutions into Perl. I find it helpful to understand the code better. Well done.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://fluca1978.github.io/2023/01/30/PerlWeeklyChallenge202.html"&gt;nested loops everywhere!&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;We not have Raku magic but also SQL solutions. Highly recommend.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://pjcs-pwc.blogspot.com/2023/02/three-odd-things-in-valleys.html"&gt;Three odd things in the valleys&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Cool one-liner in Perl and interesting task analysis. Great work.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://hatley-software.blogspot.com/2023/01/robbie-hatleys-perl-solutions-to-weekly_31.html"&gt;The Weekly Challenge #202&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Use of finite state mmachine to solve the Widest Valley task is interesting. Well done.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://blog.firedrake.org/archive/2023/02/The_Weekly_Challenge_202__Consecutive_Valley.html"&gt;Consecutive Valley&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Roger choosen Raku and Rust this week to talk about in the blog post. Highly recommended if you Raku/Rust fan.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://dev.to/simongreennet/weekly-challenge-202-4dcm"&gt;Weekly Challenge 202&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Simon gone into the finer details this week, you don't want to miss it. Well done.&lt;/p&gt;




&lt;h2&gt;
  
  
  Rakudo
&lt;/h2&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://rakudoweekly.blog/2023/01/31/2023-05-rb-awarded/"&gt;2023.05 RB Awarded&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  
  
  Weekly collections
&lt;/h2&gt;

&lt;h3&gt;
  
  
  &lt;a href="http://niceperl.blogspot.com/"&gt;NICEPERL's lists&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://niceperl.blogspot.com/2023/02/cdxxx-14-great-cpan-modules-released.html"&gt;Great CPAN modules released last week&lt;/a&gt;;&lt;br&gt;&lt;a href="https://niceperl.blogspot.com/2023/02/dxliii-metacpan-weekly-report.html"&gt;MetaCPAN weekly report&lt;/a&gt;;&lt;br&gt;&lt;a href="https://niceperl.blogspot.com/2023/02/dlxxi-stackoverflow-perl-report.html"&gt;StackOverflow Perl report&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  
  
  &lt;a href="https://perl.careers/?utm_source=perlweekly&amp;amp;utm_campaign=perlweekly&amp;amp;utm_medium=perlweekly"&gt;Perl Jobs by Perl Careers&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://job.perl.careers/xn6"&gt;Perl to Node Cross-training? Yes Please! UK Remote Perl Role&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The client is interested in anyone with experience building web apps in Perl, using one of the major Perl frameworks. If you’re a crack-hand with Catalyst, a Mojolicious master, or a distinguished Dancer, they want you. You’ll be deploying apps your work to AWS, so experience would be handy, and the company’s big on testing, so they’d like you to know your way around Test::More.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://job.perl.careers/l5p"&gt;C, C++, and Perl Software Engineers, Let’s Keep the Internet Safe. UK Remote Perl Role&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A leading digital safeguarding solutions provider is looking for a software engineer experienced in C, C++, or Perl. You’ll have strong Linux knowledge and a methodical approach to problem solving that you use to investigate, replicate, and address customer issues. Your keen understanding of firewalls, proxies, Iptables, Squid, VPNs/IPSec and HTTP(S) will be key to your success at this company.&lt;/p&gt;

&lt;h3&gt;
  
  
  &lt;a href="https://job.perl.careers/ufc"&gt;Bold, beautiful, and… brainy? Senior Perl roles in Malaysia, Dubai and Malta&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;With all the knowledge in your big, beautiful brain, it’s time to join a company that appreciates your breadth of experience. Our client provides online trading services and with offices in Dubai, Malta, and Malaysia, they’ve got the global reach that may provide the challenge you’re looking for.  A seasoned Perl pro is just what their team needs as they expand, and that’s where you come in!&lt;/p&gt;




&lt;p&gt;You joined the Perl Weekly to get weekly e-mails about the Perl programming language and related topics.&lt;/p&gt;

&lt;p&gt;Want to see more? See the &lt;a href="https://perlweekly.com/archive/"&gt;archives&lt;/a&gt; of all the issues.&lt;/p&gt;

&lt;p&gt;Not yet subscribed to the newsletter? &lt;a href="https://perlweekly.com/subscribe.html"&gt;Join us free of charge&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;(C) Copyright &lt;a href="https://szabgab.com/"&gt;Gabor Szabo&lt;/a&gt;&lt;br&gt;
The articles are copyright the respective authors.&lt;/p&gt;

</content>
    <author>
      <name>Gabor Szabo</name>
    </author>
    <id>https://dev.to/szabgab/perl-weekly-602-rip-ben-davies-lbl</id>
    <published>2023-02-06T12:18:47Z</published>
    <updated>2023-02-06T12:18:47Z</updated>
    <category term="perl"/>
    <category term="news"/>
    <category term="programming"/>
  </entry>
  <entry>
    <title>#602 - RIP Ben Davies</title>
    <link rel="alternate" href="https://perlweekly.com/archive/602.html" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Hi there,</p>
<p>I got the sad news about <strong>Ben Davies</strong> through the git notifications, being member Raku github repositories. Although I didn't know him personally but I felt a personal loss. He was so young and actively involved in development of Raku language. I found <a href="https://www.tributearchive.com/obituaries/27062822/benjamin-nelson-davies">this page</a> sharing the details, if you are interested.</p>
<p>It reminded of loss another very dear friend of mine, <a href="https://rakudoweekly.blog/2020/03/16/2020-11-farewell-good-friend">Jeff Goff (aka DrForr)</a>. I had the honour to meet him at various Perl/Raku conferences. Life is so unpredictable, it is unbelievable. I have reached a point in my life where every little things create havoc as far as health is concerned.</p>
<p>Talking about heartbroken news, I would like to bring the subject raised by <strong>Gabor Szabo</strong> in the last edition of the <a href="https://perlweekly.com/archive/601.html">weekly newsletter</a>. At times, I wonder how can one be so disrespectful to others. I was really sad to hear what <strong>Gabor</strong> had to go through. Honestly speaking, I only came to know about <a href="https://www.holocaustremembrance.com/resources/working-definitions-charters/working-definition-antisemitism">Antisemitism</a> when I moved to England in 2000. During my college days, I never had interest in subject outside of domain of India. Although I was aware of <strong>love/hate</strong> relationship between Muslims and Jews, I never bothered looking into the history behind it. Muslim community in general in India is more sympathetic towards fellow muslims. Some may find, my relationship with <strong>Gabor</strong> strange. Again, I must confess that I wasn't aware about <strong>Gabor</strong> background when I first met him when he took my interview in <strong>2016</strong>. I only found out later about him being a Jewish when I had further interactions with him with regard to CPAN works. He has been my mentor ever since I first met him and has helped me every time I was in trouble. For me, religion is very personal thing and I like to keep it private. Having said, I don't hide the fact that I am a practicing Muslim.</p>
<p>I urge everyone, please be kind to each other and spread love. Life is too short, so enjoy every moment of it.</p>
<p>Enjoy the rest of the newsletter.</p></div>
    </content>
    <id>https://perlweekly.com/archive/602.html</id>
    <published>2023-02-06T10:00:00Z</published>
    <updated>2023-02-06T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
  <title>Maintaining Perl (Tony Cook) December 2022 </title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/maintaining_perl_tonyc_december_2022"/>
  <id>tag:news.perlfoundation.org,2023-02-06:/post/maintaining_perl_tonyc_december_2022</id>
  <published>2023-02-06T09:34:28</published>
  <updated>2023-02-06T09:34:28</updated>
  <summary>
  <![CDATA[
     Tony writes: 2022/12/01 Thursday  0.83 github notifications  0.08 #20564 review and approve  1.87 ceil/floor overloading debugging, solve one issue, try  to do the next  2.65 ceil/floor overloading debugging  5.43 2022/12/05 Monday  0.40 github notifications  0.22 #20566 review and approve  0.35 #20581 review and comment  0.55 #20575 review and comments  0.63 #20580 testing, review code and comment  0.28 #20583 
   ]]>
  </summary>
  <author>
    <name>alh</name>
  </author>
  <category term="Grants" scheme="http://www.sixapart.com/ns/types#category"/>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
       <img src="_ra-rel-mnt_/simplecas/fetch_content/7f97282811f6a9f862d7e659c79e5462cc195d94/grant-funding.png" style="max-width:100%;max-height:100%;padding:20px;" /><br>
     
     <p>Tony writes:
```
[Hours]         [Activity]
2022/12/01      Thursday
 0.83           github notifications
 0.08           #20564 review and approve
 1.87           ceil/floor overloading - debugging, solve one issue, try
                to do the next</p>

<h1> 2.65           ceil/floor overloading - debugging</h1>

<p>5.43</p>

<p>2022/12/05      Monday
 0.40           github notifications
 0.22           #20566 review and approve
 0.35           #20581 review and comment
 0.55           #20575 review and comments
 0.63           #20580 testing, review code and comment
 0.28           #20583 review, debugging, and comment</p>

<h1> 1.42           fwrapv - changes, testing, make PR #20584</h1>

<p>3.85</p>

<p>2022/12/06      Tuesday
 0.38           #20584 comment
 0.83           rfc 015</p>

<h1> 1.58           rfc 015</h1>

<p>2.79</p>

<p>2022/12/07      Wednesday
 0.42           github notifications
 1.35           rfc 015 debugging</p>

<h1> 2.22           rfc 015 fixes, polish, push for CI</h1>

<p>3.99</p>

<p>2022/12/08      Thursday
 1.68           #20584 research, comment and close
 0.27           rfc 015 review CI results and make PR 20593</p>

<h1> 0.38           #20592 review and approve</h1>

<p>2.33</p>

<p>2022/12/09      Friday</p>

<h1> 0.30           #20505 review and comment</h1>

<p>0.30</p>

<p>2022/12/14      Wednesday</p>

<h1> 1.10           #20593 minor fixes, testing</h1>

<p>1.10</p>

<p>2022/12/15      Thursday
 1.35           #20607 testing, research, report upstream bug, comment on</p>

<h1>                #20601</h1>

<p>1.35</p>

<p>2022/12/19      Monday</p>

<h1> 1.13           #20593 comments, some fixes, testing</h1>

<p>1.13</p>

<p>Which I calculate is 22.27 hours.</p>

<p>Approximately 11 tickets were reviewed or worked on.
```</p>

    ]]>
  </content>
</entry>
  <entry>
    <title>New Dancer, Dancer2 plus Ecosystem Updates</title>
    <link rel="alternate" href="https://blogs.perl.org/users/jason_a_crome/2023/02/new-dancer-dancer2-plus-ecosystem-updates.html"/>
    <id>tag:blogs.perl.org,2023:/users/jason_a_crome//712.11021</id>
    <published>2023-02-06T04:50:09Z</published>
    <updated>2023-02-06T04:56:37Z</updated>
    <author>
        <name>Jason A. Crome</name>
        <uri>https://cromedome.net</uri>
    </author>
    <category term="dancer" label="dancer" scheme="http://www.sixapart.com/ns/types#tag"/>
    <content type="html" xml:lang="en" xml:base="https://blogs.perl.org/users/jason_a_crome/">
        <![CDATA[<p>Welcome to 2023 (just a little bit late)! We've put together a number of long overdue updates for Dancer, Dancer2, and other parts of the ecosystem. </p>

<p>Dancer2 version 0.400001:</p>

<pre><code> [ BUG FIXES ]
* PR #1247: Fix edge case in plugin compat (Sawyer X)
* GH #1621: Fix recursion error in TT after longjump (Andy Beverley, Russell @veryrusty Jenkins)
* PR #1667: Remove failing module from GitHub Actions config (Jason A. Crome)

[ ENHANCEMENTS ]
* GH #769, PR #829, #1662: Rename show_errors as show_stacktrace (Nuno Ramos Carvalho, Sawyer X)
* GH #1594: Use Unicode::UTF8 if available (Sawyer X)

[ DOCUMENTATION ]
* GH #1657: Fix the Dancer2::DeprecationPolicy abstract (Jason A. Crome)
* GH #1661: Add 'gen' command to 'dancer2' runs (Steve Bertrand)
* PR #1671: Fix broken links in POD; avoid passive voice (Tom Hukins)
</code></pre>

<p>Dancer2::Template::Xslate version 0.2.0:
- Add docs/warning about using Dancer2 layouts with cascading templates (Pedro Melo)</p>

<p>Dancer2::Session::CHI version 0.05:
- Various doc fixes</p>

<p>Task::Dancer2 version 0.07:
* This was woefully out of date. Updated for all <code>Dancer2::*</code> modules available today (thanks to GeekRuthie for the assistance)</p>

<p>Dancer version 1.3521 will be hitting CPAN soon:
- Fix XML serializer tests (gregoa &amp; Debian team)</p>

<p>The <a href="https://github.com/PerlDancer/Dancer2/wiki">Dancer2 Wiki</a> has seen some updates, too. Do you want to contribute, but aren't sure where to start? This handy guide has some good places to get started; there's a number of plugins for Dancer that haven't been ported to Dancer2, for example.</p>

<p>Is there something you'd like to see? Please add it to the <a href="https://github.com/PerlDancer/Dancer2/wiki/Wishlist">wishlist</a>!</p>

<p>As a final reminder, we marked a number of keywords, methods, and other code in Dancer2 for deprecation last year. Hard deprecation will take effect by the end of March, so any plugins built still relying on deprecated code will need to be updated. See <a href="https://blogs.perl.org/users/jason_a_crome/2022/03/dancer2-0400000-released.html">this blog post</a> for more information.</p>

<p>Looking forward to a great 2023! As always, happy Dancing!</p>

<p>Jason/CromeDome</p>
]]>
        

    </content>
</entry>
  <entry>
    <title>RECAP - The Weekly Challenge - 202</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/recap-challenge-202/" type="text/html"/>
    <content type="text">TABLE OF CONTENTS  01. HEADLINES 02. STAR CONTRIBUTORS 03. CONTRIBUTION STATS 04. GUESTS 05. LANGUAGES 06. CENTURION CLUB 07. DAMIAN CONWAY&amp;rsquo;s CORNER 08. ANDREW SHITOV&amp;rsquo;s CORNER 09. PERL SOLUTIONS 10. RAKU SOLUTIONS 11. PERL &amp;amp; RAKU SOLUTIONS HEADLINES  Thank you Team PWC for your continuous support and encouragement.
STAR CONTRIBUTORS  Following members shared solutions to both tasks in Perl and Raku as well as blogged about it.</content>
    <id>https://theweeklychallenge.org/blog/recap-challenge-202/</id>
    <published>2023-02-06T00:00:00Z</published>
    <updated>2023-02-06T00:00:00Z</updated>
  </entry>
  <entry>
    <title>The Weekly Challenge - 203</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/perl-weekly-challenge-203/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">TABLE OF CONTENTS  01. HEADLINES 02. SPONSOR 03. RECAP 04. PERL REVIEW 05. RAKU REVIEW 06. CHART 07. NEW MEMBERS 08. GUESTS 09. TASK #1: Special Quadruplets 10. TASK #2: Copy Directory HEADLINES  Welcome to the Week #203 of The Weekly Challenge.
We have a new member from Russia last week, Valerii Dundukov. Welcome on board.
Today is the first Monday of the month and time to declare our first champion of the year 2023.</div>
    </content>
    <id>https://theweeklychallenge.org/blog/perl-weekly-challenge-203/</id>
    <published>2023-02-06T00:00:00Z</published>
    <updated>2023-02-06T00:00:00Z</updated>
  </entry>
  <entry>
    <title>Into the Odd Wide Valley</title>
    <link rel="alternate" href="http://www.rabbitfarm.com/cgi-bin/blosxom/2023/02/05#pwc202" type="text/html"/>
    <content type="html">
&lt;p&gt;&lt;em&gt;The examples used here are from the weekly challenge problem statement and demonstrate 
the working solution.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Part 1&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given an array of integers. Write a script to print 1 if there are THREE 
consecutive odds in the given array otherwise print 0.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use boolean;

sub three_consecutive_odds{
    my @numbers = @_;
    my $consecutive_odds = 0;
    {
        my $x = pop @numbers;
        $consecutive_odds++   if 1 == ($x &amp; 1);
        $consecutive_odds = 0 if 0 == ($x &amp; 1);
        return true if 3 == $consecutive_odds;
        redo if @numbers;
    }
    return false;
}

MAIN:{
    say three_consecutive_odds(1, 5, 3, 6);
    say three_consecutive_odds(2, 6, 3, 5);
    say three_consecutive_odds(1, 2, 3, 4);
    say three_consecutive_odds(2, 3, 5, 7);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-1.pl 
1
0
0
1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;h2&gt;Part 2&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Given a profile as a list of altitudes, return the leftmost widest valley. A valley is 
defined as a subarray of the profile consisting of two parts: the first part is 
non-increasing and the second part is non-decreasing. Either part can be empty.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use boolean;
use FSA::Rules;

sub widest_valley_rules{
    my @altitudes = @_;
    my @downslope;
    my @upslope;
    my $fsa = FSA::Rules-&gt;new(
        move =&gt; {
            do =&gt; sub{  my $state = shift;
                        $state-&gt;machine-&gt;{altitude}  = [] if(!$state-&gt;machine-&gt;{altitude});
                        $state-&gt;machine-&gt;{plateau}   = [] if(!$state-&gt;machine-&gt;{plateau});
                        $state-&gt;machine-&gt;{downslope} = [] if(!$state-&gt;machine-&gt;{downslope});
                        $state-&gt;machine-&gt;{upslope}   = [] if(!$state-&gt;machine-&gt;{upslope});
                        my $previous_altitudes = $state-&gt;machine-&gt;{altitude};
                        my $current_altitude = shift @altitudes;
                        push @{$previous_altitudes}, $current_altitude
            },
            rules =&gt; [ done      =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          !defined($previous_altitudes-&gt;[@{$previous_altitudes} - 1]) 
                       },
                       move      =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          @{$previous_altitudes} ==  1; 
                       },
                       plateau   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if(@{$previous_altitudes} == 2){
                                              if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] == $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                                  push @{$state-&gt;machine-&gt;{plateau}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 2], $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                              }
                                          }
                       },
                       plateau   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if(@{$previous_altitudes} &gt; 2){
                                              if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] == $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                                  push @{$state-&gt;machine-&gt;{plateau}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                              }
                                          }
                       },
                       downslope =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if(@{$previous_altitudes} == 2){
                                              if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &lt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                                  push @{$state-&gt;machine-&gt;{downslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 2], $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                              }
                                          }
                       },
                       downslope =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if(@{$previous_altitudes} &gt; 2){
                                              if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &lt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                                  push @{$state-&gt;machine-&gt;{downslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                              }else{false}
                                          } 
                       },
                       upslope =&gt; sub{  my $state = shift; 
                                        my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                        if(@{$previous_altitudes} == 2){
                                           if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &gt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                               push @{$state-&gt;machine-&gt;{upslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 2], $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                           }
                                        } 
                       },
                       upslope =&gt; sub{  my $state = shift; 
                                        my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                        if(@{$previous_altitudes} &gt; 2){
                                           if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &gt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                               push @{$state-&gt;machine-&gt;{upslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                           }
                                        } 
                       },
            ],
        },
        plateau =&gt; {             
            do =&gt; sub{  my $state = shift;
                        my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                        my $current_altitude = shift @altitudes; 
                        push @{$previous_altitudes}, $current_altitude;
            },
            rules =&gt; [ done      =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          !defined($previous_altitudes-&gt;[@{$previous_altitudes} - 1]) 
                       },  
                       plateau   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] == $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                               push @{$state-&gt;machine-&gt;{plateau}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                          }
                       },       
                       downslope =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &lt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                              push @{$state-&gt;machine-&gt;{downslope}}, @{$state-&gt;machine-&gt;{plateau}};
                                              push @{$state-&gt;machine-&gt;{downslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                              $state-&gt;machine-&gt;{plateau} = [];
                                          }
                       },
                       upslope   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &gt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                              push @{$state-&gt;machine-&gt;{upslope}}, @{$state-&gt;machine-&gt;{plateau}};
                                              push @{$state-&gt;machine-&gt;{upslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                              $state-&gt;machine-&gt;{plateau} = [];
                                          }
                       }        
            ], 
        },
        downslope =&gt; {
            do =&gt; sub{  my $state = shift;
                        my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                        my $current_altitude = shift @altitudes;
                        push @{$previous_altitudes}, $current_altitude;
            },
            rules =&gt; [ done      =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          !defined($previous_altitudes-&gt;[@{$previous_altitudes} - 1]) 
                       },   
                       plateau   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] == $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                               push @{$state-&gt;machine-&gt;{plateau}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 2], $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                               #pop @{$state-&gt;machine-&gt;{downslope}};true;
                                          }
                       },      
                       downslope =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &lt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                              push @{$state-&gt;machine-&gt;{downslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                          } 
                                    },
                       upslope   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &gt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                               $state-&gt;machine-&gt;{upslope} = [];
                                               push @{$state-&gt;machine-&gt;{upslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                          } 
                                    },      
            ], 
        },
        upslope =&gt; {             
            do =&gt; sub{  my $state = shift;
                        my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                        my $current_altitude = shift @altitudes;
                        push @{$previous_altitudes}, $current_altitude; 
            },
            rules =&gt; [ done      =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          !defined($previous_altitudes-&gt;[@{$previous_altitudes} - 1]) 
                       },   
                       done      =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          $previous_altitudes-&gt;[@{$previous_altitudes} - 1] &lt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2];
                       }, 
                       plateau   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] == $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                               push @{$state-&gt;machine-&gt;{plateau}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 2], $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                          }
                       },   
                       upslope   =&gt; sub{  my $state = shift; 
                                          my $previous_altitudes = $state-&gt;machine-&gt;{altitude}; 
                                          if($previous_altitudes-&gt;[@{$previous_altitudes} - 1] &gt; $previous_altitudes-&gt;[@{$previous_altitudes} - 2]){
                                               push @{$state-&gt;machine-&gt;{upslope}}, $previous_altitudes-&gt;[@{$previous_altitudes} - 1];
                                          }
                       }        
            ], 
        },
        done =&gt; { 
            do =&gt; sub { my $state = shift; 
                        say q/Valley: / . join(q/, /,  @{$state-&gt;machine-&gt;{downslope}}, @{$state-&gt;machine-&gt;{upslope}});
                  } 
        },
    );
    return $fsa;
}

sub widest_valley{
    my $rules = widest_valley_rules(@_);
    $rules-&gt;start;
    $rules-&gt;switch until $rules-&gt;at(q/done/);
    my $graph_viz = $rules-&gt;graph();
}

MAIN:{
    widest_valley 1, 5, 5, 2, 8;
    widest_valley 2, 6, 8, 5;
    widest_valley 2, 1, 2, 1, 3;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-2.pl 
Valley: 5, 5, 2, 8
Valley: 2, 6, 8
Valley: 2, 1, 2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-202/"&gt;Challenge 202&lt;/a&gt;&lt;/p&gt;</content>
    <id>http://www.rabbitfarm.com/cgi-bin/blosxom/perl/pwc202</id>
    <published>2023-02-05T18:39:00-05:00</published>
    <updated>2023-02-05T18:39:00-05:00</updated>
    <category term="/perl"/>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-5233957809970389517</id>
    <published>2023-02-04T23:47:00.000+01:00</published>
    <updated>2023-02-04T23:47:02.423+01:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(cdxxx) 14 great CPAN modules released last week</title>
    <content type="html">Updates for &lt;i&gt;great CPAN modules&lt;/i&gt; released last week. A module is considered &lt;i&gt;great&lt;/i&gt; if its favorites count is greater or equal than 12.&lt;br/&gt;&lt;br/&gt;&lt;ol&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/KUERBIS/App-DBBrowser-2.314' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;App::DBBrowser&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Browse SQLite/MySQL/PostgreSQL databases and their tables interactively. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.314&lt;/strong&gt; on 2023-02-03&lt;/li&gt;  &lt;li&gt;Votes: 12&lt;/li&gt;  &lt;li&gt;Previous version: 2.313 was 21 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TODDR/autodie-2.36' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;autodie&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Replace functions with ones that succeed or die with lexical scope &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.36&lt;/strong&gt; on 2023-01-30&lt;/li&gt;  &lt;li&gt;Votes: 58&lt;/li&gt;  &lt;li&gt;Previous version: 2.35 was 3 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/SCHUBIGER/DateTime-Format-Natural-1.16' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;DateTime::Format::Natural&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Parse informal natural language date/time strings &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.16&lt;/strong&gt; on 2023-02-04&lt;/li&gt;  &lt;li&gt;Votes: 18&lt;/li&gt;  &lt;li&gt;Previous version: 1.15 was 23 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/DCANTRELL/Devel-CheckOS-1.96' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Devel::CheckOS&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - a script to package Devel::AssertOS modules with your code. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.96&lt;/strong&gt; on 2023-02-04&lt;/li&gt;  &lt;li&gt;Votes: 16&lt;/li&gt;  &lt;li&gt;Previous version: 1.95 was 3 months, 6 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/LEONT/experimental-0.031' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;experimental&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Experimental features made easy &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.031&lt;/strong&gt; on 2023-01-31&lt;/li&gt;  &lt;li&gt;Votes: 31&lt;/li&gt;  &lt;li&gt;Previous version: 0.030 was 1 month, 21 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/OALDERS/HTML-Parser-3.81' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;HTML::Parser&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - HTML parser class &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;3.81&lt;/strong&gt; on 2023-01-31&lt;/li&gt;  &lt;li&gt;Votes: 44&lt;/li&gt;  &lt;li&gt;Previous version: 3.80 was 2 months, 30 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/ARISTOTLE/Memoize-1.16' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Memoize&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Make functions faster by trading space for time &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.16&lt;/strong&gt; on 2023-01-29&lt;/li&gt;  &lt;li&gt;Votes: 25&lt;/li&gt;  &lt;li&gt;Previous version: 1.03 was 10 years, 9 months, 7 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/YVES/Sereal-5.002' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Sereal&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Fast, compact, powerful binary (de-)serialization &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;5.002&lt;/strong&gt; on 2023-02-01&lt;/li&gt;  &lt;li&gt;Votes: 60&lt;/li&gt;  &lt;li&gt;Previous version: 5.001 was 4 months, 28 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/YVES/Sereal-Decoder-5.002' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Sereal::Decoder&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Fast, compact, powerful binary deserialization &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;5.002&lt;/strong&gt; on 2023-02-01&lt;/li&gt;  &lt;li&gt;Votes: 22&lt;/li&gt;  &lt;li&gt;Previous version: 5.001 was 4 months, 28 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/YVES/Sereal-Encoder-5.002' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Sereal::Encoder&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Fast, compact, powerful binary serialization &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;5.002&lt;/strong&gt; on 2023-02-01&lt;/li&gt;  &lt;li&gt;Votes: 21&lt;/li&gt;  &lt;li&gt;Previous version: 5.001 was 4 months, 28 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/KIMOTO/SPVM-0.9689' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;SPVM&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - SPVM Language &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.9689&lt;/strong&gt; on 2023-02-01&lt;/li&gt;  &lt;li&gt;Votes: 26&lt;/li&gt;  &lt;li&gt;Previous version: 0.9686 was 5 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/BAKERSCOT/String-Util-1.34' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;String::Util&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - String processing utility functions &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.34&lt;/strong&gt; on 2023-02-01&lt;/li&gt;  &lt;li&gt;Votes: 13&lt;/li&gt;  &lt;li&gt;Previous version: 1.32 was 1 year, 10 months, 6 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/BOOK/System-Command-1.122' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;System::Command&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Object for running system commands &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.122&lt;/strong&gt; on 2023-02-04&lt;/li&gt;  &lt;li&gt;Votes: 17&lt;/li&gt;  &lt;li&gt;Previous version: 1.121 was 2 years, 8 months, 1 day before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/EXODIST/Test-Simple-1.302192' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Test::Simple&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Basic utilities for writing tests. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.302192&lt;/strong&gt; on 2023-02-02&lt;/li&gt;  &lt;li&gt;Votes: 180&lt;/li&gt;  &lt;li&gt;Previous version: 1.302191 was 6 months, 24 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/5233957809970389517/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2023/02/cdxxx-14-great-cpan-modules-released.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5233957809970389517"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5233957809970389517"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2023/02/cdxxx-14-great-cpan-modules-released.html" title="(cdxxx) 14 great CPAN modules released last week"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-5493291050526390344</id>
    <published>2023-02-04T23:42:00.001+01:00</published>
    <updated>2023-02-04T23:42:05.355+01:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(dxliii) metacpan weekly report - Dist::Zilla::Plugin::GitHub</title>
    <content type="html">&lt;p&gt;This is the weekly favourites list of CPAN distributions. Votes count: 64&lt;/p&gt;&lt;p&gt;Week's winner: &lt;b&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::GitHub" target="_blank"&gt;Dist::Zilla::Plugin::GitHub (+2)&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Build date: 2023/02/04 22:41:43 GMT&lt;/p&gt;&lt;br/&gt;&lt;p&gt;Clicked for &lt;u&gt;first time&lt;/u&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Crypt::PK::ECC::Schnorr" target="_blank"&gt;Crypt::PK::ECC::Schnorr&lt;/a&gt; - Public key cryptography based on EC with Schnorr signatures&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Data::Validate::OpenAPI" target="_blank"&gt;Data::Validate::OpenAPI&lt;/a&gt; - Validate and untaint input parameters via OpenAPI schema&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Device::Chip::CC1101" target="_blank"&gt;Device::Chip::CC1101&lt;/a&gt; - chip driver for a CC1101&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Device::Modbus::TCP" target="_blank"&gt;Device::Modbus::TCP&lt;/a&gt; - Distribution for Modbus TCP communications&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Role::ModuleMetadata" target="_blank"&gt;Dist::Zilla::Role::ModuleMetadata&lt;/a&gt; - A role for plugins that use Module::Metadata&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Domain::Details" target="_blank"&gt;Domain::Details&lt;/a&gt; - Domain class with DNS/SSL/WHOIS fields&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Future::Queue" target="_blank"&gt;Future::Queue&lt;/a&gt; - a FIFO queue of values that uses Futures&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Graph::Maker::Other" target="_blank"&gt;Graph::Maker::Other&lt;/a&gt; - Create Graph.pm graph theory graphs of various kinds.&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/OpenAPI::Render" target="_blank"&gt;OpenAPI::Render&lt;/a&gt; - Render OpenAPI specifications as documents&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Syntax::Operator::Divides" target="_blank"&gt;Syntax::Operator::Divides&lt;/a&gt; - an infix operator for division test&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Syntax::Operator::ExistsOr" target="_blank"&gt;Syntax::Operator::ExistsOr&lt;/a&gt; - an infix operator sensitive to hash element existence&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Test2::Tools::Rustfmt" target="_blank"&gt;Test2::Tools::Rustfmt&lt;/a&gt; - Test that bundled Rust code is formatted according to Rust style guidelines&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Text::Treesitter" target="_blank"&gt;Text::Treesitter&lt;/a&gt; - Perl binding for tree-sitter&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Version::Dotted" target="_blank"&gt;Version::Dotted&lt;/a&gt; - Bump a dotted version, check if version is trial&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;p&gt;&lt;u&gt;Increasing&lt;/u&gt; its reputation:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Babble" target="_blank"&gt;Babble&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/BackPAN::Index" target="_blank"&gt;BackPAN::Index&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Commandable" target="_blank"&gt;Commandable&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Convert::Color" target="_blank"&gt;Convert::Color&lt;/a&gt; (+1=8)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/CPAN::Changes" target="_blank"&gt;CPAN::Changes&lt;/a&gt; (+1=31)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Curses::UI" target="_blank"&gt;Curses::UI&lt;/a&gt; (+1=19)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DateTime" target="_blank"&gt;DateTime&lt;/a&gt; (+1=209)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/DBI::Log" target="_blank"&gt;DBI::Log&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Device::Chip" target="_blank"&gt;Device::Chip&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::ChangelogFromGit" target="_blank"&gt;Dist::Zilla::Plugin::ChangelogFromGit&lt;/a&gt; (+1=7)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::Git" target="_blank"&gt;Dist::Zilla::Plugin::Git&lt;/a&gt; (+1=44)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::GitHub" target="_blank"&gt;Dist::Zilla::Plugin::GitHub&lt;/a&gt; (+2=16)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::GithubMeta" target="_blank"&gt;Dist::Zilla::Plugin::GithubMeta&lt;/a&gt; (+1=9)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::InstallGuide" target="_blank"&gt;Dist::Zilla::Plugin::InstallGuide&lt;/a&gt; (+1=4)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::NextVersion::Semantic" target="_blank"&gt;Dist::Zilla::Plugin::NextVersion::Semantic&lt;/a&gt; (+1=4)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::OnlyCorePrereqs" target="_blank"&gt;Dist::Zilla::Plugin::OnlyCorePrereqs&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::Plugin::Twitter" target="_blank"&gt;Dist::Zilla::Plugin::Twitter&lt;/a&gt; (+1=4)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::PluginBundle::Author::ETHER" target="_blank"&gt;Dist::Zilla::PluginBundle::Author::ETHER&lt;/a&gt; (+1=4)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Dist::Zilla::PluginBundle::LEONT" target="_blank"&gt;Dist::Zilla::PluginBundle::LEONT&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/FFI::Platypus::Lang::Rust" target="_blank"&gt;FFI::Platypus::Lang::Rust&lt;/a&gt; (+1=10)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Firefox::Marionette" target="_blank"&gt;Firefox::Marionette&lt;/a&gt; (+1=14)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Future::AsyncAwait" target="_blank"&gt;Future::AsyncAwait&lt;/a&gt; (+1=45)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Hash::Ordered" target="_blank"&gt;Hash::Ordered&lt;/a&gt; (+1=32)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Math::Matrix::MaybeGSL" target="_blank"&gt;Math::Matrix::MaybeGSL&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Module::Metadata" target="_blank"&gt;Module::Metadata&lt;/a&gt; (+1=14)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/MooseX::Has::Sugar" target="_blank"&gt;MooseX::Has::Sugar&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/MooseX::Types::URI" target="_blank"&gt;MooseX::Types::URI&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Myriad" target="_blank"&gt;Myriad&lt;/a&gt; (+1=7)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/PAR::Packer" target="_blank"&gt;PAR::Packer&lt;/a&gt; (+1=41)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Path::Tiny" target="_blank"&gt;Path::Tiny&lt;/a&gt; (+1=174)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Plack::Middleware::CrossOrigin" target="_blank"&gt;Plack::Middleware::CrossOrigin&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Struct::Dumb" target="_blank"&gt;Struct::Dumb&lt;/a&gt; (+1=14)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/SUPER" target="_blank"&gt;SUPER&lt;/a&gt; (+1=6)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Syntax::Construct" target="_blank"&gt;Syntax::Construct&lt;/a&gt; (+1=10)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Syntax::Keyword::Dynamically" target="_blank"&gt;Syntax::Keyword::Dynamically&lt;/a&gt; (+1=7)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Term::ANSIColor" target="_blank"&gt;Term::ANSIColor&lt;/a&gt; (+1=60)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Test2::Plugin::NoWarnings" target="_blank"&gt;Test2::Plugin::NoWarnings&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Test::Directory" target="_blank"&gt;Test::Directory&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Test::PerlTidy" target="_blank"&gt;Test::PerlTidy&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Text::Abbrev" target="_blank"&gt;Text::Abbrev&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Text::CSV" target="_blank"&gt;Text::CSV&lt;/a&gt; (+1=73)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Text::Template" target="_blank"&gt;Text::Template&lt;/a&gt; (+1=23)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Text::Xslate" target="_blank"&gt;Text::Xslate&lt;/a&gt; (+1=69)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Tickit::Widgets" target="_blank"&gt;Tickit::Widgets&lt;/a&gt; (+1=6)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Tk" target="_blank"&gt;Tk&lt;/a&gt; (+1=28)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Try::Tiny" target="_blank"&gt;Try::Tiny&lt;/a&gt; (+1=172)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Unix::Sudo" target="_blank"&gt;Unix::Sudo&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/UTF8::R2" target="_blank"&gt;UTF8::R2&lt;/a&gt; (+1=4)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/With::Roles" target="_blank"&gt;With::Roles&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;/ul&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/5493291050526390344/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2023/02/dxliii-metacpan-weekly-report.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5493291050526390344"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5493291050526390344"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2023/02/dxliii-metacpan-weekly-report.html" title="(dxliii) metacpan weekly report - Dist::Zilla::Plugin::GitHub"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-5456887009320040211</id>
    <published>2023-02-04T23:40:00.000+01:00</published>
    <updated>2023-02-04T23:40:54.286+01:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(dlxxi) stackoverflow perl report</title>
    <content type="html">&lt;p&gt;These are the five most rated questions at &lt;a href="http://www.stackoverflow.com"&gt;Stack Overflow&lt;/a&gt; last week.&lt;br/&gt;Between brackets: [&lt;b&gt;question score&lt;/b&gt; / answers count]&lt;br/&gt;Build date: 2023-02-04 22:39:41 GMT&lt;/p&gt;&lt;hr/&gt;&lt;ol&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/75297448" target="_blank"&gt;How to check if an array has an element that is not integer?&lt;/a&gt; - [&lt;b&gt;3&lt;/b&gt;/3]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/75303160" target="_blank"&gt;Remove upfront zeros from floating point lower than 1 in Perl&lt;/a&gt; - [&lt;b&gt;3&lt;/b&gt;/2]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/75313289" target="_blank"&gt;Perl: How to copy directory without any files?&lt;/a&gt; - [&lt;b&gt;3&lt;/b&gt;/1]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/75333922" target="_blank"&gt;Perl 5.18 | Archive::ZIP 1.68 | Recursive files not included in ZIP&lt;/a&gt; - [&lt;b&gt;3&lt;/b&gt;/0]&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/75340935" target="_blank"&gt;Using gawk or sed to inplace change line after or before every other match&lt;/a&gt; - [&lt;b&gt;2&lt;/b&gt;/5]&lt;/li&gt;&lt;/ol&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/5456887009320040211/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2023/02/dlxxi-stackoverflow-perl-report.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5456887009320040211"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/5456887009320040211"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2023/02/dlxxi-stackoverflow-perl-report.html" title="(dlxxi) stackoverflow perl report"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry>
  <title>A note from our president</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/letterfromourpresident"/>
  <id>tag:news.perlfoundation.org,2023-02-04:/post/letterfromourpresident</id>
  <published>2023-02-04T14:43:16</published>
  <updated>2023-02-04T14:43:16</updated>
  <summary>
  <![CDATA[
     The Perl/Raku communities rely heavily on volunteer work. It is sad to know that hate speech has been directed at members of the Perl/Raku community recently. Of course there are differences in our backgrounds, beliefs and experiences and we must build on these, be curious and learn about each other. Aggressive, hostile and violent behaviour is never an appropriate way to relate to others and it is disappointing that such 
   ]]>
  </summary>
  <author>
    <name>Amber Deuel</name>
  </author>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
       <img src="_ra-rel-mnt_/simplecas/fetch_content/66cd095b5eeac285673c26906d11cd712f234d20/perl onion.png" style="max-width:100%;max-height:100%;padding:20px;" /><br>
     
     <p>The Perl/Raku communities rely heavily on volunteer work. It is sad to know that hate speech has been directed at members of the Perl/Raku community recently.</p>

<p>Of course there are differences in our backgrounds, beliefs and experiences and we must build on these, be curious and learn about each other. </p>

<p>Aggressive, hostile and violent behaviour is never an appropriate way to relate to others and it is disappointing that such behaviour is witnessed from people within our circles. </p>

<p>Please use this moment to reflect on how you interact with others, and consider if you could be more welcoming, warm and interested in those around you. </p>

<p>If you are aware of someone receiving such attacks, how can you support them? If you notice someone treating others disrespectfully, how can you help them understand the impact  this may have on the recipient? Lets all work together to value each other equally through respectful communication. </p>

    ]]>
  </content>
</entry>
  <entry>
    <title>Weekly Challenge 202</title>
    <link rel="alternate" href="https://dev.to/simongreennet/weekly-challenge-202-4dcm" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-202/">Challenge</a>, <a href="https://github.com/manwar/perlweeklychallenge-club/tree/master/challenge-202/sgreen">My solutions</a></p>

<h2>
  
  
  Task 1: Consecutive Odds
</h2>

<h3>
  
  
  Task
</h3>

<p>You are given an array of integers.</p>

<p>Write a script to print <code>1</code> if there are THREE consecutive odds in the given array otherwise print <code>0</code>.</p>

<h3>
  
  
  My solution
</h3>

<p>This task is pretty straight forward, so doesn't need much explanation. I have a variable <code>odds</code>. As I iterate through the array, I add one to the <code>odds</code> variable if it is an odd number. If it is even, I reset <code>odds</code> value as zero.</p>

<p>If at any time the <code>odds</code> value is 3, I print <code>1</code> and exit. Otherwise I will print <code>0</code> if we have exited the loop without finding three consecutive odd values.</p>

<h3>
  
  
  Examples
</h3>



<div class="highlight js-code-highlight">
<pre class="highlight shell"><code><span class="nv">$ </span>./ch-1.py 1 5 3 6
1

<span class="nv">$ </span>./ch-1.py 2 6 3 5
0

<span class="nv">$ </span>./ch-1.py 1 2 3 4
0

<span class="nv">$ </span>./ch-1.py 2 3 5 7
1
</code></pre>

</div>



<h2>
  
  
  Task 2: Widest Valley
</h2>

<h3>
  
  
  Task
</h3>

<p>Given a profile as a list of altitudes, return the leftmost widest valley. A valley is defined as a subarray of the profile consisting of two parts: the first part is non-increasing and the second part is non-decreasing. Either part can be empty.</p>

<h3>
  
  
  My solution
</h3>

<p>This is a really interesting challenge, and I had a few attempts at trying to come up with the best solution. Often, the best solution is just try everything to get the correct solution. That's what I did here.</p>

<p>For this task, I have a variable <code>valley</code> that iterates from 0 to one less than the length of the array. This is the deepest point in the valley.</p>

<p>From this I calculate the start point of the valley. I do this by setting <code>start</code> at the current position, and working backwards until we find a decreasing number or hit the start of the array. Likewise, I calculate the <code>end</code> value by doing the same rightwards.</p>

<p>Once I have the <code>start</code> and <code>end</code> point, if the difference between these values is greater than or equal to the length of the current <code>solution</code>, I replace the <code>solution</code> variable.</p>

<p>Why equals? The difference between start and end is one less than the numbers of elements it contains. For example if start is 7 and end is 9, it contains three items (7, 8 and 9), even though the difference is two.</p>

<p>I'll be first to admit that this could actually be optimised a lot. For example if the previous or next value is lower than the current point, we know that we aren't at the bottom of the cliff. However, when dealing with such a short list, the benefits are negligible, and adds unnecessary complications. YMMV.</p>

<h3>
  
  
  Examples
</h3>



<div class="highlight js-code-highlight">
<pre class="highlight shell"><code><span class="nv">$ </span>./ch-1.py 1 5 3 6
1

<span class="nv">$ </span>./ch-1.py 2 6 3 5
0

<span class="nv">$ </span>./ch-1.py 1 2 3 4
0

<span class="nv">$ </span>./ch-1.py 2 3 5 7
1

<span class="nv">$ </span>./ch-2.py 1 5 5 2 8
1, 5, 5

<span class="nv">$ </span>./ch-2.py 2 6 8 5
2, 6, 8

<span class="nv">$ </span>./ch-2.py 9 8 13 13 2 2 15 17
13, 13, 2, 2, 15, 17

<span class="nv">$ </span>./ch-2.py 2 1 2 1 3
2, 1, 2

<span class="nv">$ </span>./ch-2.py 1 3 3 2 1 2 3 3 2
3, 3, 2, 1, 2, 3, 3
</code></pre>

</div>



</div>
    </content>
    <author>
      <name>Simon Green</name>
    </author>
    <id>https://dev.to/simongreennet/weekly-challenge-202-4dcm</id>
    <published>2023-02-04T05:56:56Z</published>
    <updated>2023-02-04T05:56:56Z</updated>
    <category term="perl"/>
    <category term="python"/>
    <category term="theweeklychallenge"/>
  </entry>
  <entry>
    <title>The Weekly Challenge - Guest Contributions</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/guest-contribution/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">As you know, The Weekly Challenge, primarily focus on Perl and Raku. During the Week #018, we received solutions to The Weekly Challenge - 018 by Orestis Zekai in Python. It was pleasant surprise to receive solutions in something other than Perl and Raku. Ever since regular team members also started contributing in other languages like Ada, APL, Awk, BASIC, Bash, Bc, Befunge-93, Bourne Shell, BQN, Brainfuck, C3, C, CESIL, Chef, COBOL, Coconut, C Shell, C++, Clojure, Crystal, D, Dart, Dc, Elixir, Elm, Emacs Lisp, Erlang, Excel VBA, Fennel, Fish, Forth, Fortran, Gembase, GNAT, Go, Haskell, Haxe, HTML, Idris, IO, J, Janet, Java, JavaScript, Julia, Kotlin, Lisp, Logo, Lua, M4, Maxima, Miranda, Modula 3, MMIX, Mumps, Myrddin, Nelua, Nim, Nix, Node.</div>
    </content>
    <id>https://theweeklychallenge.org/blog/guest-contribution/</id>
    <published>2023-02-04T00:00:00Z</published>
    <updated>2023-02-04T00:00:00Z</updated>
  </entry>
  <entry>
    <title>First release of SPVM::File::Spec - complex regular expressions, file tests, SPVM::Cwd, inheritance</title>
    <link rel="alternate" href="https://dev.to/yukikimoto/first-release-of-spvmfilespec-complex-regular-expressions-file-tests-spvmcwd-inheritance-35f8" type="text/html"/>
    <content type="html">&lt;p&gt;First release of &lt;a href="https://metacpan.org/pod/SPVM::File::Spec"&gt;SPVM::File::Spec&lt;/a&gt;, a port of Perl's &lt;a href="https://metacpan.org/pod/File::Spec"&gt;File::Spec&lt;/a&gt; to SPVM. The repository is &lt;a href="https://github.com/yuki-kimoto/SPVM-File-Spec/commits/master"&gt;SPVM::File::Spec&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  
  
  What is File::Spec?
&lt;/h2&gt;

&lt;p&gt;File::Spec is a Perl module to handle file paths in an OS-independent manner, allowing Linux, Mac, and Windows to have similar descriptions of file paths.&lt;/p&gt;

&lt;h2&gt;
  
  
  File::Spec implementation difficulties.
&lt;/h2&gt;

&lt;h3&gt;
  
  
  Numerous regular expressions
&lt;/h3&gt;

&lt;p&gt;One of the difficulties of implementing File::Spec is that it uses many regular expressions to handle file paths.&lt;/p&gt;

&lt;p&gt;Therefore, in porting File::Spec to SPVM, it was necessary to be able to use regular expressions.&lt;/p&gt;

&lt;p&gt;I ported &lt;a href="https://github.com/google/re2"&gt;Google RE2&lt;/a&gt;, a regular expression library, to SPVM as &lt;a href="https://metacpan.org/pod/SPVM::Resource::Re2::V2022_06_01"&gt;Resource::Re2&lt;/a&gt;, and created &lt;a href="https://metacpan.org/pod/SPVM::Regex"&gt;SPVM::Regex&lt;/a&gt;, a wrapper for it.&lt;/p&gt;

&lt;p&gt;This allows regular expressions to be used.&lt;/p&gt;

&lt;p&gt;See some of the complex regular expressions in SPVM::File::Spec. The handling of file paths, especially on Windows, is complex. This is part of the implementation of a method called canonnpath in SPVM::File::Spec::Win32 to make a path a unique expression.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private method _canon_cat : string ($parts : string[]) {
    my $first = $parts-&amp;gt;[0];

    my $volume = (string)undef;

    # drive letter - (C:)
    my $re_drive = Regex-&amp;gt;new("\A([A-Za-z]:)([\\\\/]?)") ;
    $first = $re_drive-&amp;gt;replace($first, "");
    if ($re_drive-&amp;gt;replaced_count &amp;gt; 0) {
      $volume = Fn-&amp;gt;ucfirst($re_drive-&amp;gt;cap1);
      if (length $re_drive-&amp;gt;cap2) {
        $volume . = "\\";
      }
    }
    else {
      my $re_unc = Regex-&amp;gt;new("\A(? :\\\\\\\\|//)([^\\\\/]+)(? :[\\\\/]([^\\\\/]+))? [\\\\/]?" , "s");
      $first = $re_unc-&amp;gt;replace($first, "");

      # UNC volume (\192.168.201.101)
      if ($re_unc-&amp;gt;replaced_count &amp;gt; 0) {
        $volume = "\\\\" . $re_unc-&amp;gt;cap1;
        if ($re_unc-&amp;gt;cap2) {
          $volume . = "\\" . $re_unc-&amp;gt;cap2;
        }
        $volume . = "\\" ;
      }
      else {
        my $re_root = Regex-&amp;gt;new("\A[\\\\/]");
        $first = $re_root-&amp;gt;replace($first, "");

        # root dir (\foo)
        if ($re_root-&amp;gt;replaced_count &amp;gt; 0) {
          $volume = "\foo";
        }
        else {
          $volume = "";
        }
      }
    }

    $parts-&amp;gt;[0] = $first;

    my $path = Fn-&amp;gt;join("\", $parts);

    # /+ to \
    $path = Regex-&amp;gt;new("/+")-&amp;gt;replace_g($path, "\");

    # /+ to \
    $path = Regex-&amp;gt;new("\\\\+")-&amp;gt;replace_g($path, "\\");

    # xx\. \. \yy --&amp;gt; xx\yy.
    $path = Regex-&amp;gt;new("(? :(? :\A|\\\\)\. (? :\\\\\.) *(? :\\\\|\z))+")-&amp;gt;replace_g($path, "\");

    # xx\yy. \zz --&amp;gt; xx\z.
    my $parts_list = StringList-&amp;gt;new;
    $parts = Fn-&amp;gt;split("\\", $path);
    for (my $i = 0; $i &amp;lt; @$parts; $i++) {
      my $part = $parts-&amp;gt;[$i];
      if ($part eq "...") {
        if ($parts_list-&amp;gt;length &amp;gt; 0) {
          my $before_part = $parts_list-&amp;gt;get($parts_list-&amp;gt;length - 1);
          unless ($before_part eq "...") {
            $parts_list-&amp;gt;pop;
            next;
          }
        }
      }
      $parts_list-&amp;gt;push($part);
    }
    $parts = $parts_list-&amp;gt;to_array;
    $path = Fn-&amp;gt;join("\\", $parts);

    # \xx --&amp;gt; xx
    $path = Regex-&amp;gt;new("\A\\\\")-&amp;gt;replace_g($path, "");

    # xx --&amp;gt; xx
    $path = Regex-&amp;gt;new("\\\\\z")-&amp;gt;replace_g($path, "");

    if (Regex-&amp;gt;new("\\\\\z")-&amp;gt;match($volume)) {
      # &amp;lt;vol&amp;gt;\. --&amp;gt; &amp;lt;vol&amp;gt;\.
      $path = Regex-&amp;gt;new("\A\. \. (? :\\\\\. \.)\.) *(? :\\\\|\z)")-&amp;gt;replace($path, "");

      # \HOSTHCOSTHCARE --&amp;gt; \HOSTHCARE
      my $re = Regex-&amp;gt;new("\A(\\\\\\\\. *)\\\\\z", "s");
      if (!length $path &amp;amp;&amp;amp; $re-&amp;gt;match($volume)) {
        $path = $re-&amp;gt;cap1;
        return $path;
      }
    }

    if (length $path || length $volume) {
      $path = $volume . $path;
    }
    else {
      $path = "." ;
    }

    return $path;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  File Test Operators
&lt;/h3&gt;

&lt;p&gt;File::Spec checks whether a temporary directory is writable in order to locate it. For this reason, file tests must be implemented.&lt;/p&gt;

&lt;p&gt;I have implemented the &lt;a href="https://metacpan.org/pod/SPVM::Sys::FileTest"&gt;SPVM::Sys::FileTest&lt;/a&gt; module for file testing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  method _tmpdir : string ($dirlist : string[]) {
    my $interface = (File::Spec::Interface)$self;

    my $tmpdir = (string)undef;
    for my $dir (@$dirlist) {
      if ($dir &amp;amp;&amp;amp; Sys::FileTest-&amp;gt;d($dir) &amp;amp;&amp;amp; Sys::FileTest-&amp;gt;w($dir)){
        $tmpdir = $dir;
        last;
      }
    }

    unless ($tmpdir) {
      $tmpdir = $interface-&amp;gt;curdir;
    }

    $tmpdir = $interface-&amp;gt;canonpath($tmpdir);

    if (! $interface-&amp;gt;file_name_is_absolute($tmpdir)) {
      $tmpdir = $interface-&amp;gt;rel2abs($tmpdir);
      if (! $interface-&amp;gt;file_name_is_absolute($tmpdir)) {
        die "A temporary directory must be converted to an absolute path";
      }
    }

    return $tmpdir;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Current directory
&lt;/h2&gt;

&lt;p&gt;File::Spec needs to be able to handle the current directory for absolute and relative path conversion.&lt;/p&gt;

&lt;p&gt;For this purpose I have implemented &lt;a href="https://metacpan.org/pod/SPVM::Cwd"&gt;SPVM::Cwd&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following is an implementation of the rel2abs method that converts a relative path to an absolute path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  method rel2abs : string ($path : string, $base = undef : string) {
    my $interface = (File::Spec::Interface)$self;

    # Clean up $path
    if (! $interface-&amp;gt;file_name_is_absolute($path)) {
      # Figure out the effective $base and clean it up.
      If (! $base || $base eq "") {
        $base = Cwd-&amp;gt;getcwd;
      }
      elsif (! $interface-&amp;gt;file_name_is_absolute($base)) {
        $base = $interface-&amp;gt;rel2abs($base) ;
      }
      else {
        $base = $interface-&amp;gt;canonpath($base);
      }
      # Glom them together
      $path = $interface-&amp;gt;catdir([$base, $path]);
    }

    my $rel2abs = $interface-&amp;gt;canonpath($path);

    return $rel2abs;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Inheritance
&lt;/h2&gt;

&lt;p&gt;Since File::Spec is implemented using inheritance, SPVM also supports inheritance. There are subtle differences between statically and dynamically typed languages in terms of expressive feasibility, and SPVM is designed to be as close as possible to Perl's inheritance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class File::Spec::Unix extends File::Spec {

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Immediate Goals
&lt;/h2&gt;

&lt;p&gt;In February 2023, our goal is to port the modules that handle file paths to SPVM.&lt;/p&gt;

&lt;p&gt;Porting of File::Copy, FindBin, File::Path, File::Find, File::Temp, etc. to SPVM will be initiated.&lt;/p&gt;

&lt;p&gt;Translated with &lt;a href="http://www.DeepL.com/Translator"&gt;www.DeepL.com/Translator&lt;/a&gt; (free version)&lt;/p&gt;

</content>
    <author>
      <name>Yuki Kimoto - SPVM - Perl Club</name>
    </author>
    <id>https://dev.to/yukikimoto/first-release-of-spvmfilespec-complex-regular-expressions-file-tests-spvmcwd-inheritance-35f8</id>
    <published>2023-02-03T22:40:08Z</published>
    <updated>2023-02-03T22:40:08Z</updated>
    <category term="perl"/>
    <category term="spvm"/>
  </entry>
  <entry>
    <title>This Week in PSC (096)</title>
    <link rel="alternate" href="https://blogs.perl.org/users/psc/2023/02/this-week-in-psc-096.html"/>
    <id>tag:blogs.perl.org,2023:/users/psc//4112.11020</id>
    <published>2023-02-03T22:10:57Z</published>
    <updated>2023-02-03T22:12:37Z</updated>
    <author>
        <name>Perl Steering Council</name>
        
    </author>
    <content type="html" xml:lang="en" xml:base="https://blogs.perl.org/users/psc/">
        <![CDATA[<p>Just Paul and Philippe this week.</p>

<ul>
<li>Smartmatch deprecation continues - just one more distribution left now (Test-Simple).
<li>RFC process needs a new name and ID allocation scheme. We will continue discussing ideas and post when we have something presentable.
<li><tt>overload::v2</tt> feels like the best solution to the problem of how to add <tt>substr</tt> overloading.
<li>join overloading might want a <tt>join_uses_concat</tt> flag to avoid surprising existing modules.
</ul>]]>
        
    </content>
</entry>
  <entry>
    <title>United-domains supports the German Perl/Raku-Workshop</title>
    <link rel="alternate" href="https://blogs.perl.org/users/max_maischein/2023/02/united-domains-supports-the-german-perlraku-workshop.html"/>
    <id>tag:blogs.perl.org,2023:/users/max_maischein//227.11019</id>
    <published>2023-02-03T19:40:32Z</published>
    <updated>2023-02-03T19:42:03Z</updated>
    <author>
        <name>Max Maischein</name>
        <uri>https://corion.net</uri>
    </author>
    <category term="conferences" scheme="http://www.sixapart.com/ns/types#category"/>
    <content type="html" xml:lang="en" xml:base="https://blogs.perl.org/users/max_maischein/">
        <![CDATA[<p>We are happy to announce that <a href="https://united-domains.de">united-domains</a><br />
supports the German Perl/Raku-Workshop!</p>

<p><a href="https://united-domains.de">united-domains</a> ist ein erfahrenes Team von mehr als 80 Domain-Spezialisten, die sich zuverlässig und mit Leidenschaft um die Domains unserer Kunden kümmern. Wir inspirieren Brands und Professionals, ihre digitale Identität zu entwicklen.</p>]]>
        <![CDATA[<p> Mit einem umfassenden Domain-Angebot, intuitiven Lösungen und unserer Domain-Expertise helfen wir unseren Kunden, erfolgreich zu sein. Als einer der führenden Domain-Registrare in Europa, haben wir bereits über 1,6 Millionen registrierte Domains und mehr als 300.000 zufriedene Kunden. Unser Portfolio umfasst mehr als 1.000 Domain-Endungen, von .ac bis .zuerich und neuen Endungen wie .app, .io und .dev. Der globale Domain-Check, schnelle und sichere Registrierung und übersichtliche Verwaltung von Domains sind unsere Stärken.<br />
</p>]]>
    </content>
</entry>
  <entry>
    <title>Annotated Test2::Tools Index</title>
    <link rel="alternate" href="https://blogs.perl.org/users/tom_wyant/2023/02/annotated-test2tools-index.html"/>
    <id>tag:blogs.perl.org,2023:/users/tom_wyant//506.11018</id>
    <published>2023-02-03T07:07:20Z</published>
    <updated>2023-02-03T07:09:21Z</updated>
    <author>
        <name>Tom Wyant</name>
        
    </author>
    <content type="html" xml:lang="en" xml:base="https://blogs.perl.org/users/tom_wyant/">
        <![CDATA[<p>I have very gradually been adopting <a href="https://metacpan.org/pod/Test2::V0">Test2::V0</a> as a testing tool. I had a test file that performed a group of tests inside a <code>for</code> loop, and discovered there were circumstances where I wanted to skip an iteration. Well, the <code>skip()</code> provided by <a href="https://metacpan.org/pod/Test2::Tools::Basic">Test2::Tools::Basic</a> operates by executing <code>last SKIP;</code>. In the case of a labeled <code>for</code> this skips not only the current iteration but all subsequent iterations.</p>

<p>I wondered if there was a <code>Test2::Tools</code> plugin that did a <code>next SKIP;</code>, so I generated an <a href="https://trwyant.github.io/misc/all-perl-test2-tools.html">annotated index of Test2 tools</a>. This index reports all of them in ASCIIbetical order, with the distribution they are found in and the abstract from the <code>=head1 NAME</code> section of the POD.</p>

<p>I found 44 tools after eliminating a few helper classes that lived in the same name space. None of the 44 appears to do what I want. It would be easy enough to create such a tool, but I doubted that anyone would use it but me. So I indented another level and stuck a <code>SKIP:</code> block inside the <code>for</code> loop.</p>

<p>Like the previous <a href="https://trwyant.github.io/misc/all-perl-critic-policies.html">Annotated Perl::Critic Policy Index</a> this will be updated approximately weekly. That is, a cron job runs Friday morning, and I push the repository when I get around to it, after reviewing the change and coming up with (I hope) a descriptive commit message.</p>
]]>
        
    </content>
</entry>
  <entry>
    <title>List of new CPAN distributions – Jan 2023</title>
    <link rel="alternate" href="https://perlancar.wordpress.com/2023/02/01/list-of-new-cpan-distributions-jan-2023/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><table>
<tr>
<th>dist</th>
<th>author</th>
<th>first_version</th>
<th>latest_version</th>
<th>abstract</th>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Alien-Font-Vera">Alien-Font-Vera</a></td>
<td><a href="https://metacpan.org/author/BRAMOS">BRAMOS</a></td>
<td>0.001</td>
<td>0.013</td>
<td>Perl access to Vera ttf font</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-BraveUtils">App-BraveUtils</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Utilities related to Brave browser</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-CheckDigitsUtils">App-CheckDigitsUtils</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Utilities related to check digits (CLI for Algorithm::CheckDigits)</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Domain">App-Domain</a></td>
<td><a href="https://metacpan.org/author/RWP">RWP</a></td>
<td>1.230280</td>
<td>1.230280</td>
<td>Domain class with DNS/SSL/WHOIS fields</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Greple-xlate">App-Greple-xlate</a></td>
<td><a href="https://metacpan.org/author/UTASHIRO">UTASHIRO</a></td>
<td>0.01</td>
<td>0.02</td>
<td>translation support module for greple</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Perl-Module-CopyrightYears">App-Perl-Module-CopyrightYears</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Tool for update copyright years in Perl distribution.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-RPM-Spec-License">App-RPM-Spec-License</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Tool for working with RPM spec file licenses.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-SpreadsheetUtils">App-SpreadsheetUtils</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.003</td>
<td>CLI utilities related to spreadsheet (XLS, XLSX, ODS, …)</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/App-Transpierce">App-Transpierce</a></td>
<td><a href="https://metacpan.org/author/BRTASTIC">BRTASTIC</a></td>
<td>0.001</td>
<td>0.002</td>
<td>backup and modify important files</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/CLI-MetaUtil-Getopt-Long-Complete">CLI-MetaUtil-Getopt-Long-Complete</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Routine related to Getopt::Long::Complete</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/CPAN-Test-Dummy-Perl5-ModuleBuild">CPAN-Test-Dummy-Perl5-ModuleBuild</a></td>
<td><a href="https://metacpan.org/author/SKAJI">SKAJI</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Test distribution that depends on Module::Build</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Catalyst-ActionRole-RenderView">Catalyst-ActionRole-RenderView</a></td>
<td><a href="https://metacpan.org/author/JJNAPIORK">JJNAPIORK</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Classic RenderView action as an action role</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Chemistry-PeriodicTable">Chemistry-PeriodicTable</a></td>
<td><a href="https://metacpan.org/author/GENE">GENE</a></td>
<td>0.0100</td>
<td>0.0400</td>
<td>Provide access to chemical element properties</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/ConstantCalculus-CircleConstant">ConstantCalculus-CircleConstant</a></td>
<td><a href="https://metacpan.org/author/ZTENRETEP">ZTENRETEP</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Perl extension for calculating the circle constant in high accurccy.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Date-Parse-Modern">Date-Parse-Modern</a></td>
<td><a href="https://metacpan.org/author/BAKERSCOT">BAKERSCOT</a></td>
<td>0.1</td>
<td>0.4</td>
<td>Provide string to unixtime conversions</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Domain-Details">Domain-Details</a></td>
<td><a href="https://metacpan.org/author/RWP">RWP</a></td>
<td>1.230280</td>
<td>0.230310</td>
<td>Domain class with DNS/SSL/WHOIS fields</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/EasySpiderTCP">EasySpiderTCP</a></td>
<td><a href="https://metacpan.org/author/SENGER">SENGER</a></td>
<td>v1.0.1</td>
<td>v1.0.1</td>
<td>Automated interface to the Wikipedia</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Error-Show">Error-Show</a></td>
<td><a href="https://metacpan.org/author/DRCLAW">DRCLAW</a></td>
<td>v0.1.0</td>
<td>v0.1.1</td>
<td>Show context around syntax errors and exceptions</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Excel-PowerPivot-Utils">Excel-PowerPivot-Utils</a></td>
<td><a href="https://metacpan.org/author/DAMI">DAMI</a></td>
<td>0.1</td>
<td>0.1</td>
<td>utilities for scripting Power Pivot models within Excel workbooks</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Exporter-Almighty">Exporter-Almighty</a></td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>0.001000</td>
<td>0.001003</td>
<td>combining Exporter::Tiny with some other stuff for added power</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Fedora-RPM-Spec-License">Fedora-RPM-Spec-License</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Handle Fedora RPM spec license string.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/File-Replace-Fancy">File-Replace-Fancy</a></td>
<td><a href="https://metacpan.org/author/HAUKEX">HAUKEX</a></td>
<td>0.16</td>
<td>0.18</td>
<td>Perl extension that extends the File::Replace module</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/File-Replace-Inplace">File-Replace-Inplace</a></td>
<td><a href="https://metacpan.org/author/HAUKEX">HAUKEX</a></td>
<td>0.16</td>
<td>0.18</td>
<td>Emulation of Perl's -i switch via File::Replace</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Genealogy-Wills">Genealogy-Wills</a></td>
<td><a href="https://metacpan.org/author/NHORNE">NHORNE</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Lookup in a database of wills</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Geo-Location-TimeZoneFinder">Geo-Location-TimeZoneFinder</a></td>
<td><a href="https://metacpan.org/author/VOEGELAS">VOEGELAS</a></td>
<td>1.000</td>
<td>1.000</td>
<td>Map geographic coordinates to time zone names</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/License-SPDX">License-SPDX</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.03</td>
<td>Object for SPDX licenses handling.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Lingua-RU-Numeral">Lingua-RU-Numeral</a></td>
<td><a href="https://metacpan.org/author/DONANGEL">DONANGEL</a></td>
<td>0.03</td>
<td>0.031</td>
<td>Perl extension for generate Russian wording of numerals from the natural numbers and 0 (zero).</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Merge-CodeBlock">Merge-CodeBlock</a></td>
<td><a href="https://metacpan.org/author/LNATION">LNATION</a></td>
<td>0.01</td>
<td>0.01</td>
<td>merge via code blocks</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Module-Release-Select">Module-Release-Select</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.002</td>
<td>Notation to select release(s)</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Mojolicious-Plugin-Kinde">Mojolicious-Plugin-Kinde</a></td>
<td><a href="https://metacpan.org/author/CNG">CNG</a></td>
<td>v0.0.2</td>
<td>v0.0.2</td>
<td>A Mojo helper and route condition to extract Kinde auth header, verify JWT token, and return the claims</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/MooX-Role-HasLogger">MooX-Role-HasLogger</a></td>
<td><a href="https://metacpan.org/author/SVW">SVW</a></td>
<td>0.001</td>
<td>0.001001</td>
<td>Moo role that provides a logger attribute</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Music-Chord-Progression-NRO">Music-Chord-Progression-NRO</a></td>
<td><a href="https://metacpan.org/author/GENE">GENE</a></td>
<td>0.0100</td>
<td>0.0307</td>
<td>Generate Neo-Riemann chord progressions</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Nefarious">Nefarious</a></td>
<td><a href="https://metacpan.org/author/LNATION">LNATION</a></td>
<td>0.01</td>
<td>0.02</td>
<td>wicked or criminal objects.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Neo4j-Error">Neo4j-Error</a></td>
<td><a href="https://metacpan.org/author/AJNN">AJNN</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Common Neo4j exception representations</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/OpenData-ShortNumberInfo">OpenData-ShortNumberInfo</a></td>
<td><a href="https://metacpan.org/author/RWP">RWP</a></td>
<td>0.1</td>
<td>0.1</td>
<td>Perl interface to OpenData ShortNumberInfo web service</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Perinci-Examples-HTML">Perinci-Examples-HTML</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Examples related to HTML form generation</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Perl-Critic-Policy-Subroutines-ProhibitLvalueMethods">Perl-Critic-Policy-Subroutines-ProhibitLvalueMethods</a></td>
<td><a href="https://metacpan.org/author/HAARG">HAARG</a></td>
<td>0.001000</td>
<td>0.001000</td>
<td>Prohibit Methods being used as lvalues</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Pod-CopyrightYears">Pod-CopyrightYears</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.02</td>
<td>Object for copyright years changing in POD.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Project2-Gantt">Project2-Gantt</a></td>
<td><a href="https://metacpan.org/author/BRAMOS">BRAMOS</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Generate Gantt images</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Regexp-Melody">Regexp-Melody</a></td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>0.001000</td>
<td>0.001000</td>
<td>Melody is a language that compiles to regular expressions, while aiming to be more readable and maintainable</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Require-HookChain-source-dzil_build">Require-HookChain-source-dzil_build</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.001</td>
<td>0.001</td>
<td>Load module source code from Dist::Zilla build files</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Require-HookChain-source-metacpan">Require-HookChain-source-metacpan</a></td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>0.005</td>
<td>0.005</td>
<td>Prepend a piece of code to module source</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Role-Tiny-MonkeyPatch">Role-Tiny-MonkeyPatch</a></td>
<td><a href="https://metacpan.org/author/SCESANO">SCESANO</a></td>
<td>0.001</td>
<td>0.002</td>
<td>monkey patch roles into existing classes</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/SPVM-File-Basename">SPVM-File-Basename</a></td>
<td><a href="https://metacpan.org/author/KIMOTO">KIMOTO</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Parsing File Path into Directory and Base Name.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Spreadsheet-ReadGnumeric">Spreadsheet-ReadGnumeric</a></td>
<td><a href="https://metacpan.org/author/RGRJR">RGRJR</a></td>
<td>0.1</td>
<td>0.1</td>
<td>turn a Gnumeric file into a Spreadsheet::Read data structure</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Story-Interact">Story-Interact</a></td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>0.001000</td>
<td>0.001006</td>
<td>tools for writing (and reading) an interactive story</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Story-Interact-WWW">Story-Interact-WWW</a></td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>0.001000</td>
<td>0.001001</td>
<td>mojolicious app to read interactive stories</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/String-License">String-License</a></td>
<td><a href="https://metacpan.org/author/JONASS">JONASS</a></td>
<td>v0.0.1</td>
<td>v0.0.4</td>
<td>detect source code license statements in a text string</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/String-UpdateYears">String-UpdateYears</a></td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>0.01</td>
<td>0.01</td>
<td>Look for year or years range in string and update years</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/TOBYINK-Test-Template">TOBYINK-Test-Template</a></td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>0.001000</td>
<td>0.001000</td>
<td>Skeleton distribution for testing purposes</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Terse-Plugin-DBI">Terse-Plugin-DBI</a></td>
<td><a href="https://metacpan.org/author/LNATION">LNATION</a></td>
<td>0.01</td>
<td>0.01</td>
<td>DBI in Terse</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Test-Tk">Test-Tk</a></td>
<td><a href="https://metacpan.org/author/HANJE">HANJE</a></td>
<td>1.00</td>
<td>2.02</td>
<td>Testing Tk widgets.</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Text-ASCIITable-EasyTable">Text-ASCIITable-EasyTable</a></td>
<td><a href="https://metacpan.org/author/BIGFOOT">BIGFOOT</a></td>
<td>0.01</td>
<td>1.001</td>
<td>Create ASCII tables easily</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Text-Treesitter">Text-Treesitter</a></td>
<td><a href="https://metacpan.org/author/PEVANS">PEVANS</a></td>
<td>0.01</td>
<td>0.06</td>
<td>Perl binding for tree-sitter</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/Tie-Handle-Base">Tie-Handle-Base</a></td>
<td><a href="https://metacpan.org/author/HAUKEX">HAUKEX</a></td>
<td>0.16</td>
<td>0.18</td>
<td>A base class for tied filehandles</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/WebService-DS-SOP-Auth-V1_1">WebService-DS-SOP-Auth-V1_1</a></td>
<td><a href="https://metacpan.org/author/DSSYSTEM">DSSYSTEM</a></td>
<td>0.05</td>
<td>0.05</td>
<td>SOP version 1.1 authentication module</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/XML-XPath-Helper-Const">XML-XPath-Helper-Const</a></td>
<td><a href="https://metacpan.org/author/AAHAZRED">AAHAZRED</a></td>
<td>0.01</td>
<td>0.01</td>
<td>The great new XML::XPath::Helper::Const!</td>
</tr>
<tr>
<td><a href="https://metacpan.org/release/YAML-PP-Schema-Env">YAML-PP-Schema-Env</a></td>
<td><a href="https://metacpan.org/author/SREZIC">SREZIC</a></td>
<td>0.01</td>
<td>0.01</td>
<td>YAML::PP schema for evaluating environment variables</td>
</tr>
</table>
<h3>Stats</h3>
<p>Number of new CPAN distributions this period: <b>58</b></p>
<p>Number of authors releasing new CPAN distributions this period: <b>34</b></p>
<p>Authors by number of new CPAN distributions this period: </p>
<table>
<tr>
<th>No</th>
<th>Author</th>
<th>Distributions</th>
</tr>
<tr>
<td>1</td>
<td><a href="https://metacpan.org/author/PERLANCAR">PERLANCAR</a></td>
<td>8</td>
</tr>
<tr>
<td>2</td>
<td><a href="https://metacpan.org/author/SKIM">SKIM</a></td>
<td>6</td>
</tr>
<tr>
<td>3</td>
<td><a href="https://metacpan.org/author/TOBYINK">TOBYINK</a></td>
<td>5</td>
</tr>
<tr>
<td>4</td>
<td><a href="https://metacpan.org/author/LNATION">LNATION</a></td>
<td>3</td>
</tr>
<tr>
<td>5</td>
<td><a href="https://metacpan.org/author/RWP">RWP</a></td>
<td>3</td>
</tr>
<tr>
<td>6</td>
<td><a href="https://metacpan.org/author/HAUKEX">HAUKEX</a></td>
<td>3</td>
</tr>
<tr>
<td>7</td>
<td><a href="https://metacpan.org/author/GENE">GENE</a></td>
<td>2</td>
</tr>
<tr>
<td>8</td>
<td><a href="https://metacpan.org/author/BRAMOS">BRAMOS</a></td>
<td>2</td>
</tr>
<tr>
<td>9</td>
<td><a href="https://metacpan.org/author/NHORNE">NHORNE</a></td>
<td>1</td>
</tr>
<tr>
<td>10</td>
<td><a href="https://metacpan.org/author/HANJE">HANJE</a></td>
<td>1</td>
</tr>
<tr>
<td>11</td>
<td><a href="https://metacpan.org/author/AAHAZRED">AAHAZRED</a></td>
<td>1</td>
</tr>
<tr>
<td>12</td>
<td><a href="https://metacpan.org/author/SREZIC">SREZIC</a></td>
<td>1</td>
</tr>
<tr>
<td>13</td>
<td><a href="https://metacpan.org/author/CNG">CNG</a></td>
<td>1</td>
</tr>
<tr>
<td>14</td>
<td><a href="https://metacpan.org/author/PEVANS">PEVANS</a></td>
<td>1</td>
</tr>
<tr>
<td>15</td>
<td><a href="https://metacpan.org/author/DRCLAW">DRCLAW</a></td>
<td>1</td>
</tr>
<tr>
<td>16</td>
<td><a href="https://metacpan.org/author/SVW">SVW</a></td>
<td>1</td>
</tr>
<tr>
<td>17</td>
<td><a href="https://metacpan.org/author/ZTENRETEP">ZTENRETEP</a></td>
<td>1</td>
</tr>
<tr>
<td>18</td>
<td><a href="https://metacpan.org/author/JJNAPIORK">JJNAPIORK</a></td>
<td>1</td>
</tr>
<tr>
<td>19</td>
<td><a href="https://metacpan.org/author/SCESANO">SCESANO</a></td>
<td>1</td>
</tr>
<tr>
<td>20</td>
<td><a href="https://metacpan.org/author/KIMOTO">KIMOTO</a></td>
<td>1</td>
</tr>
<tr>
<td>21</td>
<td><a href="https://metacpan.org/author/BRTASTIC">BRTASTIC</a></td>
<td>1</td>
</tr>
<tr>
<td>22</td>
<td><a href="https://metacpan.org/author/SENGER">SENGER</a></td>
<td>1</td>
</tr>
<tr>
<td>23</td>
<td><a href="https://metacpan.org/author/JONASS">JONASS</a></td>
<td>1</td>
</tr>
<tr>
<td>24</td>
<td><a href="https://metacpan.org/author/BAKERSCOT">BAKERSCOT</a></td>
<td>1</td>
</tr>
<tr>
<td>25</td>
<td><a href="https://metacpan.org/author/RGRJR">RGRJR</a></td>
<td>1</td>
</tr>
<tr>
<td>26</td>
<td><a href="https://metacpan.org/author/BIGFOOT">BIGFOOT</a></td>
<td>1</td>
</tr>
<tr>
<td>27</td>
<td><a href="https://metacpan.org/author/DONANGEL">DONANGEL</a></td>
<td>1</td>
</tr>
<tr>
<td>28</td>
<td><a href="https://metacpan.org/author/SKAJI">SKAJI</a></td>
<td>1</td>
</tr>
<tr>
<td>29</td>
<td><a href="https://metacpan.org/author/AJNN">AJNN</a></td>
<td>1</td>
</tr>
<tr>
<td>30</td>
<td><a href="https://metacpan.org/author/DSSYSTEM">DSSYSTEM</a></td>
<td>1</td>
</tr>
<tr>
<td>31</td>
<td><a href="https://metacpan.org/author/UTASHIRO">UTASHIRO</a></td>
<td>1</td>
</tr>
<tr>
<td>32</td>
<td><a href="https://metacpan.org/author/HAARG">HAARG</a></td>
<td>1</td>
</tr>
<tr>
<td>33</td>
<td><a href="https://metacpan.org/author/DAMI">DAMI</a></td>
<td>1</td>
</tr>
<tr>
<td>34</td>
<td><a href="https://metacpan.org/author/VOEGELAS">VOEGELAS</a></td>
<td>1</td>
</tr>
</table>
</div>
    </content>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">dist author first_version latest_version abstract Alien-Font-Vera BRAMOS 0.001 0.013 Perl access to Vera ttf font App-BraveUtils PERLANCAR 0.001 0.001 Utilities related to Brave browser App-CheckDigitsUtils PERLANCAR 0.001 0.001 Utilities related to check digits (CLI for Algorithm::CheckDigits) App-Domain RWP 1.230280 1.230280 Domain class with DNS/SSL/WHOIS fields App-Greple-xlate UTASHIRO 0.01 0.02 translation support module for greple App-Perl-Module-CopyrightYears … <a href="https://perlancar.wordpress.com/2023/02/01/list-of-new-cpan-distributions-jan-2023/" class="more-link">Continue reading <span class="screen-reader-text">List of new CPAN distributions – Jan 2023</span></a></div>
    </summary>
    <author>
      <name>perlancar</name>
    </author>
    <id>http://perlancar.wordpress.com/?p=2007</id>
    <published>2023-02-01T06:51:07Z</published>
    <updated>2023-02-01T06:51:07Z</updated>
    <category term="cpan"/>
    <category term="perl"/>
  </entry>
  <entry>
    <title>US government agencies' opensource projects</title>
    <link rel="alternate" href="https://dev.to/greengorcer/us-government-agencies-opensource-projects-18kc" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><h1>
  
  
  1st <a href="https://osdc.code-maven.com/osdc-2023-01-perl/">OSDC</a> pull request
</h1>

<p>I have been interested in the US government opensource activities since around 2016, so all my OSDC homework entries of the open source projects are in the governments section.</p>

<p>The most interesting project would be <strong><a href="https://github.com/NationalSecurityAgency/ghidra">ghidra</a></strong>. </p>

<p>Back in 2018 I was looking for a reverse compiling tool to look at the binary of <strong>Dominions 5</strong> (it is a play by email 4X game. lots of fun!). IDA pro is really nice but I do not have the budget to purchase a license. </p>

<p>NSA opensourced ghidra right at that moment. It works like a charm on x64 ELF. </p>

<p>NSA's rationale is simple. They <strong>do not have the budget</strong> to keep the tool up to date either, so it is better to opensource the tool and gain support from the community.  5 years later I would say their strategy worked.</p>

<h1>
  
  
  There are joke/parody projects of US government agencies on github
</h1>

<p>Here is an example of <a href="https://github.com/ciagov">CIA</a>.</p>

<p>Considering CIA started a podcast in 2022, we might see an official CIA github account in 2023. After all, CIA does have a large amount of internal software tooling projects.</p>

</div>
    </content>
    <author>
      <name>greengorcer</name>
    </author>
    <id>https://dev.to/greengorcer/us-government-agencies-opensource-projects-18kc</id>
    <published>2023-01-31T02:07:41Z</published>
    <updated>2023-01-31T02:07:41Z</updated>
    <category term="osdc"/>
    <category term="opensource"/>
    <category term="perl"/>
  </entry>
  <entry>
    <title>#601 - The bad apple</title>
    <link rel="alternate" href="https://perlweekly.com/archive/601.html" type="text/html"/>
    <content type="html">&lt;p&gt;Welcome to the Perl Weekly!&lt;/p&gt;
&lt;p&gt;I am ambivalent about writing this and including in the Perl Weekly, but I feel if I don't speak up then how can expect others to do so.&lt;/p&gt;
&lt;p&gt;For another perspective on the subject I'd recommend you read &lt;a href="https://twitter.com/mohashim/status/1619037124711559169"&gt;this thread&lt;/a&gt; by Mohammed Hashim on trust and perspective.&lt;/p&gt;
&lt;p&gt;A couple of weeks ago I received an email full of good old antisemitism. It was clearly indicating that it is from one of the readers of the Perl Weekly. It was a tirade of expressions common to white Christian antisemites. Usually also referred to as white supremacists. It is clear that the sender knew what he was doing was reprehensible as he tried to hide behind an anonymous address. However, I am not sure what he wanted to achieve with this message. I guess he was upset that he cannot physically harm me. This person is also a bit slow. He found out that I am a Jew only now and I definitely did not hide this fact. I wonder what will happen when he understands that the other editor is a Muslim. These white supremacists usually hate them too.&lt;/p&gt;
&lt;p&gt;This past week was the International Holocaust Remembrance day. Both of my parents went through the Holocaust, but at the end they were among the few lucky ones who survived. My father was born in 1917 so he was well aware of the pre-Holocaust rhetoric. I am quite sure he would be shocked by the level of Jew-hatred that goes on the social networks and in the public sphere in general. More or less with impunity. Both from the right and from the left.&lt;/p&gt;
&lt;p&gt;After WWII many Germans said they did not know what was happening. Now we can see what's going on. Unfortunately most people try not to look and don't speak up. They might be afraid to speak up. If they do speak up they usually point to the other side of the political aisle and it gets tagged as partisan politics. The growing anti-Jewish public expressions bother me a lot, but what bothers me even more is that the majority is silent.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;OK, now that I got this off my chest, let me mention the &lt;a href="https://osdc.code-maven.com/"&gt;&lt;b&gt;Open source development course&lt;/b&gt;&lt;/a&gt; I started to teach last week. We had our first session, but if you hurry you can still join us and catch up using the videos. If you are interested &lt;a href="https://osdc.code-maven.com/osdc-2023-01-perl/"&gt;here is the site&lt;/a&gt; that is being generated from the information of the participants. &lt;a href="https://osdc.code-maven.com/osdc-2023-01-public/"&gt;Here is another site&lt;/a&gt; where you can see the participants of a similar course I started 4 weeks ago. If you are interested look at &lt;a href="https://osdc.code-maven.com/c/osdc-2023-01-perl"&gt;this page&lt;/a&gt; for the details on how to sign up.&lt;/p&gt;
&lt;p&gt;Participants in the course are already blogging about it and soon they will start contributing to Perl-based projects. Most likely CPAN distributions. &lt;a href="https://osdc.code-maven.com/c/osdc-2023-01-perl"&gt;&lt;b&gt;Join us!&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enjoy your week!&lt;/p&gt;</content>
    <id>https://perlweekly.com/archive/601.html</id>
    <published>2023-01-30T10:00:00Z</published>
    <updated>2023-01-30T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
    <title>RECAP - The Weekly Challenge - 201</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/recap-challenge-201/" type="text/html"/>
    <content type="text">TABLE OF CONTENTS  01. HEADLINES 02. STAR CONTRIBUTORS 03. CONTRIBUTION STATS 04. GUESTS 05. LANGUAGES 06. CENTURION CLUB 07. DAMIAN CONWAY&amp;rsquo;s CORNER 08. ANDREW SHITOV&amp;rsquo;s CORNER 09. PERL SOLUTIONS 10. RAKU SOLUTIONS 11. PERL &amp;amp; RAKU SOLUTIONS HEADLINES  Thank you Team PWC for your continuous support and encouragement.
STAR CONTRIBUTORS  Following members shared solutions to both tasks in Perl and Raku as well as blogged about it.</content>
    <id>https://theweeklychallenge.org/blog/recap-challenge-201/</id>
    <published>2023-01-30T00:00:00Z</published>
    <updated>2023-01-30T00:00:00Z</updated>
  </entry>
  <entry>
    <title>The Weekly Challenge - 202</title>
    <link rel="alternate" href="https://theweeklychallenge.org/blog/perl-weekly-challenge-202/" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">TABLE OF CONTENTS  01. HEADLINES 02. SPONSOR 03. RECAP 04. PERL REVIEW 05. RAKU REVIEW 06. CHART 07. NEW MEMBERS 08. GUESTS 09. TASK #1: Consecutive Odds 10. TASK #2: Widest Valley HEADLINES  Welcome to the Week #202 of The Weekly Challenge.
Last week, India celebrated Republic Day on 26th January. I have some fond memories from my school days. Singing national anthem and getting sweets. Also watching the republic day parade on TV for hours.</div>
    </content>
    <id>https://theweeklychallenge.org/blog/perl-weekly-challenge-202/</id>
    <published>2023-01-30T00:00:00Z</published>
    <updated>2023-01-30T00:00:00Z</updated>
  </entry>
  <entry>
    <title>How Many Missing Coins?</title>
    <link rel="alternate" href="http://www.rabbitfarm.com/cgi-bin/blosxom/2023/01/29#pwc201" type="text/html"/>
    <content type="html">
&lt;p&gt;&lt;em&gt;The examples used here are from the weekly challenge problem statement and demonstrate 
the working solution.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Part 1&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given an array of unique numbers. Write a script to find out all missing numbers 
in the range 0..$n where $n is the array size.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use boolean;
sub missing_numbers{
    my @numbers = @_;
    my %h;
    do { $h{$_} = undef } for @numbers;
    my @missing = grep { !exists($h{$_}) } 0 .. @numbers;
    return @missing;
}

MAIN:{
    say q/(/ . join(q/, /, missing_numbers(0, 1, 3)) . q/)/;
    say q/(/ . join(q/, /, missing_numbers(0, 1)) . q/)/;
    say q/(/ . join(q/, /, missing_numbers(0, 1, 2, 2)) . q/)/;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-1.pl 
(2)
(2)
(3, 4)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;This problem was a nice refresh on &lt;a href="https://perldoc.perl.org/functions/exists"&gt;exists&lt;/a&gt;, 
which is often confused with &lt;code&gt;defined&lt;/code&gt;. Here we want to see if the hash key &lt;em&gt;exists&lt;/em&gt; at 
all and so the use is appropriate. If we had wanted to see if the value keyed was defined,
well, that is the use for &lt;code&gt;defined&lt;/code&gt;! &lt;/p&gt;

&lt;h2&gt;Part 2&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given an integer, $n &gt; 0. Write a script to determine the number of ways of 
putting $n pennies in a row of piles of ascending heights from left to right.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use AI::Prolog;
use Hash::MultiKey;

MAIN:{
    my $S = $ARGV[0];
    my $C = "[" . $ARGV[1] . "]";

    my $prolog = do{
        local $/;
        &amp;lt;DATA&amp;gt;;
    }; 
    $prolog =~ s/_COINS_/$C/g;
    $prolog =~ s/_SUM_/$S/g;
    $prolog = AI::Prolog-&gt;new($prolog); 
    $prolog-&gt;query("sum(Coins).");
    my %h;
    tie %h, "Hash::MultiKey";
    while(my $result = $prolog-&gt;results){
        my @s = sort @{$result-&gt;[1]};
        $h{\@s} = undef;
    }
    for my $k ( sort { @{$b} &lt;=&gt; @{$a} } keys %h){
        print "(" . join(",", @{$k}) . ")";
        print "\n";
    }
}

__DATA__
member(X,[X|_]).
member(X,[_|T]) :- member(X,T).

coins(_COINS_).

sum(Coins):-
    sum([], Coins, 0).

sum(Coins, Coins, _SUM_). 

sum(Partial, Coins, Sum):-   
    Sum &lt; _SUM_, 
    coins(L),
    member(X,L),
    S is Sum + X,
    sum([X | Partial], Coins, S). 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-2.pl 5 1,2,3,4,5
(1,1,1,1,1)
(1,1,1,2)
(1,2,2)
(1,1,3)
(1,4)
(2,3)
(5)

&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;The approach here is the same that I used for the &lt;em&gt;Coins Sum&lt;/em&gt; problem from 
&lt;a href="https://adamcrussell.livejournal.com/17614.html"&gt;TWC 075&lt;/a&gt;. The only change is the added
sort by the length of the "piles".&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-201/"&gt;Challenge 201&lt;/a&gt;&lt;/p&gt;</content>
    <id>http://www.rabbitfarm.com/cgi-bin/blosxom/perl/pwc201</id>
    <published>2023-01-29T18:30:00-05:00</published>
    <updated>2023-01-29T18:30:00-05:00</updated>
    <category term="/perl"/>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-6812133711770662391</id>
    <published>2023-01-28T21:54:00.000+01:00</published>
    <updated>2023-01-28T21:54:57.491+01:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(cdxxix) 15 great CPAN modules released last week</title>
    <content type="html">Updates for &lt;i&gt;great CPAN modules&lt;/i&gt; released last week. A module is considered &lt;i&gt;great&lt;/i&gt; if its favorites count is greater or equal than 12.&lt;br/&gt;&lt;br/&gt;&lt;ol&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/GARU/App-cpanminus-reporter-0.18' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;App::cpanminus::reporter&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - send cpanm output to CPAN Testers &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.18&lt;/strong&gt; on 2023-01-23&lt;/li&gt;  &lt;li&gt;Votes: 36&lt;/li&gt;  &lt;li&gt;Previous version: 0.17 was 6 years, 8 months, 29 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TODDR/autodie-2.35' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;autodie&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Replace functions with ones that succeed or die with lexical scope &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.35&lt;/strong&gt; on 2023-01-27&lt;/li&gt;  &lt;li&gt;Votes: 58&lt;/li&gt;  &lt;li&gt;Previous version: 2.34 was 2 years, 5 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TODDR/Exporter-5.77' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Exporter&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Implements default import method for modules &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;5.77&lt;/strong&gt; on 2023-01-23&lt;/li&gt;  &lt;li&gt;Votes: 27&lt;/li&gt;  &lt;li&gt;Previous version: 5.74 was 3 years, 3 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/DDICK/Firefox-Marionette-1.35' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Firefox::Marionette&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Automate the Firefox browser with the Marionette protocol &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.35&lt;/strong&gt; on 2023-01-22&lt;/li&gt;  &lt;li&gt;Votes: 14&lt;/li&gt;  &lt;li&gt;Previous version: 0.77 was 3 years, 6 months, 15 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/MAUKE/Function-Parameters-2.001005' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Function::Parameters&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - define functions and methods with parameter lists ("subroutine signatures") &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.001005&lt;/strong&gt; on 2023-01-27&lt;/li&gt;  &lt;li&gt;Votes: 56&lt;/li&gt;  &lt;li&gt;Previous version: 2.001004 was 7 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TODDR/IO-1.51' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;IO&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Perl core IO modules &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.51&lt;/strong&gt; on 2023-01-23&lt;/li&gt;  &lt;li&gt;Votes: 57&lt;/li&gt;  &lt;li&gt;Previous version: 1.50 was 8 months, 20 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/SULLR/IO-Socket-SSL-2.081' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;IO::Socket::SSL&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Nearly transparent SSL encapsulation for IO::Socket::INET. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.081&lt;/strong&gt; on 2023-01-25&lt;/li&gt;  &lt;li&gt;Votes: 46&lt;/li&gt;  &lt;li&gt;Previous version: 2.080 was 7 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/SRI/Mojolicious-Plugin-AssetPack-2.14' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Mojolicious::Plugin::AssetPack&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Compress and convert CSS, Less, Sass, JavaScript and CoffeeScript files &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.14&lt;/strong&gt; on 2023-01-27&lt;/li&gt;  &lt;li&gt;Votes: 49&lt;/li&gt;  &lt;li&gt;Previous version: 2.13 was 1 year, 10 months, 14 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/ETHER/Moose-2.2203' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Moose&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - A postmodern object system for Perl 5 &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;2.2203&lt;/strong&gt; on 2023-01-22&lt;/li&gt;  &lt;li&gt;Votes: 325&lt;/li&gt;  &lt;li&gt;Previous version: 2.2202 was 8 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/SALVA/Net-OpenSSH-0.83' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Net::OpenSSH&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Perl SSH client package implemented on top of OpenSSH &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.83&lt;/strong&gt; on 2023-01-22&lt;/li&gt;  &lt;li&gt;Votes: 39&lt;/li&gt;  &lt;li&gt;Previous version: 0.82 was 10 months, 17 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/MREISNER/PLS-0.905' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;PLS&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Perl Language Server &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.905&lt;/strong&gt; on 2023-01-21&lt;/li&gt;  &lt;li&gt;Votes: 12&lt;/li&gt;  &lt;li&gt;Previous version: 0.902 was 4 months, 22 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/KIMOTO/SPVM-0.9686' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;SPVM&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - SPVM Language &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.9686&lt;/strong&gt; on 2023-01-27&lt;/li&gt;  &lt;li&gt;Votes: 26&lt;/li&gt;  &lt;li&gt;Previous version: 0.9683 was 7 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/EXODIST/Test2-Harness-1.000142' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Test2::Harness&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - A new and improved test harness with better Test2 integration. &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.000142&lt;/strong&gt; on 2023-01-25&lt;/li&gt;  &lt;li&gt;Votes: 13&lt;/li&gt;  &lt;li&gt;Previous version: 1.000141 was 1 month, 10 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/TODDR/Tie-File-1.06' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;Tie::File&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Access the lines of a disk file via a Perl array &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;1.06&lt;/strong&gt; on 2023-01-23&lt;/li&gt;  &lt;li&gt;Votes: 14&lt;/li&gt;  &lt;li&gt;Previous version: 1.05 was 2 years, 11 months, 27 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://metacpan.org/release/INGY/YAML-LibYAML-0.86' target='_blank'&gt;&lt;b&gt;&lt;span style='font-family: Courier New, Courier, monospace;'&gt;YAML::LibYAML&lt;/span&gt;&lt;/b&gt;&lt;/a&gt; - Perl YAML Serialization using XS and libyaml &lt;ul&gt;  &lt;li&gt;Version: &lt;strong&gt;0.86&lt;/strong&gt; on 2023-01-26&lt;/li&gt;  &lt;li&gt;Votes: 46&lt;/li&gt;  &lt;li&gt;Previous version: 0.85 was 4 months, 14 days before&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/6812133711770662391/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2023/01/cdxxix-15-great-cpan-modules-released.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6812133711770662391"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/6812133711770662391"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2023/01/cdxxix-15-great-cpan-modules-released.html" title="(cdxxix) 15 great CPAN modules released last week"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
    <id>tag:blogger.com,1999:blog-5910101498857524639.post-1767466851472459370</id>
    <published>2023-01-28T21:51:00.002+01:00</published>
    <updated>2023-01-28T21:51:20.233+01:00</updated>
    <category scheme="http://www.blogger.com/atom/ns#" term="cpan"/>
    <category scheme="http://www.blogger.com/atom/ns#" term="perl"/>
    <title type="text">(dxlii) metacpan weekly report</title>
    <content type="html">&lt;p&gt;This is the weekly favourites list of CPAN distributions. Votes count: 46&lt;/p&gt;&lt;p&gt;This week there isn't any remarkable distribution&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Build date: 2023/01/28 20:50:55 GMT&lt;/p&gt;&lt;br/&gt;&lt;p&gt;Clicked for &lt;u&gt;first time&lt;/u&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Alien::Role::Dino" target="_blank"&gt;Alien::Role::Dino&lt;/a&gt; - Experimental support for dynamic share Alien install&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/AnyEvent::RipeRedis::Cluster" target="_blank"&gt;AnyEvent::RipeRedis::Cluster&lt;/a&gt; - Non-blocking Redis Cluster client&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/AnyEvent::Stomper" target="_blank"&gt;AnyEvent::Stomper&lt;/a&gt; - Flexible non-blocking STOMP client&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Chemistry::Harmonia" target="_blank"&gt;Chemistry::Harmonia&lt;/a&gt; - Decision of simple and difficult chemical puzzles.&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Lingua::RU::Numeral" target="_blank"&gt;Lingua::RU::Numeral&lt;/a&gt; - Perl extension for generate Russian wording of numerals from the natural numbers and 0 (zero).&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Math::Assistant" target="_blank"&gt;Math::Assistant&lt;/a&gt; - functions for various exact algebraic calculations&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Task::BeLike::RJBS" target="_blank"&gt;Task::BeLike::RJBS&lt;/a&gt; - be more like RJBS -- use the modules he likes!&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;p&gt;&lt;u&gt;Increasing&lt;/u&gt; its reputation:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/ack" target="_blank"&gt;ack&lt;/a&gt; (+1=127)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/AnyEvent::RipeRedis" target="_blank"&gt;AnyEvent::RipeRedis&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/App::Cmd" target="_blank"&gt;App::Cmd&lt;/a&gt; (+1=45)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/App::cpanminus" target="_blank"&gt;App::cpanminus&lt;/a&gt; (+1=271)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/App::perlbrew" target="_blank"&gt;App::perlbrew&lt;/a&gt; (+1=172)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Archive::Tar::Wrapper" target="_blank"&gt;Archive::Tar::Wrapper&lt;/a&gt; (+1=6)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Ask" target="_blank"&gt;Ask&lt;/a&gt; (+1=11)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/autodie" target="_blank"&gt;autodie&lt;/a&gt; (+1=58)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/autovivification" target="_blank"&gt;autovivification&lt;/a&gt; (+1=26)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Bitcoin::BIP39" target="_blank"&gt;Bitcoin::BIP39&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/CPAN" target="_blank"&gt;CPAN&lt;/a&gt; (+1=37)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Devel::MAT" target="_blank"&gt;Devel::MAT&lt;/a&gt; (+1=29)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Devel::MAT::Tool::Object::Pad" target="_blank"&gt;Devel::MAT::Tool::Object::Pad&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Domain::PublicSuffix" target="_blank"&gt;Domain::PublicSuffix&lt;/a&gt; (+1=7)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Exporter::Easy" target="_blank"&gt;Exporter::Easy&lt;/a&gt; (+1=5)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/ExtUtils::MakeMaker" target="_blank"&gt;ExtUtils::MakeMaker&lt;/a&gt; (+1=52)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Feature::Compat::Class" target="_blank"&gt;Feature::Compat::Class&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/IO::Async" target="_blank"&gt;IO::Async&lt;/a&gt; (+1=69)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/libintl::perl" target="_blank"&gt;libintl::perl&lt;/a&gt; (+1=9)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Memory::Stats" target="_blank"&gt;Memory::Stats&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Memory::Usage" target="_blank"&gt;Memory::Usage&lt;/a&gt; (+1=7)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Minion" target="_blank"&gt;Minion&lt;/a&gt; (+1=92)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Mo" target="_blank"&gt;Mo&lt;/a&gt; (+1=40)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Mojolicious" target="_blank"&gt;Mojolicious&lt;/a&gt; (+1=478)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/MOP" target="_blank"&gt;MOP&lt;/a&gt; (+1=10)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Neo4j::Bolt" target="_blank"&gt;Neo4j::Bolt&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Neo4j::Driver" target="_blank"&gt;Neo4j::Driver&lt;/a&gt; (+1=4)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::Domain::ExpireDate" target="_blank"&gt;Net::Domain::ExpireDate&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::SFTP::Foreign" target="_blank"&gt;Net::SFTP::Foreign&lt;/a&gt; (+1=24)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Net::SFTP::Foreign::Backend::Net_SSH2" target="_blank"&gt;Net::SFTP::Foreign::Backend::Net_SSH2&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Number::Bytes::Human" target="_blank"&gt;Number::Bytes::Human&lt;/a&gt; (+1=9)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/PadWalker" target="_blank"&gt;PadWalker&lt;/a&gt; (+1=26)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Paws" target="_blank"&gt;Paws&lt;/a&gt; (+1=55)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Proc::Simple" target="_blank"&gt;Proc::Simple&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Redis::ClusterRider" target="_blank"&gt;Redis::ClusterRider&lt;/a&gt; (+1=3)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Term::ANSIColor" target="_blank"&gt;Term::ANSIColor&lt;/a&gt; (+1=59)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Text::CSV" target="_blank"&gt;Text::CSV&lt;/a&gt; (+1=72)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/Type::Tiny" target="_blank"&gt;Type::Tiny&lt;/a&gt; (+1=134)&lt;/li&gt;&lt;li&gt;&lt;a href="https://metacpan.org/module/WordPress::XMLRPC" target="_blank"&gt;WordPress::XMLRPC&lt;/a&gt; (+1=2)&lt;/li&gt;&lt;/ul&gt;</content>
    <link rel="replies" type="application/atom+xml" href="https://niceperl.blogspot.com/feeds/1767466851472459370/comments/default" title="Enviar comentarios"/>
    <link rel="replies" type="text/html" href="https://niceperl.blogspot.com/2023/01/dxlii-metacpan-weekly-report.html#comment-form" title="0 comentarios"/>
    <link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/1767466851472459370"/>
    <link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/5910101498857524639/posts/default/1767466851472459370"/>
    <link rel="alternate" type="text/html" href="https://niceperl.blogspot.com/2023/01/dxlii-metacpan-weekly-report.html" title="(dxlii) metacpan weekly report"/>
    <author>
      <name>Unknown</name>
      <email>noreply@blogger.com</email>
      <gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif"/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <title>#600 - 600th edition and still going ...</title>
    <link rel="alternate" href="https://perlweekly.com/archive/600.html" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Hi there,</p>
<p>Last week, <strong>Team PWC</strong> celebrated the <a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-200">200th week</a> and today we are presenting <strong>600th edition</strong>. Kudos to all the editors, current and past for the care and affections. It feels nice to be associated with such a popular events.</p>
<p>I would also like to thank all the die hard fans of the <strong>Perl Weekly Newsletter</strong> for their support and constructive suggestions from time to time. It really helps me to focus on things important to the readers. I know it is not easy to do this every week but the love and affection we get works like a magic.</p>
<p>I remember there was time when blogging was the only source of information but now a days we have plenty of platforms where you get usefull informations. You know what I mean and where you can catch us. I love having 2-ways dicussion on any topics related to Perl. It is something I always encourage if you have spare time. I have seen how young blood getting involved in so many exciting things about Perl, for example on <strong>Telegram</strong>. Although I don't get time to take part in the discussion but I do watch how the discussion follow through. I have senior member of <strong>Perl Community</strong> helping young blood with their experiences. It would be unfair to name few here. You know who I am talking about. I salute to all those who keep <strong>Perl</strong> alive.</p>
<p>If you have any ideas/suggestions then please do share with us. I would to hear your point of views. Enjoy the rest of the newsletter till then.</p></div>
    </content>
    <id>https://perlweekly.com/archive/600.html</id>
    <published>2023-01-23T10:00:00Z</published>
    <updated>2023-01-23T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
  <title>Call for Grant Proposals: January 2023 Round</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/saiftynet"/>
  <id>tag:news.perlfoundation.org,2023-01-20:/post/saiftynet</id>
  <published>2023-01-20T14:57:00</published>
  <updated>2023-01-20T14:57:00</updated>
  <summary>
  <![CDATA[
     The Grants Committee is accepting grant proposals all the time. We evaluate them every two months and another round is starting. If you have an idea for doing some work that will benefit the Perl or Raku communities, please consider submitting a grant application. The application deadline for this round is 23:59 January 29th, 2023, UTC. We will publish the received applications, get community feedback through February 4th, and we 
   ]]>
  </summary>
  <author>
    <name>Saif Ahmed</name>
  </author>
  <category term="Grants" scheme="http://www.sixapart.com/ns/types#category"/>
  <category term="Perl 5 Development" scheme="http://www.sixapart.com/ns/types#category"/>
  <category term="Raku Development" scheme="http://www.sixapart.com/ns/types#category"/>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
     <p>The Grants Committee is accepting grant proposals all the time. We evaluate them every two months and another round is starting.</p>

<p>If you have an idea for doing some work that will benefit the Perl or Raku communities, please consider submitting a grant application. The application deadline for this round is 23:59 January 29th, 2023, UTC. We will publish the received applications, get community feedback through February 4th, and we will conclude the process shortly thereafter.</p>

<p>We now accept grant requests for core Perl and Raku development. There are some eligibility requirements that must be met for each language when submitting a grant. For Perl:
 * The applicant must be a contributor to the Perl core.
 *  The application must be endorsed by one or more people with commit rights to the Perl core.</p>

<p>For Raku:
 * The applicant must be a contributor to the Raku language specification or one of its implementations.
 * The application must be endorsed by one or more people in Raku Steering Council.</p>

<p>For more information, see <a href="https://news.perlfoundation.org/post/grants_committee_expanded_role">this blog post</a>.</p>

<p>To apply, please read <a href="https://www.perlfoundation.org/how-to-write-a-proposal.html">How to Write a Proposal</a>, <a href="https://www.perlfoundation.org/grants-committee.html">GC Charter, Rules of Operation</a> and <a href="https://www.perlfoundation.org/running-grants.html">Running Grants List</a> will also help you understand how the grant process works. We also got some <a href="https://grants.perlfoundation.org/">grant ideas</a> from the community. Grant applications may be submitted via <a href="https://docs.google.com/forms/d/16seYhrMjz8rgsau9e1MtwYY0fHB81mVKm-0SD6Ynty0/viewform">this Google Form</a>.</p>

<p>We will confirm the receipt of application by no later than January 30th.</p>

<p>If you have further questions, please contact me at tpf-grants-secretary at perl-foundation.org.</p>

    ]]>
  </content>
</entry>
  <entry>
  <title>Retirement Announcement - Dave Rolsky</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/retirementdave"/>
  <id>tag:news.perlfoundation.org,2023-01-20:/post/retirementdave</id>
  <published>2023-01-20T13:03:53</published>
  <updated>2023-01-20T13:03:53</updated>
  <summary>
  <![CDATA[
     After several years of service to The Perl/Raku Foundation, Dave Rolsky is retiring. The board thanks Dave for all of his work, he will be missed. 
   ]]>
  </summary>
  <author>
    <name>Amber Deuel</name>
  </author>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
       <img src="_ra-rel-mnt_/simplecas/fetch_content/cc70f58576aabcc208602bd2e0339e3660864805/clock.png" style="max-width:100%;max-height:100%;padding:20px;" /><br>
     
     <p>After several years of service to The Perl/Raku Foundation, Dave Rolsky is retiring. The board thanks Dave for all of his work, he will be missed. </p>

    ]]>
  </content>
</entry>
  <entry>
  <title>one-liner: read first elements of a huge directory</title>
  <summary type="html"><![CDATA[<p>
At a client we have a networked disk with millions of files. I was trying to list the first few files to see what's going on.
<p>
<b>ls -l | head</b> takes ages, but here is a Perl one-liner to make it work:
<p>
]]></summary>
  <updated>2023-01-17T10:55:01Z</updated>
  <link rel="alternate" type="text/html" href="https://perlmaven.com/oneliner-read-huge-directory"/>  <id>https://perlmaven.com/oneliner-read-huge-directory</id>
  <content type="html"><![CDATA[<p>
At a client we have a networked disk with millions of files. I was trying to list the first few files to see what's going on.
<p>
<b>ls -l | head</b> takes ages, but here is a Perl one-liner to make it work:
<p>
]]></content>
    <author>
      <name>Gabor Szabo</name>
    </author>
</entry>
  <entry>
    <title>#599 - Open Source Development Course for Perl developers</title>
    <link rel="alternate" href="https://perlweekly.com/archive/599.html" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Hi there!</p>
<p>Recently I started to offer a course called <a href="https://osdc.code-maven.com/">Open Source Development Course</a>. The idea is to let participants learn and practice(!) git/github/pull-request/testing/code-coverage/linters/ci/etc. That way they improve their development practices and can also contribute to Open Source projects.</p>
<p>It is a course designed to run for 12-13 weeks with about 5 hours per week workload. It can be either part of a university program or people can take it while they have a full-time job. Every week there is a 1-2 hours long presentation and the rest is hands-on work with my async help.</p>
<p>I'd like to offer a version of this course especially for people who are interested in contributing to Perl-based Open Source projects. The participants will learn Perl-specific tools and processes. All proceedings will go to sponsor the <a href="https://blogs.perl.org/users/book/2023/01/the-perl-toolchain-summit-is-back-in-2023.html">The Perl Toolchain Summit</a>.</p>
<p>Check out <a href="https://osdc.code-maven.com/osdc-public-2023-01-perl">this page</a> for further details and let me know ASAP if you are interested.</p>
<p>Enjoy your week!</p></div>
    </content>
    <id>https://perlweekly.com/archive/599.html</id>
    <published>2023-01-16T10:00:00Z</published>
    <updated>2023-01-16T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
    <title>Multiple Goods</title>
    <link rel="alternate" href="http://www.rabbitfarm.com/cgi-bin/blosxom/2023/01/15#pwc199" type="text/html"/>
    <content type="html">
&lt;p&gt;&lt;em&gt;The examples used here are from the weekly challenge problem statement and demonstrate 
the working solution.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Part 1&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given a list of integers, @list. Write a script to find the total count of Good 
airs.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
sub good_pairs{
    my(@numbers) = @_;
    my @pairs;  
    do{ 
        my $i = $_;
        do{
            my $j = $_;
            push @pairs, [$i, $j] if $numbers[$i] == $numbers[$j] &amp;&amp; $i &lt; $j;  
        } for 0 .. @numbers - 1;
    } for 0 .. @numbers - 1;
    return 0 + @pairs;  
}

MAIN:{
    say good_pairs 1, 2, 3, 1, 1, 3;
    say good_pairs 1, 2, 3;
    say good_pairs 1, 1, 1, 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-1.pl 
4
0
6
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;First off, a pair &lt;code&gt;(i, j)&lt;/code&gt; is called &lt;em&gt;good&lt;/em&gt; if &lt;code&gt;list[i] == list[j]&lt;/code&gt; and &lt;code&gt;i &amp;lt; j&lt;/code&gt;. Secondly,
I have never written a nested loop with this mix of &lt;code&gt;do&lt;/code&gt; blocks and postfix &lt;code&gt;for&lt;/code&gt;, and
I am greatly entertained by it! Perl fans will know that it really isn't all that 
different from the more standard looking do/while construct. A &lt;code&gt;do&lt;/code&gt; block is not really a 
loop, although it can be repeated, and so you cannot use &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;redo&lt;/code&gt;, or &lt;code&gt;next&lt;/code&gt; within
the block. But this is exactly the same case as within a &lt;code&gt;map&lt;/code&gt;, which is what we are 
trying to replicate here, a &lt;code&gt;map&lt;/code&gt; in &lt;em&gt;void context&lt;/em&gt; without actually using &lt;code&gt;map&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Imagine a nested &lt;code&gt;map&lt;/code&gt;, that is basically the same thing as this, but with the more clear
focus on &lt;em&gt;side effects&lt;/em&gt; versus a return value. &lt;/p&gt;

&lt;h2&gt;Part 2&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given an array of integers, @array and three integers $x,$y,$z. Write a script to 
find out total Good Triplets in the given array.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use Math::Combinatorics;
sub good_triplets{
    my($numbers, $x, $y, $z) = @_;
    my $combinations = Math::Combinatorics-&gt;new(count =&gt; 3, data =&gt; [0 .. @{$numbers} - 1]);
    my @combination = $combinations-&gt;next_combination;  
    my @good_triplets;
    {
        my($s, $t, $u) = @combination;
        unless($s &gt;= $t || $t &gt;= $u || $s &gt;= $u){
            push @good_triplets, [@{$numbers}[$s, $t, $u]] if(abs($numbers-&gt;[$s] - $numbers-&gt;[$t]) &lt;= $x &amp;&amp; 
                                                              abs($numbers-&gt;[$t] - $numbers-&gt;[$u]) &lt;= $y &amp;&amp;  
                                                              abs($numbers-&gt;[$s] - $numbers-&gt;[$u]) &lt;= $z);  

    }
        @combination = $combinations-&gt;next_combination;  
        redo if @combination;
    }
    return 0 + @good_triplets;
}

MAIN:{
    say good_triplets([3, 0, 1, 1, 9, 7], 7, 2, 3);
    say good_triplets([1, 1, 2, 2, 3], 0, 0, 1);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-2.pl
4
0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;The approach here is the same that I used for the &lt;em&gt;Magical Triples&lt;/em&gt; problem from 
&lt;a href="http://www.rabbitfarm.com/cgi-bin/blosxom/perl/2022/10/23"&gt;TWC 187&lt;/a&gt;. The module
Math::Combinatorics is used to generate all possible triples of indices. These are then
filtered according to the criteria for good triplets.&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-199/"&gt;Challenge 199&lt;/a&gt;&lt;/p&gt;</content>
    <id>http://www.rabbitfarm.com/cgi-bin/blosxom/perl/pwc199</id>
    <published>2023-01-15T11:22:00-05:00</published>
    <updated>2023-01-15T11:22:00-05:00</updated>
    <category term="/perl"/>
  </entry>
  <entry>
  <title>Fosdem mini grants</title>
  <link rel="alternate" type="text/html" href="https://news.perlfoundation.org/post/fosdem2023"/>
  <id>tag:news.perlfoundation.org,2023-01-11:/post/fosdem2023</id>
  <published>2023-01-11T12:23:33</published>
  <updated>2023-01-11T12:23:33</updated>
  <summary>
  <![CDATA[
     One of the goals TPRF would like to achieve, now that conferences are becoming increasingly available in person, is to spread awareness of current Perl and Raku projects. In support of this goal, TPRF will be issuing a limited number of mini grants of up to $300 to participants interested in holding Perl/Raku based talks in FOSDEM 2023 dev rooms. TPRF has made an intentional decision to not apply for 
   ]]>
  </summary>
  <author>
    <name>Amber Deuel</name>
  </author>  <content type="html" xml:lang="en-us" xml:base="http://news.perlfoundation.org/">
   <![CDATA[
     
       <img src="_ra-rel-mnt_/simplecas/fetch_content/648b3a74e8794037135843200c91d2c94ee9cce5/money.png" style="max-width:100%;max-height:100%;padding:20px;" /><br>
     
     <p>One of the goals TPRF would like to achieve, now that conferences are becoming increasingly available in person, is to spread awareness of current Perl and Raku projects.</p>

<p>In support of this goal, TPRF will be issuing a limited number of mini grants of up to $300 to participants interested in holding Perl/Raku based talks in FOSDEM 2023 dev rooms. TPRF has made an intentional decision to not apply for a dev room, but to encourage talks to be given in other, non-language specific dev rooms instead. This will allow Perl and Raku to be shared with new audiences.</p>

<p>In addition, TPRF will have a 2 day stand at FOSDEM and are in need of volunteers to staff it. Stand  volunteers are also eligible to apply for a mini grant of up to $300 to assist with the cost of attending. </p>

<p>To apply for a FOSDEM mini grant, please send a completed <a href="https://docs.google.com/document/d/1y2Aj7bByeuLJ2V3y0SPFKO0W_xlUVerfYl0ROhlOnjI/copy">application</a> to fosdem2023-grants@perlfoundation.org.</p>

<p>If you have questions, please join our fosdem slack channel, leave a comment below, or send a message to hello@perlfoundation.org</p>

    ]]>
  </content>
</entry>
  <entry>
    <title>#598 - TIOBE and Perl</title>
    <link rel="alternate" href="https://perlweekly.com/archive/598.html" type="text/html"/>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>Hi there,</p>
<p><strong>Happy New Year everyone !!!</strong></p>
<p><strong>Year 2022</strong> saw the biggest release of <strong>Perl v5.36</strong>. It was released with big bang. There were lots of positive vibes around it. I had never seen such noise before. If you missed the fun then you can checkout my <a href="https://github.com/manwar/perl-cool-snippets">GitHub repository</a>.</p>
<p>I am not a big fan of <strong>TIOBE</strong> but came across <a href="https://www.tiobe.com/tiobe-index">TIOBE Index for January 2023</a> talking about <strong>Perl</strong> going up slightly in the index recently. It is refreshing to see the progress. Who knows one day, it would reach the <strong>TOP 5</strong> brackets.</p>
<p>Looking back the participation in <a href="https://theweeklychallenge.org">The Weekly Challenge</a>, it looks promising. Nearly <strong>10K</strong> contributions in <strong>Perl</strong> by the members of <strong>Team PWC</strong> in the last <strong>4 years</strong>.</p>
<p><strong>What is new happening in Perl?</strong></p>
<p>For me, personally, I am looking forward to the modern OO <strong>Corinna</strong> in core <strong>Perl</strong>.</p>
<p><strong>Curtis</strong> wrote an interesting <a href="https://ovid.github.io/articles/converting-object-oriented-code-to-corinna.html">blog post</a> recently where he shared his real life experience with <strong>Corinna</strong>.</p>
<p>Enjoy rest of the newsletter.</p></div>
    </content>
    <id>https://perlweekly.com/archive/598.html</id>
    <published>2023-01-09T10:00:00Z</published>
    <updated>2023-01-09T10:00:00Z</updated>
    <category term="editorial"/>
  </entry>
  <entry>
    <title>Prime the Gaps!</title>
    <link rel="alternate" href="http://www.rabbitfarm.com/cgi-bin/blosxom/2023/01/08#pwc198" type="text/html"/>
    <content type="html">
&lt;p&gt;&lt;em&gt;The examples used here are from the weekly challenge problem statement and demonstrate 
the working solution.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Part 1&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given a list of integers, @list. Write a script to find the total pairs in the 
sorted list where 2 consecutive elements has the max gap. If the list contains less 
then 2 elements then return 0.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
sub largest_gap{
    my(@numbers) = @_;
    my $gap = -1;
    map{ $gap = $numbers[$_] - $numbers[$_ - 1] if $numbers[$_] - $numbers[$_ - 1] &gt; $gap } 1 .. @numbers - 1;  
    return $gap;
}

sub gap_pairs{
    my(@numbers) = @_;
    return 0 if @numbers &lt; 2; 
    my $gap = largest_gap(@numbers);
    my $gap_count;
    map { $gap_count++ if $numbers[$_] - $numbers[$_ - 1] == $gap } 1 .. @numbers - 1;  
    return $gap_count;

}

MAIN:{
    say gap_pairs(3);    
    say gap_pairs(2, 5, 8, 1);    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-1.pl 
0
2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;Probably these two subroutines could be combined into one without too much trouble, but it 
still seems cleaner to me this way.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Do an initial pass over the list to determine the largest gap.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Perform a second pass over the list and count up all pairs which have the maximum gap.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An interesting issue came up. I've been trying to avoid the use of a map in a void 
context. This is just due to the general principal to use map as a function and use its 
return value rather than rely on side effects.&lt;/p&gt;

&lt;p&gt;As part of this reformative effort I have been doing more with for in a postfix position. 
I discovered this when working this problem:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{say $_ if $_ % 2 == 0} for 0 .. 9&lt;/code&gt; will not work. Perl gets confused by the 
postfix &lt;code&gt;if&lt;/code&gt; within the block, apparently.&lt;/p&gt;

&lt;p&gt;But there is a work around! Add &lt;code&gt;do&lt;/code&gt; and all is well.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;do {say $_ if $_ % 2 == 0} for 0 .. 9&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Of course the equivalent &lt;code&gt;map&lt;/code&gt; works just fine as you'd 
expect &lt;code&gt;map {say $_ if $_ % 2 == 0} 0 .. 9)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.perlmonks.org/?node_id=832495"&gt;E. Choroba&lt;/a&gt; pointed out this is due to postfix
&lt;code&gt;for&lt;/code&gt; being a statement modifier which doesn't know what to do with blocks. But why does 
&lt;code&gt;do&lt;/code&gt; fix this? I am still unclear on why that is. Even with the &lt;code&gt;do&lt;/code&gt; it's still a block!
Apparently perl will view it as a statement, for the purposes of the postfix &lt;code&gt;for&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;UPDATE: Turns out that the &lt;code&gt;do {}&lt;/code&gt; construct qualifies as a &lt;em&gt;Simple Statement&lt;/em&gt;. From the
&lt;a href="https://perldoc.perl.org/perlsyn#Simple-Statements"&gt;perldoc&lt;/a&gt;: &lt;em&gt;Note that there are 
operators like eval {}, sub {}, and do {} that look like compound statements, but 
aren't--they're just TERMs in an expression--and thus need an explicit termination when 
used as the last item in a statement.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Part 2&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;You are given an integer $n &gt; 0. Write a script to print the count of primes less 
than $n.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;pre&gt;&lt;code class="perl"&gt;
use v5.36;
use Math::Primality q/is_prime/;

sub prime_count{
    return 0 + grep { is_prime $_ } 2 .. $_[0] - 1;  
}

MAIN:{
    say prime_count(10);  
    say prime_count(15);  
    say prime_count(1);  
    say prime_count(25);  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Sample Run&lt;/h3&gt;

&lt;pre&gt;&lt;code class="shell"&gt;
$ perl perl/ch-2.pl
4
6
0
9
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;The Math::Primality module makes this quite easy! In fact, I am not sure there is that 
much to elaborate on. Check primality using is_prime() and we're done!&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-198/"&gt;Challenge 198&lt;/a&gt;&lt;/p&gt;</content>
    <id>http://www.rabbitfarm.com/cgi-bin/blosxom/perl/pwc198</id>
    <published>2023-01-08T19:30:00-05:00</published>
    <updated>2023-01-08T19:30:00-05:00</updated>
    <category term="/perl"/>
  </entry>
</feed>
